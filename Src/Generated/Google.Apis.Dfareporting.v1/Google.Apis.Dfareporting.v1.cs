// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   DFA Reporting API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/doubleclick-advertisers/reporting/'>DFA Reporting API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20160323 (447)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/doubleclick-advertisers/reporting/'>
 *              https://developers.google.com/doubleclick-advertisers/reporting/</a>
 *      <tr><th>Discovery Name<td>dfareporting
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using DFA Reporting API can be found at
 * <a href='https://developers.google.com/doubleclick-advertisers/reporting/'>https://developers.google.com/doubleclick-advertisers/reporting/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Dfareporting.v1
{
    /// <summary>The Dfareporting Service.</summary>
    public class DfareportingService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DfareportingService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DfareportingService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            dimensionValues = new DimensionValuesResource(this);
            files = new FilesResource(this);
            reports = new ReportsResource(this);
            userProfiles = new UserProfilesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "dfareporting"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/dfareporting/v1/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "dfareporting/v1/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the DFA Reporting API.</summary>
        public class Scope
        {
            /// <summary>View and manage DoubleClick for Advertisers reports</summary>
            public static string Dfareporting = "https://www.googleapis.com/auth/dfareporting";

        }



        private readonly DimensionValuesResource dimensionValues;

        /// <summary>Gets the DimensionValues resource.</summary>
        public virtual DimensionValuesResource DimensionValues
        {
            get { return dimensionValues; }
        }

        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        private readonly ReportsResource reports;

        /// <summary>Gets the Reports resource.</summary>
        public virtual ReportsResource Reports
        {
            get { return reports; }
        }

        private readonly UserProfilesResource userProfiles;

        /// <summary>Gets the UserProfiles resource.</summary>
        public virtual UserProfilesResource UserProfiles
        {
            get { return userProfiles; }
        }
    }

    ///<summary>A base abstract class for Dfareporting requests.</summary>
    public abstract class DfareportingBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new DfareportingBaseServiceRequest instance.</summary>
        protected DfareportingBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Dfareporting parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "dimensionValues" collection of methods.</summary>
    public class DimensionValuesResource
    {
        private const string Resource = "dimensionValues";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DimensionValuesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves list of report dimension values for a list of filters.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile id.</param>
        public virtual QueryRequest Query(Google.Apis.Dfareporting.v1.Data.DimensionValueRequest body, long profileId)
        {
            return new QueryRequest(service, body, profileId);
        }

        /// <summary>Retrieves list of report dimension values for a list of filters.</summary>
        public class QueryRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.DimensionValueList>
        {
            /// <summary>Constructs a new Query request.</summary>
            public QueryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v1.Data.DimensionValueRequest body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v1.Data.DimensionValueRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "query"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/dimensionvalues/query"; }
            }

            /// <summary>Initializes Query parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "files" collection of methods.</summary>
    public class FilesResource
    {
        private const string Resource = "files";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Lists files for a user profile.</summary>
        /// <param name="profileId">The DFA profile id.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Lists files for a user profile.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.FileList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>The DFA profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 10]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The field to sort the list by.</summary>
            /// [default: LAST_MODIFIED_TIME]
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>The field to sort the list by.</summary>
            public enum SortFieldEnum
            {
                /// <summary>Sort by file id.</summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                /// <summary>Sort by 'lastmodifiedAt' field.</summary>
                [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                LASTMODIFIEDTIME,
            }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            /// [default: DESCENDING]
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/files"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "LAST_MODIFIED_TIME",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "DESCENDING",
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "reports" collection of methods.</summary>
    public class ReportsResource
    {
        private const string Resource = "reports";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ReportsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            files = new FilesResource(service);

        }

        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        /// <summary>The "files" collection of methods.</summary>
        public class FilesResource
        {
            private const string Resource = "files";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public FilesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Retrieves a report file.</summary>
            /// <param name="profileId">The DFA profile id.</param>
            /// <param name="reportId">The id of the
            /// report.</param>
            /// <param name="fileId">The id of the report file.</param>
            public virtual GetRequest Get(long profileId, long reportId, long fileId)
            {
                return new GetRequest(service, profileId, reportId, fileId);
            }

            /// <summary>Retrieves a report file.</summary>
            public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.File>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, long profileId, long reportId, long fileId)
                    : base(service)
                {
                    ProfileId = profileId;
                    ReportId = reportId;
                    FileId = fileId;
                    InitParameters();
                }


                /// <summary>The DFA profile id.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>The id of the report.</summary>
                [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ReportId { get; private set; }

                /// <summary>The id of the report file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("fileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long FileId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "userprofiles/{profileId}/reports/{reportId}/files/{fileId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "profileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "profileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "reportId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "reportId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "fileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "fileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists files for a report.</summary>
            /// <param name="profileId">The DFA profile id.</param>
            /// <param name="reportId">The id of the parent
            /// report.</param>
            public virtual ListRequest List(long profileId, long reportId)
            {
                return new ListRequest(service, profileId, reportId);
            }

            /// <summary>Lists files for a report.</summary>
            public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.FileList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                    : base(service)
                {
                    ProfileId = profileId;
                    ReportId = reportId;
                    InitParameters();
                }


                /// <summary>The DFA profile id.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>The id of the parent report.</summary>
                [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ReportId { get; private set; }

                /// <summary>Maximum number of results to return.</summary>
                /// [minimum: 0]
                /// [maximum: 10]
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> MaxResults { get; set; }

                /// <summary>The value of the nextToken from the previous result page.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The field to sort the list by.</summary>
                /// [default: LAST_MODIFIED_TIME]
                [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

                /// <summary>The field to sort the list by.</summary>
                public enum SortFieldEnum
                {
                    /// <summary>Sort by file id.</summary>
                    [Google.Apis.Util.StringValueAttribute("ID")]
                    ID,
                    /// <summary>Sort by 'lastmodifiedAt' field.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                    LASTMODIFIEDTIME,
                }

                /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
                /// [default: DESCENDING]
                [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

                /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
                public enum SortOrderEnum
                {
                    /// <summary>Ascending order.</summary>
                    [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                    ASCENDING,
                    /// <summary>Descending order.</summary>
                    [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                    DESCENDING,
                }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "userprofiles/{profileId}/reports/{reportId}/files"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "profileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "profileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "reportId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "reportId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sortField", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sortField",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = "LAST_MODIFIED_TIME",
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sortOrder", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sortOrder",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = "DESCENDING",
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Deletes a report by its id.</summary>
        /// <param name="profileId">The DFA user profile id.</param>
        /// <param name="reportId">The id of the
        /// report.</param>
        public virtual DeleteRequest Delete(long profileId, long reportId)
        {
            return new DeleteRequest(service, profileId, reportId);
        }

        /// <summary>Deletes a report by its id.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The id of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a report by its id.</summary>
        /// <param name="profileId">The DFA user profile id.</param>
        /// <param name="reportId">The id of the
        /// report.</param>
        public virtual GetRequest Get(long profileId, long reportId)
        {
            return new GetRequest(service, profileId, reportId);
        }

        /// <summary>Retrieves a report by its id.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.Report>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The id of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a report.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile id.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v1.Data.Report body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Creates a report.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.Report>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v1.Data.Report body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v1.Data.Report Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves list of reports.</summary>
        /// <param name="profileId">The DFA user profile id.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves list of reports.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.ReportList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 10]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The field to sort the list by.</summary>
            /// [default: LAST_MODIFIED_TIME]
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>The field to sort the list by.</summary>
            public enum SortFieldEnum
            {
                /// <summary>Sort by report id.</summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                /// <summary>Sort by 'lastModifiedTime' field.</summary>
                [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                LASTMODIFIEDTIME,
                /// <summary>Sort by display name of reports.</summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            /// [default: DESCENDING]
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "LAST_MODIFIED_TIME",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "DESCENDING",
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a report. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile id.</param>
        /// <param name="reportId">The id of the
        /// report.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v1.Data.Report body, long profileId, long reportId)
        {
            return new PatchRequest(service, body, profileId, reportId);
        }

        /// <summary>Updates a report. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.Report>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v1.Data.Report body, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The id of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v1.Data.Report Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Runs a report.</summary>
        /// <param name="profileId">The DFA profile id.</param>
        /// <param name="reportId">The id of the
        /// report.</param>
        public virtual RunRequest Run(long profileId, long reportId)
        {
            return new RunRequest(service, profileId, reportId);
        }

        /// <summary>Runs a report.</summary>
        public class RunRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.File>
        {
            /// <summary>Constructs a new Run request.</summary>
            public RunRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }


            /// <summary>The DFA profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The id of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>If set and true, tries to run the report synchronously.</summary>
            [Google.Apis.Util.RequestParameterAttribute("synchronous", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Synchronous { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "run"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}/run"; }
            }

            /// <summary>Initializes Run parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "synchronous", new Google.Apis.Discovery.Parameter
                    {
                        Name = "synchronous",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a report.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile id.</param>
        /// <param name="reportId">The id of the
        /// report.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v1.Data.Report body, long profileId, long reportId)
        {
            return new UpdateRequest(service, body, profileId, reportId);
        }

        /// <summary>Updates a report.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.Report>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v1.Data.Report body, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The id of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v1.Data.Report Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "userProfiles" collection of methods.</summary>
    public class UserProfilesResource
    {
        private const string Resource = "userProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one user profile by id.</summary>
        /// <param name="profileId">The user profile id.</param>
        public virtual GetRequest Get(long profileId)
        {
            return new GetRequest(service, profileId);
        }

        /// <summary>Gets one user profile by id.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.UserProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>The user profile id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves list of user profiles for a user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Retrieves list of user profiles for a user.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v1.Data.UserProfileList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }
}

namespace Google.Apis.Dfareporting.v1.Data
{    

    /// <summary>Represents a dimension filter.</summary>
    public class DimensionFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension to filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; } 

        /// <summary>Kind of resource this is, in this case dfareporting#dimensionFilter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The value of the dimension to filter for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a DimensionValue resource.</summary>
    public class DimensionValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; } 

        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The ID associated with the value if available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Kind of resource this is, in this case dfareporting#dimensionValue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The value of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

    }    

    /// <summary>Represents the list of DimensionValue resources.</summary>
    public class DimensionValueList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The dimension values returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<DimensionValue> Items { get; set; } 

        /// <summary>Kind of list this is, in this case dfareporting#dimensionValueList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Continuation token used to page through dimension values. To retrieve the next page of results, set
        /// the next request's "pageToken" to the value of this field. The page token is only valid for a limited amount
        /// of time and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

    }    

    /// <summary>Represents a DimensionValuesRequest.</summary>
    public class DimensionValueRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension values should be requested for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; } 

        /// <summary>The end date of the date range for which to retrieve dimension values. A string of the format:
        /// "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>List of filters to filter values by. The filters are ANDed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<DimensionFilter> Filters { get; set; } 

        /// <summary>Kind of request this is, in this case dfareporting#dimensionValueRequest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The start date of the date range for which to retrieve dimension values. A string of the format:
        /// "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a File resource. A File contains the meta-data for a report run. It shows the status of the
    /// run and holds the urls to the generated report data if the run is finished and the status is
    /// "REPORT_AVAILABLE".</summary>
    public class File : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The date range for which the file has report data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
        public virtual File.DateRangeData DateRange { get; set; } 

        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The file name of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>The unique ID of this report file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Kind of resource this is, in this case dfareporting#file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The timestamp in milliseconds since epoch when this file was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual System.Nullable<long> LastModifiedTime { get; set; } 

        /// <summary>The ID of the report this file was generated from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportId")]
        public virtual System.Nullable<long> ReportId { get; set; } 

        /// <summary>The status of the report file, one of: - "PROCESSING" - "REPORT_AVAILABLE" - "FAILED" -
        /// "CANCELLED"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The urls where the completed report file can be downloaded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urls")]
        public virtual File.UrlsData Urls { get; set; } 

        

        /// <summary>The date range for which the file has report data.</summary>
        public class DateRangeData
        {
            /// <summary>The end date of the date range, inclusive. A string of the format: "yyyy-MM-dd".</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
            public virtual string EndDate { get; set; } 

            /// <summary>The start date of the date range, inclusive. A string of the format: "yyyy-MM-dd".</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
            public virtual string StartDate { get; set; } 

        }    

        /// <summary>The urls where the completed report file can be downloaded.</summary>
        public class UrlsData
        {
            /// <summary>Urls for generated CSV data.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("csv")]
            public virtual UrlsData.CsvData Csv { get; set; } 

            

            /// <summary>Urls for generated CSV data.</summary>
            public class CsvData
            {
                /// <summary>The url for downloading the report data through the API.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("apiUrl")]
                public virtual string ApiUrl { get; set; } 

                /// <summary>The url for downloading the report data through a browser.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("browserUrl")]
                public virtual string BrowserUrl { get; set; } 

            }
        }
    }    

    /// <summary>Represents the list of File resources.</summary>
    public class FileList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The files returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<File> Items { get; set; } 

        /// <summary>Kind of list this is, in this case dfareporting#fileList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Continuation token used to page through files. To retrieve the next page of results, set the next
        /// request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time
        /// and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

    }    

    /// <summary>Represents a Report resource.</summary>
    public class Report : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account id this report belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>The report criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("criteria")]
        public virtual Report.CriteriaData Criteria { get; set; } 

        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The file name used when generating report files for this report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>The unique ID identifying this report resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Kind of resource this is, in this case dfareporting#report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The timestamp (in milliseconds since epoch) of when this report was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual System.Nullable<ulong> LastModifiedTime { get; set; } 

        /// <summary>The name of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The user profile id of the owner of this report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ownerProfileId")]
        public virtual System.Nullable<long> OwnerProfileId { get; set; } 

        /// <summary>The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the
        /// relative date range is not "TODAY".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schedule")]
        public virtual Report.ScheduleData Schedule { get; set; } 

        /// <summary>The subbaccount id this report belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountId")]
        public virtual System.Nullable<long> SubAccountId { get; set; } 

        /// <summary>The type of the report, currently only "STANDARD" is supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        

        /// <summary>The report criteria.</summary>
        public class CriteriaData
        {
            /// <summary>Activity group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activities")]
            public virtual CriteriaData.ActivitiesData Activities { get; set; } 

            /// <summary>Custom Rich Media Events group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual CriteriaData.CustomRichMediaEventsData CustomRichMediaEvents { get; set; } 

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual CriteriaData.DateRangeData DateRange { get; set; } 

            /// <summary>The list of filters dimensions are filtered on. Filters for different dimensions are ANDed,
            /// filters for the same dimension are grouped together and ORed.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; } 

            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; } 

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

            

            /// <summary>Activity group.</summary>
            public class ActivitiesData
            {
                /// <summary>List of activity filters. The dimension values need to be all either of type "dfa:activity"
                /// or "dfa:activityGroup".</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("filters")]
                public virtual System.Collections.Generic.IList<DimensionValue> Filters { get; set; } 

                /// <summary>List of names of floodlight activity metrics.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
                public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

            }    

            /// <summary>Custom Rich Media Events group.</summary>
            public class CustomRichMediaEventsData
            {
                /// <summary>List of custom rich media event IDs. Dimension values must be all of type
                /// dfa:richMediaEventTypeIdAndName.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("filteredEventIds")]
                public virtual System.Collections.Generic.IList<DimensionValue> FilteredEventIds { get; set; } 

            }    

            /// <summary>The date range this report should be run for.</summary>
            public class DateRangeData
            {
                /// <summary>The end date of the date range, inclusive. A string of the format: "yyyy-MM-dd".</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
                public virtual string EndDate { get; set; } 

                /// <summary>The date range relative to the date of when the report is run, one of: - "TODAY" -
                /// "YESTERDAY" - "WEEK_TO_DATE" - "MONTH_TO_DATE" - "QUARTER_TO_DATE" - "YEAR_TO_DATE" -
                /// "PREVIOUS_WEEK" - "PREVIOUS_MONTH" - "PREVIOUS_QUARTER" - "PREVIOUS_YEAR" - "LAST_7_DAYS" -
                /// "LAST_30_DAYS" - "LAST_90_DAYS" - "LAST_365_DAYS" - "LAST_24_MONTHS"</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("relativeDateRange")]
                public virtual string RelativeDateRange { get; set; } 

                /// <summary>The start date of the date range, inclusive. A string of the format: "yyyy-MM-
                /// dd".</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
                public virtual string StartDate { get; set; } 

            }
        }    

        /// <summary>The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the
        /// relative date range is not "TODAY".</summary>
        public class ScheduleData
        {
            /// <summary>Whether the schedule is active or not. Must be set to either true or false.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("active")]
            public virtual System.Nullable<bool> Active { get; set; } 

            /// <summary>Defines every how many days, weeks or months the report should be run. Needs to be set when
            /// "repeats" is either "DAILY", "WEEKLY" or "MONTHLY".</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("every")]
            public virtual System.Nullable<int> Every { get; set; } 

            /// <summary>The expiration date when the scheduled report stops running.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("expirationDate")]
            public virtual string ExpirationDate { get; set; } 

            /// <summary>The interval the report is repeated for, one of: - "DAILY", also requires field "every" to be
            /// set. - "WEEKLY", also requires fields "every" and "repeatsOnWeekDays" to be set. - "TWICE_A_MONTH" -
            /// "MONTHLY", also requires fields "every" and "runsOnDayOfMonth" to be set. - "QUARTERLY" -
            /// "YEARLY"</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("repeats")]
            public virtual string Repeats { get; set; } 

            /// <summary>List of week days "WEEKLY" scheduled reports should run on.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("repeatsOnWeekDays")]
            public virtual System.Collections.Generic.IList<string> RepeatsOnWeekDays { get; set; } 

            /// <summary>Enum to define for "MONTHLY" scheduled reports whether reports should be repeated on the same
            /// day of the month as "startDate" or the same day of the week of the month. Possible values are: -
            /// DAY_OF_MONTH - WEEK_OF_MONTH Example: If 'startDate' is Monday, April 2nd 2012 (2012-04-02),
            /// "DAY_OF_MONTH" would run subsequent reports on the 2nd of every Month, and "WEEK_OF_MONTH" would run
            /// subsequent reports on the first Monday of the month.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("runsOnDayOfMonth")]
            public virtual string RunsOnDayOfMonth { get; set; } 

            /// <summary>Start date of date range for which scheduled reports should be run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
            public virtual string StartDate { get; set; } 

        }
    }    

    /// <summary>Represents the list of reports.</summary>
    public class ReportList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The reports returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Report> Items { get; set; } 

        /// <summary>Kind of list this is, in this case dfareporting#reportList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Continuation token used to page through reports. To retrieve the next page of results, set the next
        /// request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time
        /// and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

    }    

    /// <summary>Represents a sorted dimension.</summary>
    public class SortedDimension : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Kind of resource this is, in this case dfareporting#sortedDimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>An optional sort order for the dimension column, one of: - "ASCENDING" - "DESCENDING"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sortOrder")]
        public virtual string SortOrder { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a UserProfile resource.</summary>
    public class UserProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account ID this profile belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>The account name this profile belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountName")]
        public virtual string AccountName { get; set; } 

        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>Kind of resource this is, in this case dfareporting#userProfile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The unique ID of the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profileId")]
        public virtual System.Nullable<long> ProfileId { get; set; } 

        /// <summary>The sub account ID this profile belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountId")]
        public virtual System.Nullable<long> SubAccountId { get; set; } 

        /// <summary>The sub account name this profile belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountName")]
        public virtual string SubAccountName { get; set; } 

        /// <summary>The user name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userName")]
        public virtual string UserName { get; set; } 

    }    

    /// <summary>Represents the list of user profiles.</summary>
    public class UserProfileList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ETag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The user profiles returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<UserProfile> Items { get; set; } 

        /// <summary>Kind of list this is, in this case dfareporting#userProfileList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

    }
}
