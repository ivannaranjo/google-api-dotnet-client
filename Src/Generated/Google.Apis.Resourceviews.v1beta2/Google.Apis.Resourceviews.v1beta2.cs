// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.14.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Compute Engine Instance Groups API Version v1beta2
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/compute/'>Google Compute Engine Instance Groups API</a>
 *      <tr><th>API Version<td>v1beta2
 *      <tr><th>API Rev<td>20160512 (497)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/compute/'>
 *              https://developers.google.com/compute/</a>
 *      <tr><th>Discovery Name<td>resourceviews
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Compute Engine Instance Groups API can be found at
 * <a href='https://developers.google.com/compute/'>https://developers.google.com/compute/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Resourceviews.v1beta2
{
    /// <summary>The Resourceviews Service.</summary>
    public class ResourceviewsService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1beta2";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public ResourceviewsService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public ResourceviewsService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            zoneOperations = new ZoneOperationsResource(this);
            zoneViews = new ZoneViewsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "resourceviews"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/resourceviews/v1beta2/projects/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "resourceviews/v1beta2/projects/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Google Compute Engine Instance Groups API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View your data across Google Cloud Platform services</summary>
            public static string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only";

            /// <summary>View and manage your Google Compute Engine resources</summary>
            public static string Compute = "https://www.googleapis.com/auth/compute";

            /// <summary>View your Google Compute Engine resources</summary>
            public static string ComputeReadonly = "https://www.googleapis.com/auth/compute.readonly";

            /// <summary>View and manage your Google Cloud Platform management resources and deployment status
            /// information</summary>
            public static string NdevCloudman = "https://www.googleapis.com/auth/ndev.cloudman";

            /// <summary>View your Google Cloud Platform management resources and deployment status
            /// information</summary>
            public static string NdevCloudmanReadonly = "https://www.googleapis.com/auth/ndev.cloudman.readonly";

        }



        private readonly ZoneOperationsResource zoneOperations;

        /// <summary>Gets the ZoneOperations resource.</summary>
        public virtual ZoneOperationsResource ZoneOperations
        {
            get { return zoneOperations; }
        }

        private readonly ZoneViewsResource zoneViews;

        /// <summary>Gets the ZoneViews resource.</summary>
        public virtual ZoneViewsResource ZoneViews
        {
            get { return zoneViews; }
        }
    }

    ///<summary>A base abstract class for Resourceviews requests.</summary>
    public abstract class ResourceviewsBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new ResourceviewsBaseServiceRequest instance.</summary>
        protected ResourceviewsBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Resourceviews parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "zoneOperations" collection of methods.</summary>
    public class ZoneOperationsResource
    {
        private const string Resource = "zoneOperations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ZoneOperationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves the specified zone-specific operation resource.</summary>
        /// <param name="project">Name of the project scoping this request.</param>
        /// <param name="zone">Name of the zone
        /// scoping this request.</param>
        /// <param name="operation">Name of the operation resource to return.</param>
        public virtual GetRequest Get(string project, string zone, string operation)
        {
            return new GetRequest(service, project, zone, operation);
        }

        /// <summary>Retrieves the specified zone-specific operation resource.</summary>
        public class GetRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.Operation>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string operation)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Name of the project scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the operation resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/operations/{operation}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of operation resources contained within the specified zone.</summary>
        /// <param name="project">Name of the project scoping this request.</param>
        /// <param name="zone">Name of the zone
        /// scoping this request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves the list of operation resources contained within the specified zone.</summary>
        public class ListRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.OperationList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Name of the project scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Optional. Filter expression for filtering listed resources.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>Optional. Maximum count of results to be returned. Maximum value is 500 and default value is
            /// 500.</summary>
            /// [default: 500]
            /// [minimum: 0]
            /// [maximum: 500]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a
            /// previous list request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/operations"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "zoneViews" collection of methods.</summary>
    public class ZoneViewsResource
    {
        private const string Resource = "zoneViews";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ZoneViewsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Add resources to the view.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual AddResourcesRequest AddResources(Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsAddResourcesRequest body, string project, string zone, string resourceView)
        {
            return new AddResourcesRequest(service, body, project, zone, resourceView);
        }

        /// <summary>Add resources to the view.</summary>
        public class AddResourcesRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.Operation>
        {
            /// <summary>Constructs a new AddResources request.</summary>
            public AddResourcesRequest(Google.Apis.Services.IClientService service, Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsAddResourcesRequest body, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                Body = body;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsAddResourcesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addResources"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}/addResources"; }
            }

            /// <summary>Initializes AddResources parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Delete a resource view.</summary>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual DeleteRequest Delete(string project, string zone, string resourceView)
        {
            return new DeleteRequest(service, project, zone, resourceView);
        }

        /// <summary>Delete a resource view.</summary>
        public class DeleteRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Get the information of a zonal resource view.</summary>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual GetRequest Get(string project, string zone, string resourceView)
        {
            return new GetRequest(service, project, zone, resourceView);
        }

        /// <summary>Get the information of a zonal resource view.</summary>
        public class GetRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.ResourceView>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Get the service information of a resource view or a resource.</summary>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual GetServiceRequest GetService(string project, string zone, string resourceView)
        {
            return new GetServiceRequest(service, project, zone, resourceView);
        }

        /// <summary>Get the service information of a resource view or a resource.</summary>
        public class GetServiceRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsGetServiceResponse>
        {
            /// <summary>Constructs a new GetService request.</summary>
            public GetServiceRequest(Google.Apis.Services.IClientService service, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }

            /// <summary>The name of the resource if user wants to get the service information of the
            /// resource.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ResourceName { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getService"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}/getService"; }
            }

            /// <summary>Initializes GetService parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Create a resource view.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        public virtual InsertRequest Insert(Google.Apis.Resourceviews.v1beta2.Data.ResourceView body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Create a resource view.</summary>
        public class InsertRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Resourceviews.v1beta2.Data.ResourceView body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Resourceviews.v1beta2.Data.ResourceView Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>List resource views.</summary>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>List resource views.</summary>
        public class ListRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Maximum count of results to be returned. Acceptable values are 0 to 5000, inclusive. (Default:
            /// 5000)</summary>
            /// [default: 5000]
            /// [minimum: 0]
            /// [maximum: 5000]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Specifies a nextPageToken returned by a previous list request. This token can be used to
            /// request the next page of results from a previous list request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "5000",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>List the resources of the resource view.</summary>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual ListResourcesRequest ListResources(string project, string zone, string resourceView)
        {
            return new ListResourcesRequest(service, project, zone, resourceView);
        }

        /// <summary>List the resources of the resource view.</summary>
        public class ListResourcesRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsListResourcesResponse>
        {
            /// <summary>Constructs a new ListResources request.</summary>
            public ListResourcesRequest(Google.Apis.Services.IClientService service, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }

            /// <summary>The requested format of the return value. It can be URL or URL_PORT. A JSON object will be
            /// included in the response based on the format. The default format is NONE, which results in no JSON in
            /// the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("format", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FormatEnum> Format { get; set; }

            /// <summary>The requested format of the return value. It can be URL or URL_PORT. A JSON object will be
            /// included in the response based on the format. The default format is NONE, which results in no JSON in
            /// the response.</summary>
            public enum FormatEnum
            {
                [Google.Apis.Util.StringValueAttribute("NONE")]
                NONE,
                [Google.Apis.Util.StringValueAttribute("URL")]
                URL,
                [Google.Apis.Util.StringValueAttribute("URL_PORT")]
                URLPORT,
            }

            /// <summary>The state of the instance to list. By default, it lists all instances.</summary>
            /// [default: ALL]
            [Google.Apis.Util.RequestParameterAttribute("listState", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ListStateEnum> ListState { get; set; }

            /// <summary>The state of the instance to list. By default, it lists all instances.</summary>
            public enum ListStateEnum
            {
                [Google.Apis.Util.StringValueAttribute("ALL")]
                ALL,
                [Google.Apis.Util.StringValueAttribute("RUNNING")]
                RUNNING,
            }

            /// <summary>Maximum count of results to be returned. Acceptable values are 0 to 5000, inclusive. (Default:
            /// 5000)</summary>
            /// [default: 5000]
            /// [minimum: 0]
            /// [maximum: 5000]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Specifies a nextPageToken returned by a previous list request. This token can be used to
            /// request the next page of results from a previous list request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The service name to return in the response. It is optional and if it is not set, all the
            /// service end points will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("serviceName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ServiceName { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listResources"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}/resources"; }
            }

            /// <summary>Initializes ListResources parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "format", new Google.Apis.Discovery.Parameter
                    {
                        Name = "format",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "listState", new Google.Apis.Discovery.Parameter
                    {
                        Name = "listState",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "ALL",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "5000",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "serviceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "serviceName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Remove resources from the view.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual RemoveResourcesRequest RemoveResources(Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsRemoveResourcesRequest body, string project, string zone, string resourceView)
        {
            return new RemoveResourcesRequest(service, body, project, zone, resourceView);
        }

        /// <summary>Remove resources from the view.</summary>
        public class RemoveResourcesRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.Operation>
        {
            /// <summary>Constructs a new RemoveResources request.</summary>
            public RemoveResourcesRequest(Google.Apis.Services.IClientService service, Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsRemoveResourcesRequest body, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                Body = body;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsRemoveResourcesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "removeResources"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}/removeResources"; }
            }

            /// <summary>Initializes RemoveResources parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Update the service information of a resource view or a resource.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">The project name of the resource view.</param>
        /// <param name="zone">The zone name of the
        /// resource view.</param>
        /// <param name="resourceView">The name of the resource view.</param>
        public virtual SetServiceRequest SetService(Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsSetServiceRequest body, string project, string zone, string resourceView)
        {
            return new SetServiceRequest(service, body, project, zone, resourceView);
        }

        /// <summary>Update the service information of a resource view or a resource.</summary>
        public class SetServiceRequest : ResourceviewsBaseServiceRequest<Google.Apis.Resourceviews.v1beta2.Data.Operation>
        {
            /// <summary>Constructs a new SetService request.</summary>
            public SetServiceRequest(Google.Apis.Services.IClientService service, Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsSetServiceRequest body, string project, string zone, string resourceView)
                : base(service)
            {
                Project = project;
                Zone = zone;
                ResourceView = resourceView;
                Body = body;
                InitParameters();
            }


            /// <summary>The project name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The zone name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the resource view.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceView", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceView { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Resourceviews.v1beta2.Data.ZoneViewsSetServiceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setService"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/resourceViews/{resourceView}/setService"; }
            }

            /// <summary>Initializes SetService parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceView", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceView",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Resourceviews.v1beta2.Data
{    

    /// <summary>The Label to be applied to the resource views.</summary>
    public class Label : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Key of the label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>Value of the label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The list response item that contains the resource and end points information.</summary>
    public class ListResourceResponseItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of service end points on the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpoints")]
        public virtual System.Collections.Generic.IDictionary<string,System.Collections.Generic.IList<System.Nullable<int>>> Endpoints { get; set; } 

        /// <summary>The full URL of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual string Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An operation resource, used to manage asynchronous API requests.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output only] An optional identifier specified by the client when the mutation was initiated. Must
        /// be unique for all operation resources in the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientOperationId")]
        public virtual string ClientOperationId { get; set; } 

        /// <summary>[Output Only] The time that this operation was requested, in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] The time that this operation was completed, in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTime { get; set; } 

        /// <summary>[Output Only] If errors occurred during processing of this operation, this field will be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Operation.ErrorData Error { get; set; } 

        /// <summary>[Output only] If operation fails, the HTTP error message returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpErrorMessage")]
        public virtual string HttpErrorMessage { get; set; } 

        /// <summary>[Output only] If operation fails, the HTTP error status code returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpErrorStatusCode")]
        public virtual System.Nullable<int> HttpErrorStatusCode { get; set; } 

        /// <summary>[Output Only] Unique identifier for the resource, generated by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] The time that this operation was requested, in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertTime")]
        public virtual string InsertTime { get; set; } 

        /// <summary>[Output only] Type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Name of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output only] Type of the operation. Operations include insert, update, and delete.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationType")]
        public virtual string OperationType { get; set; } 

        /// <summary>[Output only] An optional progress indicator that ranges from 0 to 100. There is no requirement
        /// that this be linear or support any granularity of operations. This should not be used to guess at when the
        /// operation will be complete. This number should be monotonically increasing as the operation
        /// progresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progress")]
        public virtual System.Nullable<int> Progress { get; set; } 

        /// <summary>[Output Only] URL of the region where the operation resides. Only available when performing
        /// regional operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined fully-qualified URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] The time that this operation was started by the server, in RFC3339 text
        /// format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTime { get; set; } 

        /// <summary>[Output Only] Status of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] An optional textual description of the current status of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusMessage")]
        public virtual string StatusMessage { get; set; } 

        /// <summary>[Output Only] Unique target ID which identifies a particular incarnation of the target.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetId")]
        public virtual System.Nullable<ulong> TargetId { get; set; } 

        /// <summary>[Output only] URL of the resource the operation is mutating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetLink")]
        public virtual string TargetLink { get; set; } 

        /// <summary>[Output Only] User who requested the operation, for example: user@example.com.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("user")]
        public virtual string User { get; set; } 

        /// <summary>[Output Only] If there are issues with this operation, a warning is returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnings")]
        public virtual System.Collections.Generic.IList<Operation.WarningsData> Warnings { get; set; } 

        /// <summary>[Output Only] URL of the zone where the operation resides. Only available when performing per-zone
        /// operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] If errors occurred during processing of this operation, this field will be
        /// populated.</summary>
        public class ErrorData
        {
            /// <summary>[Output Only] The array of errors encountered while processing this operation.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("errors")]
            public virtual System.Collections.Generic.IList<ErrorData.ErrorsData> Errors { get; set; } 

            

            public class ErrorsData
            {
                /// <summary>[Output Only] The error type identifier for this error.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("code")]
                public virtual string Code { get; set; } 

                /// <summary>[Output Only] Indicates the field in the request which caused the error. This property is
                /// optional.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("location")]
                public virtual string Location { get; set; } 

                /// <summary>[Output Only] An optional, human-readable error message.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("message")]
                public virtual string Message { get; set; } 

            }
        }    

        public class WarningsData
        {
            /// <summary>[Output only] The warning type identifier for this warning.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output only] Metadata for this warning in key:value format.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningsData.DataData> Data { get; set; } 

            /// <summary>[Output only] Optional human-readable details for this warning.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] Metadata key for this warning.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] Metadata value for this warning.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class OperationList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Unique identifier for the resource; defined by the server (output only).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The operation resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Operation> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>A token used to continue a truncated list request (output only).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Server defined URL for this resource (output only).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The resource view object.</summary>
    public class ResourceView : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The creation time of the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>The detailed description of the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Services endpoint information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpoints")]
        public virtual System.Collections.Generic.IList<ServiceEndpoint> Endpoints { get; set; } 

        /// <summary>The fingerprint of the service endpoint information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>[Output Only] The ID of the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The labels for events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<Label> Labels { get; set; } 

        /// <summary>The name of the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The URL of a Compute Engine network to which the resources in the view belong.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>A list of all resources in the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<string> Resources { get; set; } 

        /// <summary>[Output Only] A self-link to the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The total number of resources in the resource view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual System.Nullable<long> Size { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The service endpoint that may be started in a VM.</summary>
    public class ServiceEndpoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the service endpoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The port of the service endpoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request to add resources to the resource view.</summary>
    public class ZoneViewsAddResourcesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of resources to be added.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<string> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ZoneViewsGetServiceResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The service information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpoints")]
        public virtual System.Collections.Generic.IList<ServiceEndpoint> Endpoints { get; set; } 

        /// <summary>The fingerprint of the service information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response to a list request.</summary>
    public class ZoneViewsList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The result that contains all resource views that meet the criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<ResourceView> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>A token used for pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Server defined URL for this resource (output only).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response to a list resource request.</summary>
    public class ZoneViewsListResourcesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The formatted JSON that is requested by the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<ListResourceResponseItem> Items { get; set; } 

        /// <summary>The URL of a Compute Engine network to which the resources in the view belong.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>A token used for pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request to remove resources from the resource view.</summary>
    public class ZoneViewsRemoveResourcesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of resources to be removed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<string> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ZoneViewsSetServiceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The service information to be updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpoints")]
        public virtual System.Collections.Generic.IList<ServiceEndpoint> Endpoints { get; set; } 

        /// <summary>Fingerprint of the service information; a hash of the contents. This field is used for optimistic
        /// locking when updating the service entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The name of the resource if user wants to update the service information of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceName")]
        public virtual string ResourceName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
