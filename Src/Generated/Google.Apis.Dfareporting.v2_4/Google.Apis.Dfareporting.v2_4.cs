// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   DCM/DFA Reporting And Trafficking API Version v2.4
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/doubleclick-advertisers/reporting/'>DCM/DFA Reporting And Trafficking API</a>
 *      <tr><th>API Version<td>v2.4
 *      <tr><th>API Rev<td>20160323 (447)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/doubleclick-advertisers/reporting/'>
 *              https://developers.google.com/doubleclick-advertisers/reporting/</a>
 *      <tr><th>Discovery Name<td>dfareporting
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using DCM/DFA Reporting And Trafficking API can be found at
 * <a href='https://developers.google.com/doubleclick-advertisers/reporting/'>https://developers.google.com/doubleclick-advertisers/reporting/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Dfareporting.v2_4
{
    /// <summary>The Dfareporting Service.</summary>
    public class DfareportingService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v2.4";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DfareportingService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DfareportingService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            accountActiveAdSummaries = new AccountActiveAdSummariesResource(this);
            accountPermissionGroups = new AccountPermissionGroupsResource(this);
            accountPermissions = new AccountPermissionsResource(this);
            accountUserProfiles = new AccountUserProfilesResource(this);
            accounts = new AccountsResource(this);
            ads = new AdsResource(this);
            advertiserGroups = new AdvertiserGroupsResource(this);
            advertisers = new AdvertisersResource(this);
            browsers = new BrowsersResource(this);
            campaignCreativeAssociations = new CampaignCreativeAssociationsResource(this);
            campaigns = new CampaignsResource(this);
            changeLogs = new ChangeLogsResource(this);
            cities = new CitiesResource(this);
            connectionTypes = new ConnectionTypesResource(this);
            contentCategories = new ContentCategoriesResource(this);
            countries = new CountriesResource(this);
            creativeAssets = new CreativeAssetsResource(this);
            creativeFieldValues = new CreativeFieldValuesResource(this);
            creativeFields = new CreativeFieldsResource(this);
            creativeGroups = new CreativeGroupsResource(this);
            creatives = new CreativesResource(this);
            dimensionValues = new DimensionValuesResource(this);
            directorySiteContacts = new DirectorySiteContactsResource(this);
            directorySites = new DirectorySitesResource(this);
            eventTags = new EventTagsResource(this);
            files = new FilesResource(this);
            floodlightActivities = new FloodlightActivitiesResource(this);
            floodlightActivityGroups = new FloodlightActivityGroupsResource(this);
            floodlightConfigurations = new FloodlightConfigurationsResource(this);
            inventoryItems = new InventoryItemsResource(this);
            landingPages = new LandingPagesResource(this);
            metros = new MetrosResource(this);
            mobileCarriers = new MobileCarriersResource(this);
            operatingSystemVersions = new OperatingSystemVersionsResource(this);
            operatingSystems = new OperatingSystemsResource(this);
            orderDocuments = new OrderDocumentsResource(this);
            orders = new OrdersResource(this);
            placementGroups = new PlacementGroupsResource(this);
            placementStrategies = new PlacementStrategiesResource(this);
            placements = new PlacementsResource(this);
            platformTypes = new PlatformTypesResource(this);
            postalCodes = new PostalCodesResource(this);
            projects = new ProjectsResource(this);
            regions = new RegionsResource(this);
            remarketingListShares = new RemarketingListSharesResource(this);
            remarketingLists = new RemarketingListsResource(this);
            reports = new ReportsResource(this);
            sites = new SitesResource(this);
            sizes = new SizesResource(this);
            subaccounts = new SubaccountsResource(this);
            targetableRemarketingLists = new TargetableRemarketingListsResource(this);
            userProfiles = new UserProfilesResource(this);
            userRolePermissionGroups = new UserRolePermissionGroupsResource(this);
            userRolePermissions = new UserRolePermissionsResource(this);
            userRoles = new UserRolesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "dfareporting"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/dfareporting/v2.4/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "dfareporting/v2.4/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the DCM/DFA Reporting And Trafficking API.</summary>
        public class Scope
        {
            /// <summary>View and manage DoubleClick for Advertisers reports</summary>
            public static string Dfareporting = "https://www.googleapis.com/auth/dfareporting";

            /// <summary>View and manage your DoubleClick Campaign Manager's (DCM) display ad campaigns</summary>
            public static string Dfatrafficking = "https://www.googleapis.com/auth/dfatrafficking";

        }



        private readonly AccountActiveAdSummariesResource accountActiveAdSummaries;

        /// <summary>Gets the AccountActiveAdSummaries resource.</summary>
        public virtual AccountActiveAdSummariesResource AccountActiveAdSummaries
        {
            get { return accountActiveAdSummaries; }
        }

        private readonly AccountPermissionGroupsResource accountPermissionGroups;

        /// <summary>Gets the AccountPermissionGroups resource.</summary>
        public virtual AccountPermissionGroupsResource AccountPermissionGroups
        {
            get { return accountPermissionGroups; }
        }

        private readonly AccountPermissionsResource accountPermissions;

        /// <summary>Gets the AccountPermissions resource.</summary>
        public virtual AccountPermissionsResource AccountPermissions
        {
            get { return accountPermissions; }
        }

        private readonly AccountUserProfilesResource accountUserProfiles;

        /// <summary>Gets the AccountUserProfiles resource.</summary>
        public virtual AccountUserProfilesResource AccountUserProfiles
        {
            get { return accountUserProfiles; }
        }

        private readonly AccountsResource accounts;

        /// <summary>Gets the Accounts resource.</summary>
        public virtual AccountsResource Accounts
        {
            get { return accounts; }
        }

        private readonly AdsResource ads;

        /// <summary>Gets the Ads resource.</summary>
        public virtual AdsResource Ads
        {
            get { return ads; }
        }

        private readonly AdvertiserGroupsResource advertiserGroups;

        /// <summary>Gets the AdvertiserGroups resource.</summary>
        public virtual AdvertiserGroupsResource AdvertiserGroups
        {
            get { return advertiserGroups; }
        }

        private readonly AdvertisersResource advertisers;

        /// <summary>Gets the Advertisers resource.</summary>
        public virtual AdvertisersResource Advertisers
        {
            get { return advertisers; }
        }

        private readonly BrowsersResource browsers;

        /// <summary>Gets the Browsers resource.</summary>
        public virtual BrowsersResource Browsers
        {
            get { return browsers; }
        }

        private readonly CampaignCreativeAssociationsResource campaignCreativeAssociations;

        /// <summary>Gets the CampaignCreativeAssociations resource.</summary>
        public virtual CampaignCreativeAssociationsResource CampaignCreativeAssociations
        {
            get { return campaignCreativeAssociations; }
        }

        private readonly CampaignsResource campaigns;

        /// <summary>Gets the Campaigns resource.</summary>
        public virtual CampaignsResource Campaigns
        {
            get { return campaigns; }
        }

        private readonly ChangeLogsResource changeLogs;

        /// <summary>Gets the ChangeLogs resource.</summary>
        public virtual ChangeLogsResource ChangeLogs
        {
            get { return changeLogs; }
        }

        private readonly CitiesResource cities;

        /// <summary>Gets the Cities resource.</summary>
        public virtual CitiesResource Cities
        {
            get { return cities; }
        }

        private readonly ConnectionTypesResource connectionTypes;

        /// <summary>Gets the ConnectionTypes resource.</summary>
        public virtual ConnectionTypesResource ConnectionTypes
        {
            get { return connectionTypes; }
        }

        private readonly ContentCategoriesResource contentCategories;

        /// <summary>Gets the ContentCategories resource.</summary>
        public virtual ContentCategoriesResource ContentCategories
        {
            get { return contentCategories; }
        }

        private readonly CountriesResource countries;

        /// <summary>Gets the Countries resource.</summary>
        public virtual CountriesResource Countries
        {
            get { return countries; }
        }

        private readonly CreativeAssetsResource creativeAssets;

        /// <summary>Gets the CreativeAssets resource.</summary>
        public virtual CreativeAssetsResource CreativeAssets
        {
            get { return creativeAssets; }
        }

        private readonly CreativeFieldValuesResource creativeFieldValues;

        /// <summary>Gets the CreativeFieldValues resource.</summary>
        public virtual CreativeFieldValuesResource CreativeFieldValues
        {
            get { return creativeFieldValues; }
        }

        private readonly CreativeFieldsResource creativeFields;

        /// <summary>Gets the CreativeFields resource.</summary>
        public virtual CreativeFieldsResource CreativeFields
        {
            get { return creativeFields; }
        }

        private readonly CreativeGroupsResource creativeGroups;

        /// <summary>Gets the CreativeGroups resource.</summary>
        public virtual CreativeGroupsResource CreativeGroups
        {
            get { return creativeGroups; }
        }

        private readonly CreativesResource creatives;

        /// <summary>Gets the Creatives resource.</summary>
        public virtual CreativesResource Creatives
        {
            get { return creatives; }
        }

        private readonly DimensionValuesResource dimensionValues;

        /// <summary>Gets the DimensionValues resource.</summary>
        public virtual DimensionValuesResource DimensionValues
        {
            get { return dimensionValues; }
        }

        private readonly DirectorySiteContactsResource directorySiteContacts;

        /// <summary>Gets the DirectorySiteContacts resource.</summary>
        public virtual DirectorySiteContactsResource DirectorySiteContacts
        {
            get { return directorySiteContacts; }
        }

        private readonly DirectorySitesResource directorySites;

        /// <summary>Gets the DirectorySites resource.</summary>
        public virtual DirectorySitesResource DirectorySites
        {
            get { return directorySites; }
        }

        private readonly EventTagsResource eventTags;

        /// <summary>Gets the EventTags resource.</summary>
        public virtual EventTagsResource EventTags
        {
            get { return eventTags; }
        }

        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        private readonly FloodlightActivitiesResource floodlightActivities;

        /// <summary>Gets the FloodlightActivities resource.</summary>
        public virtual FloodlightActivitiesResource FloodlightActivities
        {
            get { return floodlightActivities; }
        }

        private readonly FloodlightActivityGroupsResource floodlightActivityGroups;

        /// <summary>Gets the FloodlightActivityGroups resource.</summary>
        public virtual FloodlightActivityGroupsResource FloodlightActivityGroups
        {
            get { return floodlightActivityGroups; }
        }

        private readonly FloodlightConfigurationsResource floodlightConfigurations;

        /// <summary>Gets the FloodlightConfigurations resource.</summary>
        public virtual FloodlightConfigurationsResource FloodlightConfigurations
        {
            get { return floodlightConfigurations; }
        }

        private readonly InventoryItemsResource inventoryItems;

        /// <summary>Gets the InventoryItems resource.</summary>
        public virtual InventoryItemsResource InventoryItems
        {
            get { return inventoryItems; }
        }

        private readonly LandingPagesResource landingPages;

        /// <summary>Gets the LandingPages resource.</summary>
        public virtual LandingPagesResource LandingPages
        {
            get { return landingPages; }
        }

        private readonly MetrosResource metros;

        /// <summary>Gets the Metros resource.</summary>
        public virtual MetrosResource Metros
        {
            get { return metros; }
        }

        private readonly MobileCarriersResource mobileCarriers;

        /// <summary>Gets the MobileCarriers resource.</summary>
        public virtual MobileCarriersResource MobileCarriers
        {
            get { return mobileCarriers; }
        }

        private readonly OperatingSystemVersionsResource operatingSystemVersions;

        /// <summary>Gets the OperatingSystemVersions resource.</summary>
        public virtual OperatingSystemVersionsResource OperatingSystemVersions
        {
            get { return operatingSystemVersions; }
        }

        private readonly OperatingSystemsResource operatingSystems;

        /// <summary>Gets the OperatingSystems resource.</summary>
        public virtual OperatingSystemsResource OperatingSystems
        {
            get { return operatingSystems; }
        }

        private readonly OrderDocumentsResource orderDocuments;

        /// <summary>Gets the OrderDocuments resource.</summary>
        public virtual OrderDocumentsResource OrderDocuments
        {
            get { return orderDocuments; }
        }

        private readonly OrdersResource orders;

        /// <summary>Gets the Orders resource.</summary>
        public virtual OrdersResource Orders
        {
            get { return orders; }
        }

        private readonly PlacementGroupsResource placementGroups;

        /// <summary>Gets the PlacementGroups resource.</summary>
        public virtual PlacementGroupsResource PlacementGroups
        {
            get { return placementGroups; }
        }

        private readonly PlacementStrategiesResource placementStrategies;

        /// <summary>Gets the PlacementStrategies resource.</summary>
        public virtual PlacementStrategiesResource PlacementStrategies
        {
            get { return placementStrategies; }
        }

        private readonly PlacementsResource placements;

        /// <summary>Gets the Placements resource.</summary>
        public virtual PlacementsResource Placements
        {
            get { return placements; }
        }

        private readonly PlatformTypesResource platformTypes;

        /// <summary>Gets the PlatformTypes resource.</summary>
        public virtual PlatformTypesResource PlatformTypes
        {
            get { return platformTypes; }
        }

        private readonly PostalCodesResource postalCodes;

        /// <summary>Gets the PostalCodes resource.</summary>
        public virtual PostalCodesResource PostalCodes
        {
            get { return postalCodes; }
        }

        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }

        private readonly RegionsResource regions;

        /// <summary>Gets the Regions resource.</summary>
        public virtual RegionsResource Regions
        {
            get { return regions; }
        }

        private readonly RemarketingListSharesResource remarketingListShares;

        /// <summary>Gets the RemarketingListShares resource.</summary>
        public virtual RemarketingListSharesResource RemarketingListShares
        {
            get { return remarketingListShares; }
        }

        private readonly RemarketingListsResource remarketingLists;

        /// <summary>Gets the RemarketingLists resource.</summary>
        public virtual RemarketingListsResource RemarketingLists
        {
            get { return remarketingLists; }
        }

        private readonly ReportsResource reports;

        /// <summary>Gets the Reports resource.</summary>
        public virtual ReportsResource Reports
        {
            get { return reports; }
        }

        private readonly SitesResource sites;

        /// <summary>Gets the Sites resource.</summary>
        public virtual SitesResource Sites
        {
            get { return sites; }
        }

        private readonly SizesResource sizes;

        /// <summary>Gets the Sizes resource.</summary>
        public virtual SizesResource Sizes
        {
            get { return sizes; }
        }

        private readonly SubaccountsResource subaccounts;

        /// <summary>Gets the Subaccounts resource.</summary>
        public virtual SubaccountsResource Subaccounts
        {
            get { return subaccounts; }
        }

        private readonly TargetableRemarketingListsResource targetableRemarketingLists;

        /// <summary>Gets the TargetableRemarketingLists resource.</summary>
        public virtual TargetableRemarketingListsResource TargetableRemarketingLists
        {
            get { return targetableRemarketingLists; }
        }

        private readonly UserProfilesResource userProfiles;

        /// <summary>Gets the UserProfiles resource.</summary>
        public virtual UserProfilesResource UserProfiles
        {
            get { return userProfiles; }
        }

        private readonly UserRolePermissionGroupsResource userRolePermissionGroups;

        /// <summary>Gets the UserRolePermissionGroups resource.</summary>
        public virtual UserRolePermissionGroupsResource UserRolePermissionGroups
        {
            get { return userRolePermissionGroups; }
        }

        private readonly UserRolePermissionsResource userRolePermissions;

        /// <summary>Gets the UserRolePermissions resource.</summary>
        public virtual UserRolePermissionsResource UserRolePermissions
        {
            get { return userRolePermissions; }
        }

        private readonly UserRolesResource userRoles;

        /// <summary>Gets the UserRoles resource.</summary>
        public virtual UserRolesResource UserRoles
        {
            get { return userRoles; }
        }
    }

    ///<summary>A base abstract class for Dfareporting requests.</summary>
    public abstract class DfareportingBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new DfareportingBaseServiceRequest instance.</summary>
        protected DfareportingBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Dfareporting parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "accountActiveAdSummaries" collection of methods.</summary>
    public class AccountActiveAdSummariesResource
    {
        private const string Resource = "accountActiveAdSummaries";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountActiveAdSummariesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets the account's active ad summary by account ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="summaryAccountId">Account ID.</param>
        public virtual GetRequest Get(long profileId, long summaryAccountId)
        {
            return new GetRequest(service, profileId, summaryAccountId);
        }

        /// <summary>Gets the account's active ad summary by account ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountActiveAdSummary>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long summaryAccountId)
                : base(service)
            {
                ProfileId = profileId;
                SummaryAccountId = summaryAccountId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("summaryAccountId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long SummaryAccountId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "summaryAccountId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "summaryAccountId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "accountPermissionGroups" collection of methods.</summary>
    public class AccountPermissionGroupsResource
    {
        private const string Resource = "accountPermissionGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountPermissionGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one account permission group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account
        /// permission group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one account permission group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountPermissionGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account permission group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountPermissionGroups/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of account permission groups.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves the list of account permission groups.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountPermissionGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountPermissionGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "accountPermissions" collection of methods.</summary>
    public class AccountPermissionsResource
    {
        private const string Resource = "accountPermissions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountPermissionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one account permission by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account
        /// permission ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one account permission by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountPermission>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account permission ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountPermissions/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of account permissions.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves the list of account permissions.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountPermissionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountPermissions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "accountUserProfiles" collection of methods.</summary>
    public class AccountUserProfilesResource
    {
        private const string Resource = "accountUserProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountUserProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one account user profile by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User profile
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one account user profile by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountUserProfiles/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new account user profile.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new account user profile.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountUserProfiles"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of account user profiles, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of account user profiles, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountUserProfilesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active user profiles.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only user profiles with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example,
            /// "user profile*2015" will return objects with names like "user profile June 2015", "user profile April
            /// 2015", or simply "user profile 2015". Most of the searches also add wildcards implicitly at the start
            /// and the end of the search string. For example, a search string of "user profile" will match objects with
            /// name "my user profile", "user profile 2015", or simply "user profile".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only user profiles with the specified subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Select only user profiles with the specified user role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userRoleId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> UserRoleId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountUserProfiles"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "subaccountId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subaccountId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "userRoleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "userRoleId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing account user profile. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User profile
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing account user profile. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountUserProfiles"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing account user profile.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing account user profile.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.AccountUserProfile Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accountUserProfiles"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "accounts" collection of methods.</summary>
    public class AccountsResource
    {
        private const string Resource = "accounts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one account by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one account by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Account>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accounts/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of accounts, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves the list of accounts, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AccountsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active accounts. Don't set this field to select both active and non-active
            /// accounts.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only accounts with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "account*2015" will return objects with names like "account June 2015", "account April 2015", or simply
            /// "account 2015". Most of the searches also add wildcards implicitly at the start and the end of the
            /// search string. For example, a search string of "account" will match objects with name "my account",
            /// "account 2015", or simply "account".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accounts"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing account. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Account body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing account. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Account>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Account body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Account Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accounts"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing account.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Account body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing account.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Account>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Account body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Account Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/accounts"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "ads" collection of methods.</summary>
    public class AdsResource
    {
        private const string Resource = "ads";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one ad by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Ad
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one ad by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Ad>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Ad ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/ads/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new ad.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Ad body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new ad.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Ad>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Ad body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Ad Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/ads"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of ads, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of ads, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active ads.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only ads with this advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only archived ads.</summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only ads with these audience segment IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("audienceSegmentIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AudienceSegmentIds { get; set; }

            /// <summary>Select only ads with these campaign IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select default ads with the specified compatibility. Applicable when type is
            /// AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on
            /// mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering
            /// in mobile apps. IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST
            /// standard.</summary>
            [Google.Apis.Util.RequestParameterAttribute("compatibility", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<CompatibilityEnum> Compatibility { get; set; }

            /// <summary>Select default ads with the specified compatibility. Applicable when type is
            /// AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on
            /// mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering
            /// in mobile apps. IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST
            /// standard.</summary>
            public enum CompatibilityEnum
            {
                [Google.Apis.Util.StringValueAttribute("APP")]
                APP,
                [Google.Apis.Util.StringValueAttribute("APP_INTERSTITIAL")]
                APPINTERSTITIAL,
                [Google.Apis.Util.StringValueAttribute("DISPLAY")]
                DISPLAY,
                [Google.Apis.Util.StringValueAttribute("DISPLAY_INTERSTITIAL")]
                DISPLAYINTERSTITIAL,
                [Google.Apis.Util.StringValueAttribute("IN_STREAM_VIDEO")]
                INSTREAMVIDEO,
            }

            /// <summary>Select only ads with these creative IDs assigned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CreativeIds { get; set; }

            /// <summary>Select only ads with these creative optimization configuration IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeOptimizationConfigurationIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CreativeOptimizationConfigurationIds { get; set; }

            /// <summary>Select only ads with the specified creativeType.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<CreativeTypeEnum> CreativeType { get; set; }

            /// <summary>Select only ads with the specified creativeType.</summary>
            public enum CreativeTypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("BRAND_SAFE_DEFAULT_INSTREAM_VIDEO")]
                BRANDSAFEDEFAULTINSTREAMVIDEO,
                [Google.Apis.Util.StringValueAttribute("CUSTOM_INPAGE")]
                CUSTOMINPAGE,
                [Google.Apis.Util.StringValueAttribute("CUSTOM_INTERSTITIAL")]
                CUSTOMINTERSTITIAL,
                [Google.Apis.Util.StringValueAttribute("ENHANCED_BANNER")]
                ENHANCEDBANNER,
                [Google.Apis.Util.StringValueAttribute("ENHANCED_IMAGE")]
                ENHANCEDIMAGE,
                [Google.Apis.Util.StringValueAttribute("FLASH_INPAGE")]
                FLASHINPAGE,
                [Google.Apis.Util.StringValueAttribute("HTML5_BANNER")]
                HTML5BANNER,
                [Google.Apis.Util.StringValueAttribute("IMAGE")]
                IMAGE,
                [Google.Apis.Util.StringValueAttribute("INSTREAM_VIDEO")]
                INSTREAMVIDEO,
                [Google.Apis.Util.StringValueAttribute("INSTREAM_VIDEO_REDIRECT")]
                INSTREAMVIDEOREDIRECT,
                [Google.Apis.Util.StringValueAttribute("INTERNAL_REDIRECT")]
                INTERNALREDIRECT,
                [Google.Apis.Util.StringValueAttribute("INTERSTITIAL_INTERNAL_REDIRECT")]
                INTERSTITIALINTERNALREDIRECT,
                [Google.Apis.Util.StringValueAttribute("REDIRECT")]
                REDIRECT,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_EXPANDING")]
                RICHMEDIAEXPANDING,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_IM_EXPAND")]
                RICHMEDIAIMEXPAND,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INPAGE")]
                RICHMEDIAINPAGE,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INPAGE_FLOATING")]
                RICHMEDIAINPAGEFLOATING,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INTERSTITIAL_FLOAT")]
                RICHMEDIAINTERSTITIALFLOAT,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_MOBILE_IN_APP")]
                RICHMEDIAMOBILEINAPP,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_MULTI_FLOATING")]
                RICHMEDIAMULTIFLOATING,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_PEEL_DOWN")]
                RICHMEDIAPEELDOWN,
                [Google.Apis.Util.StringValueAttribute("TRACKING_TEXT")]
                TRACKINGTEXT,
                [Google.Apis.Util.StringValueAttribute("VPAID_LINEAR")]
                VPAIDLINEAR,
                [Google.Apis.Util.StringValueAttribute("VPAID_NON_LINEAR")]
                VPAIDNONLINEAR,
            }

            /// <summary>Select only dynamic click trackers. Applicable when type is AD_SERVING_CLICK_TRACKER. If true,
            /// select dynamic click trackers. If false, select static click trackers. Leave unset to select
            /// both.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dynamicClickTracker", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> DynamicClickTracker { get; set; }

            /// <summary>Select only ads with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only ads with these landing page IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("landingPageIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> LandingPageIds { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only ads with this event tag override ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("overriddenEventTagId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> OverriddenEventTagId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only ads with these placement IDs assigned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementIds { get; set; }

            /// <summary>Select only ads whose list targeting expression use these remarketing list IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("remarketingListIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RemarketingListIds { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "ad*2015"
            /// will return objects with names like "ad June 2015", "ad April 2015", or simply "ad 2015". Most of the
            /// searches also add wildcards implicitly at the start and the end of the search string. For example, a
            /// search string of "ad" will match objects with name "my ad", "ad 2015", or simply "ad".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only ads with these size IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sizeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SizeIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only ads that are SSL-compliant.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sslCompliant", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> SslCompliant { get; set; }

            /// <summary>Select only ads that require SSL.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sslRequired", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> SslRequired { get; set; }

            /// <summary>Select only ads with these types.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>Select only ads with these types.</summary>
            public enum TypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_CLICK_TRACKER")]
                ADSERVINGCLICKTRACKER,
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_DEFAULT_AD")]
                ADSERVINGDEFAULTAD,
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_STANDARD_AD")]
                ADSERVINGSTANDARDAD,
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_TRACKING")]
                ADSERVINGTRACKING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/ads"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "archived", new Google.Apis.Discovery.Parameter
                    {
                        Name = "archived",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "audienceSegmentIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "audienceSegmentIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "compatibility", new Google.Apis.Discovery.Parameter
                    {
                        Name = "compatibility",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeOptimizationConfigurationIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeOptimizationConfigurationIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "dynamicClickTracker", new Google.Apis.Discovery.Parameter
                    {
                        Name = "dynamicClickTracker",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "landingPageIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "landingPageIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "overriddenEventTagId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "overriddenEventTagId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "placementIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "placementIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "remarketingListIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "remarketingListIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sizeIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sizeIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sslCompliant", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sslCompliant",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sslRequired", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sslRequired",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "type", new Google.Apis.Discovery.Parameter
                    {
                        Name = "type",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing ad. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Ad
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Ad body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing ad. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Ad>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Ad body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Ad ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Ad Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/ads"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing ad.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Ad body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing ad.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Ad>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Ad body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Ad Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/ads"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "advertiserGroups" collection of methods.</summary>
    public class AdvertiserGroupsResource
    {
        private const string Resource = "advertiserGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertiserGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing advertiser group.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser
        /// group ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing advertiser group.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertiserGroups/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one advertiser group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser
        /// group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one advertiser group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertiserGroups/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new advertiser group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new advertiser group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertiserGroups"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of advertiser groups, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of advertiser groups, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only advertiser groups with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "advertiser*2015" will return objects with names like "advertiser group June 2015", "advertiser group
            /// April 2015", or simply "advertiser group 2015". Most of the searches also add wildcards implicitly at
            /// the start and the end of the search string. For example, a search string of "advertisergroup" will match
            /// objects with name "my advertisergroup", "advertisergroup 2015", or simply "advertisergroup".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertiserGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing advertiser group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser
        /// group ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing advertiser group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertiserGroups"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing advertiser group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing advertiser group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.AdvertiserGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertiserGroups"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "advertisers" collection of methods.</summary>
    public class AdvertisersResource
    {
        private const string Resource = "advertisers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertisersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one advertiser by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one advertiser by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Advertiser>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertisers/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new advertiser.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Advertiser body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new advertiser.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Advertiser>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Advertiser body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Advertiser Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertisers"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of advertisers, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of advertisers, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.AdvertisersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only advertisers with these advertiser group IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserGroupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserGroupIds { get; set; }

            /// <summary>Select only advertisers with these floodlight configuration IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightConfigurationIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> FloodlightConfigurationIds { get; set; }

            /// <summary>Select only advertisers with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only advertisers which do not belong to any advertiser group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("includeAdvertisersWithoutGroupsOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> IncludeAdvertisersWithoutGroupsOnly { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only advertisers which use another advertiser's floodlight configuration.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onlyParent", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> OnlyParent { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "advertiser*2015" will return objects with names like "advertiser June 2015", "advertiser April 2015",
            /// or simply "advertiser 2015". Most of the searches also add wildcards implicitly at the start and the end
            /// of the search string. For example, a search string of "advertiser" will match objects with name "my
            /// advertiser", "advertiser 2015", or simply "advertiser".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only advertisers with the specified status.</summary>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<StatusEnum> Status { get; set; }

            /// <summary>Select only advertisers with the specified status.</summary>
            public enum StatusEnum
            {
                [Google.Apis.Util.StringValueAttribute("APPROVED")]
                APPROVED,
                [Google.Apis.Util.StringValueAttribute("ON_HOLD")]
                ONHOLD,
            }

            /// <summary>Select only advertisers with these subaccount IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertisers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserGroupIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserGroupIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightConfigurationIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightConfigurationIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "includeAdvertisersWithoutGroupsOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "includeAdvertisersWithoutGroupsOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "onlyParent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "onlyParent",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "status", new Google.Apis.Discovery.Parameter
                    {
                        Name = "status",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "subaccountId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subaccountId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing advertiser. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Advertiser body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing advertiser. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Advertiser>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Advertiser body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Advertiser Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertisers"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing advertiser.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Advertiser body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing advertiser.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Advertiser>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Advertiser body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Advertiser Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/advertisers"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "browsers" collection of methods.</summary>
    public class BrowsersResource
    {
        private const string Resource = "browsers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BrowsersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves a list of browsers.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of browsers.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.BrowsersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/browsers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "campaignCreativeAssociations" collection of methods.</summary>
    public class CampaignCreativeAssociationsResource
    {
        private const string Resource = "campaignCreativeAssociations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CampaignCreativeAssociationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Associates a creative with the specified campaign. This method creates a default ad with dimensions
        /// matching the creative in the campaign if such a default ad does not exist already.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Campaign ID in this association.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.CampaignCreativeAssociation body, long profileId, long campaignId)
        {
            return new InsertRequest(service, body, profileId, campaignId);
        }

        /// <summary>Associates a creative with the specified campaign. This method creates a default ad with dimensions
        /// matching the creative in the campaign if such a default ad does not exist already.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CampaignCreativeAssociation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CampaignCreativeAssociation body, long profileId, long campaignId)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID in this association.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CampaignCreativeAssociation Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of creative IDs associated with the specified campaign.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Campaign ID in this association.</param>
        public virtual ListRequest List(long profileId, long campaignId)
        {
            return new ListRequest(service, profileId, campaignId);
        }

        /// <summary>Retrieves the list of creative IDs associated with the specified campaign.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CampaignCreativeAssociationsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long campaignId)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID in this association.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "campaigns" collection of methods.</summary>
    public class CampaignsResource
    {
        private const string Resource = "campaigns";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CampaignsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one campaign by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Campaign
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one campaign by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Campaign>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new campaign.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="defaultLandingPageName">Default landing page name for this new campaign. Must be less than 256 characters
        /// long.</param>
        /// <param name="defaultLandingPageUrl">Default landing page URL for this new
        /// campaign.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Campaign body, long profileId, string defaultLandingPageName, string defaultLandingPageUrl)
        {
            return new InsertRequest(service, body, profileId, defaultLandingPageName, defaultLandingPageUrl);
        }

        /// <summary>Inserts a new campaign.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Campaign>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Campaign body, long profileId, string defaultLandingPageName, string defaultLandingPageUrl)
                : base(service)
            {
                ProfileId = profileId;
                DefaultLandingPageName = defaultLandingPageName;
                DefaultLandingPageUrl = defaultLandingPageUrl;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Default landing page name for this new campaign. Must be less than 256 characters
            /// long.</summary>
            [Google.Apis.Util.RequestParameterAttribute("defaultLandingPageName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string DefaultLandingPageName { get; private set; }

            /// <summary>Default landing page URL for this new campaign.</summary>
            [Google.Apis.Util.RequestParameterAttribute("defaultLandingPageUrl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string DefaultLandingPageUrl { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Campaign Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "defaultLandingPageName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "defaultLandingPageName",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "defaultLandingPageUrl", new Google.Apis.Discovery.Parameter
                    {
                        Name = "defaultLandingPageUrl",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of campaigns, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of campaigns, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CampaignsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only campaigns whose advertisers belong to these advertiser groups.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserGroupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserGroupIds { get; set; }

            /// <summary>Select only campaigns that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only archived campaigns. Don't set this field to select both archived and non-archived
            /// campaigns.</summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only campaigns that have at least one optimization activity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("atLeastOneOptimizationActivity", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AtLeastOneOptimizationActivity { get; set; }

            /// <summary>Exclude campaigns with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("excludedIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ExcludedIds { get; set; }

            /// <summary>Select only campaigns with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only campaigns that have overridden this event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("overriddenEventTagId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> OverriddenEventTagId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for campaigns by name or ID. Wildcards (*) are allowed. For example,
            /// "campaign*2015" will return campaigns with names like "campaign June 2015", "campaign April 2015", or
            /// simply "campaign 2015". Most of the searches also add wildcards implicitly at the start and the end of
            /// the search string. For example, a search string of "campaign" will match campaigns with name "my
            /// campaign", "campaign 2015", or simply "campaign".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only campaigns that belong to this subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserGroupIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserGroupIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "archived", new Google.Apis.Discovery.Parameter
                    {
                        Name = "archived",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "atLeastOneOptimizationActivity", new Google.Apis.Discovery.Parameter
                    {
                        Name = "atLeastOneOptimizationActivity",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "excludedIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "excludedIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "overriddenEventTagId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "overriddenEventTagId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "subaccountId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subaccountId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing campaign. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Campaign
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Campaign body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing campaign. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Campaign>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Campaign body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Campaign Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing campaign.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Campaign body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing campaign.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Campaign>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Campaign body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Campaign Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "changeLogs" collection of methods.</summary>
    public class ChangeLogsResource
    {
        private const string Resource = "changeLogs";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ChangeLogsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one change log by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Change log
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one change log by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ChangeLog>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Change log ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/changeLogs/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of change logs.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of change logs.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ChangeLogsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only change logs with the specified action.</summary>
            [Google.Apis.Util.RequestParameterAttribute("action", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ActionEnum> Action { get; set; }

            /// <summary>Select only change logs with the specified action.</summary>
            public enum ActionEnum
            {
                [Google.Apis.Util.StringValueAttribute("ACTION_ADD")]
                ACTIONADD,
                [Google.Apis.Util.StringValueAttribute("ACTION_ASSIGN")]
                ACTIONASSIGN,
                [Google.Apis.Util.StringValueAttribute("ACTION_ASSOCIATE")]
                ACTIONASSOCIATE,
                [Google.Apis.Util.StringValueAttribute("ACTION_CREATE")]
                ACTIONCREATE,
                [Google.Apis.Util.StringValueAttribute("ACTION_DELETE")]
                ACTIONDELETE,
                [Google.Apis.Util.StringValueAttribute("ACTION_DISABLE")]
                ACTIONDISABLE,
                [Google.Apis.Util.StringValueAttribute("ACTION_EMAIL_TAGS")]
                ACTIONEMAILTAGS,
                [Google.Apis.Util.StringValueAttribute("ACTION_ENABLE")]
                ACTIONENABLE,
                [Google.Apis.Util.StringValueAttribute("ACTION_LINK")]
                ACTIONLINK,
                [Google.Apis.Util.StringValueAttribute("ACTION_MARK_AS_DEFAULT")]
                ACTIONMARKASDEFAULT,
                [Google.Apis.Util.StringValueAttribute("ACTION_PUSH")]
                ACTIONPUSH,
                [Google.Apis.Util.StringValueAttribute("ACTION_REMOVE")]
                ACTIONREMOVE,
                [Google.Apis.Util.StringValueAttribute("ACTION_SEND")]
                ACTIONSEND,
                [Google.Apis.Util.StringValueAttribute("ACTION_SHARE")]
                ACTIONSHARE,
                [Google.Apis.Util.StringValueAttribute("ACTION_UNASSIGN")]
                ACTIONUNASSIGN,
                [Google.Apis.Util.StringValueAttribute("ACTION_UNLINK")]
                ACTIONUNLINK,
                [Google.Apis.Util.StringValueAttribute("ACTION_UPDATE")]
                ACTIONUPDATE,
            }

            /// <summary>Select only change logs with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only change logs whose change time is before the specified maxChangeTime.The time should
            /// be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the
            /// America/New York time zone, the format is "2015-07-18T22:54:00-04:00". In other words, the year, month,
            /// day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone
            /// offset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxChangeTime", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxChangeTime { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only change logs whose change time is before the specified minChangeTime.The time should
            /// be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the
            /// America/New York time zone, the format is "2015-07-18T22:54:00-04:00". In other words, the year, month,
            /// day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone
            /// offset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minChangeTime", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinChangeTime { get; set; }

            /// <summary>Select only change logs with these object IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ObjectIds { get; set; }

            /// <summary>Select only change logs with the specified object type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ObjectTypeEnum> ObjectType { get; set; }

            /// <summary>Select only change logs with the specified object type.</summary>
            public enum ObjectTypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("OBJECT_ACCOUNT")]
                OBJECTACCOUNT,
                [Google.Apis.Util.StringValueAttribute("OBJECT_ACCOUNT_BILLING_FEATURE")]
                OBJECTACCOUNTBILLINGFEATURE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_AD")]
                OBJECTAD,
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER")]
                OBJECTADVERTISER,
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER_GROUP")]
                OBJECTADVERTISERGROUP,
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_ACCOUNT_GROUP")]
                OBJECTBILLINGACCOUNTGROUP,
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_FEATURE")]
                OBJECTBILLINGFEATURE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_MINIMUM_FEE")]
                OBJECTBILLINGMINIMUMFEE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_PROFILE")]
                OBJECTBILLINGPROFILE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CAMPAIGN")]
                OBJECTCAMPAIGN,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CONTENT_CATEGORY")]
                OBJECTCONTENTCATEGORY,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE")]
                OBJECTCREATIVE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_ASSET")]
                OBJECTCREATIVEASSET,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_BUNDLE")]
                OBJECTCREATIVEBUNDLE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_FIELD")]
                OBJECTCREATIVEFIELD,
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_GROUP")]
                OBJECTCREATIVEGROUP,
                [Google.Apis.Util.StringValueAttribute("OBJECT_DFA_SITE")]
                OBJECTDFASITE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_EVENT_TAG")]
                OBJECTEVENTTAG,
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_ACTIVITY_GROUP")]
                OBJECTFLOODLIGHTACTIVITYGROUP,
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_ACTVITY")]
                OBJECTFLOODLIGHTACTVITY,
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_CONFIGURATION")]
                OBJECTFLOODLIGHTCONFIGURATION,
                [Google.Apis.Util.StringValueAttribute("OBJECT_INSTREAM_CREATIVE")]
                OBJECTINSTREAMCREATIVE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_LANDING_PAGE")]
                OBJECTLANDINGPAGE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_MEDIA_ORDER")]
                OBJECTMEDIAORDER,
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLACEMENT")]
                OBJECTPLACEMENT,
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLACEMENT_STRATEGY")]
                OBJECTPLACEMENTSTRATEGY,
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLAYSTORE_LINK")]
                OBJECTPLAYSTORELINK,
                [Google.Apis.Util.StringValueAttribute("OBJECT_PROVIDED_LIST_CLIENT")]
                OBJECTPROVIDEDLISTCLIENT,
                [Google.Apis.Util.StringValueAttribute("OBJECT_RATE_CARD")]
                OBJECTRATECARD,
                [Google.Apis.Util.StringValueAttribute("OBJECT_REMARKETING_LIST")]
                OBJECTREMARKETINGLIST,
                [Google.Apis.Util.StringValueAttribute("OBJECT_RICHMEDIA_CREATIVE")]
                OBJECTRICHMEDIACREATIVE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_SD_SITE")]
                OBJECTSDSITE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_SIZE")]
                OBJECTSIZE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_SUBACCOUNT")]
                OBJECTSUBACCOUNT,
                [Google.Apis.Util.StringValueAttribute("OBJECT_USER_PROFILE")]
                OBJECTUSERPROFILE,
                [Google.Apis.Util.StringValueAttribute("OBJECT_USER_PROFILE_FILTER")]
                OBJECTUSERPROFILEFILTER,
                [Google.Apis.Util.StringValueAttribute("OBJECT_USER_ROLE")]
                OBJECTUSERROLE,
            }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only change logs whose object ID, user name, old or new values match the search
            /// string.</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only change logs with these user profile IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userProfileIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> UserProfileIds { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/changeLogs"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "action", new Google.Apis.Discovery.Parameter
                    {
                        Name = "action",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxChangeTime", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxChangeTime",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minChangeTime", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minChangeTime",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "objectIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "objectIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "objectType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "objectType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "userProfileIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "userProfileIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "cities" collection of methods.</summary>
    public class CitiesResource
    {
        private const string Resource = "cities";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CitiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves a list of cities, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of cities, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CitiesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only cities from these countries.</summary>
            [Google.Apis.Util.RequestParameterAttribute("countryDartIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CountryDartIds { get; set; }

            /// <summary>Select only cities with these DART IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dartIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DartIds { get; set; }

            /// <summary>Select only cities with names starting with this prefix.</summary>
            [Google.Apis.Util.RequestParameterAttribute("namePrefix", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string NamePrefix { get; set; }

            /// <summary>Select only cities from these regions.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionDartIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RegionDartIds { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/cities"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "countryDartIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "countryDartIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "dartIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "dartIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "namePrefix", new Google.Apis.Discovery.Parameter
                    {
                        Name = "namePrefix",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "regionDartIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "regionDartIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "connectionTypes" collection of methods.</summary>
    public class ConnectionTypesResource
    {
        private const string Resource = "connectionTypes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ConnectionTypesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one connection type by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Connection
        /// type ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one connection type by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ConnectionType>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Connection type ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/connectionTypes/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of connection types.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of connection types.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ConnectionTypesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/connectionTypes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "contentCategories" collection of methods.</summary>
    public class ContentCategoriesResource
    {
        private const string Resource = "contentCategories";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ContentCategoriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing content category.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Content
        /// category ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing content category.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Content category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/contentCategories/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one content category by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Content
        /// category ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one content category by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Content category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/contentCategories/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new content category.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.ContentCategory body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new content category.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.ContentCategory body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.ContentCategory Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/contentCategories"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of content categories, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of content categories, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ContentCategoriesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only content categories with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "contentcategory*2015" will return objects with names like "contentcategory June 2015", "contentcategory
            /// April 2015", or simply "contentcategory 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "contentcategory" will match
            /// objects with name "my contentcategory", "contentcategory 2015", or simply "contentcategory".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/contentCategories"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing content category. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Content
        /// category ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.ContentCategory body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing content category. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.ContentCategory body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Content category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.ContentCategory Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/contentCategories"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing content category.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.ContentCategory body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing content category.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.ContentCategory body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.ContentCategory Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/contentCategories"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "countries" collection of methods.</summary>
    public class CountriesResource
    {
        private const string Resource = "countries";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CountriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one country by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="dartId">Country
        /// DART ID.</param>
        public virtual GetRequest Get(long profileId, long dartId)
        {
            return new GetRequest(service, profileId, dartId);
        }

        /// <summary>Gets one country by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Country>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long dartId)
                : base(service)
            {
                ProfileId = profileId;
                DartId = dartId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Country DART ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dartId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long DartId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/countries/{dartId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "dartId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "dartId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of countries.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of countries.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CountriesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/countries"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "creativeAssets" collection of methods.</summary>
    public class CreativeAssetsResource
    {
        private const string Resource = "creativeAssets";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeAssetsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Inserts a new creative asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="advertiserId">Advertiser ID of this creative. This is a required field.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata body, long profileId, long advertiserId)
        {
            return new InsertRequest(service, body, profileId, advertiserId);
        }

        /// <summary>Inserts a new creative asset.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata body, long profileId, long advertiserId)
                : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID of this creative. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long AdvertiserId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new creative asset.</summary>/// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="advertiserId">Advertiser ID of this creative. This is a required field.</param>
        /// <param name="stream">The stream to upload.</param>
        /// <param name="contentType">The content type of the stream to upload.</param>
        public virtual InsertMediaUpload Insert(Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata body, long profileId, long advertiserId, System.IO.Stream stream, string contentType)
        {
            return new InsertMediaUpload(service, body, profileId, advertiserId, stream, contentType);
        }

        /// <summary>Insert media upload which supports resumable upload.</summary>
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata, Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata>
        {

            /// <summary>Data format for the response.</summary>
            /// [default: json]
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<AltEnum> Alt { get; set; }

            /// <summary>Data format for the response.</summary>
            public enum AltEnum
            {
                /// <summary>Responses with Content-Type of application/json</summary>
                [Google.Apis.Util.StringValueAttribute("json")]
                Json,
            }

            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields { get; set; }

            /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and
            /// reports. Required unless you provide an OAuth 2.0 token.</summary>
            [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Key { get; set; }

            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OauthToken { get; set; }

            /// <summary>Returns response with indentations and line breaks.</summary>
            /// [default: true]
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint { get; set; }

            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
            /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are
            /// provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser { get; set; }

            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
            /// limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp { get; set; }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID of this creative. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Constructs a new Insert media upload instance.</summary>
            public InsertMediaUpload(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeAssetMetadata body, long
             profileId, long
             advertiserId, System.IO.Stream stream, string contentType)
                : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets"), "POST", stream, contentType)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                Body = body;
            }
        }
    }

    /// <summary>The "creativeFieldValues" collection of methods.</summary>
    public class CreativeFieldValuesResource
    {
        private const string Resource = "creativeFieldValues";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeFieldValuesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing creative field value.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="creativeFieldId">Creative field ID for this creative field value.</param>
        /// <param name="id">Creative
        /// Field Value ID</param>
        public virtual DeleteRequest Delete(long profileId, long creativeFieldId, long id)
        {
            return new DeleteRequest(service, profileId, creativeFieldId, id);
        }

        /// <summary>Deletes an existing creative field value.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long creativeFieldId, long id)
                : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Creative Field Value ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one creative field value by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="creativeFieldId">Creative field ID for this creative field value.</param>
        /// <param name="id">Creative
        /// Field Value ID</param>
        public virtual GetRequest Get(long profileId, long creativeFieldId, long id)
        {
            return new GetRequest(service, profileId, creativeFieldId, id);
        }

        /// <summary>Gets one creative field value by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long creativeFieldId, long id)
                : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Creative Field Value ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new creative field value.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="creativeFieldId">Creative field ID for this creative field value.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue body, long profileId, long creativeFieldId)
        {
            return new InsertRequest(service, body, profileId, creativeFieldId);
        }

        /// <summary>Inserts a new creative field value.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue body, long profileId, long creativeFieldId)
                : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of creative field values, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="creativeFieldId">Creative field ID for this creative field value.</param>
        public virtual ListRequest List(long profileId, long creativeFieldId)
        {
            return new ListRequest(service, profileId, creativeFieldId);
        }

        /// <summary>Retrieves a list of creative field values, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValuesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long creativeFieldId)
                : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Select only creative field values with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for creative field values by their values. Wildcards (e.g. *) are not
            /// allowed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("VALUE")]
                VALUE,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative field value. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="creativeFieldId">Creative field ID for this creative field value.</param>
        /// <param name="id">Creative
        /// Field Value ID</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue body, long profileId, long creativeFieldId, long id)
        {
            return new PatchRequest(service, body, profileId, creativeFieldId, id);
        }

        /// <summary>Updates an existing creative field value. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue body, long profileId, long creativeFieldId, long id)
                : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Creative Field Value ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative field value.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="creativeFieldId">Creative field ID for this creative field value.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue body, long profileId, long creativeFieldId)
        {
            return new UpdateRequest(service, body, profileId, creativeFieldId);
        }

        /// <summary>Updates an existing creative field value.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue body, long profileId, long creativeFieldId)
                : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeFieldValue Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "creativeFields" collection of methods.</summary>
    public class CreativeFieldsResource
    {
        private const string Resource = "creativeFields";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeFieldsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing creative field.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// Field ID</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing creative field.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative Field ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one creative field by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// Field ID</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one creative field by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeField>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative Field ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new creative field.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.CreativeField body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new creative field.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeField>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeField body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeField Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of creative fields, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of creative fields, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeFieldsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only creative fields that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only creative fields with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for creative fields by name or ID. Wildcards (*) are allowed. For example,
            /// "creativefield*2015" will return creative fields with names like "creativefield June 2015",
            /// "creativefield April 2015", or simply "creativefield 2015". Most of the searches also add wild-cards
            /// implicitly at the start and the end of the search string. For example, a search string of
            /// "creativefield" will match creative fields with the name "my creativefield", "creativefield 2015", or
            /// simply "creativefield".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative field. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// Field ID</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.CreativeField body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing creative field. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeField>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeField body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative Field ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeField Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative field.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.CreativeField body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing creative field.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeField>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeField body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeField Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeFields"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "creativeGroups" collection of methods.</summary>
    public class CreativeGroupsResource
    {
        private const string Resource = "creativeGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one creative group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one creative group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeGroups/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new creative group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.CreativeGroup body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new creative group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeGroups"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of creative groups, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of creative groups, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only creative groups that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only creative groups that belong to this subgroup.</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupNumber", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> GroupNumber { get; set; }

            /// <summary>Select only creative groups with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for creative groups by name or ID. Wildcards (*) are allowed. For example,
            /// "creativegroup*2015" will return creative groups with names like "creativegroup June 2015",
            /// "creativegroup April 2015", or simply "creativegroup 2015". Most of the searches also add wild-cards
            /// implicitly at the start and the end of the search string. For example, a search string of
            /// "creativegroup" will match creative groups with the name "my creativegroup", "creativegroup 2015", or
            /// simply "creativegroup".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "groupNumber", new Google.Apis.Discovery.Parameter
                    {
                        Name = "groupNumber",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// group ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.CreativeGroup body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing creative group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeGroup body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeGroups"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.CreativeGroup body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing creative group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.CreativeGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.CreativeGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creativeGroups"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "creatives" collection of methods.</summary>
    public class CreativesResource
    {
        private const string Resource = "creatives";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one creative by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one creative by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Creative>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creatives/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new creative.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Creative body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new creative.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Creative>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Creative body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Creative Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creatives"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of creatives, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of creatives, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CreativesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active creatives. Leave blank to select active and inactive creatives.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only creatives with this advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only archived creatives. Leave blank to select archived and unarchived
            /// creatives.</summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only creatives with this campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CampaignId { get; set; }

            /// <summary>Select only in-stream video creatives with these companion IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("companionCreativeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CompanionCreativeIds { get; set; }

            /// <summary>Select only creatives with these creative field IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CreativeFieldIds { get; set; }

            /// <summary>Select only creatives with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only creatives with these rendering IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("renderingIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RenderingIds { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "creative*2015" will return objects with names like "creative June 2015", "creative April 2015", or
            /// simply "creative 2015". Most of the searches also add wildcards implicitly at the start and the end of
            /// the search string. For example, a search string of "creative" will match objects with name "my
            /// creative", "creative 2015", or simply "creative".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only creatives with these size IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sizeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SizeIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only creatives corresponding to this Studio creative ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("studioCreativeId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> StudioCreativeId { get; set; }

            /// <summary>Select only creatives with these creative types.</summary>
            [Google.Apis.Util.RequestParameterAttribute("types", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypesEnum> Types { get; set; }

            /// <summary>Select only creatives with these creative types.</summary>
            public enum TypesEnum
            {
                [Google.Apis.Util.StringValueAttribute("BRAND_SAFE_DEFAULT_INSTREAM_VIDEO")]
                BRANDSAFEDEFAULTINSTREAMVIDEO,
                [Google.Apis.Util.StringValueAttribute("CUSTOM_INPAGE")]
                CUSTOMINPAGE,
                [Google.Apis.Util.StringValueAttribute("CUSTOM_INTERSTITIAL")]
                CUSTOMINTERSTITIAL,
                [Google.Apis.Util.StringValueAttribute("ENHANCED_BANNER")]
                ENHANCEDBANNER,
                [Google.Apis.Util.StringValueAttribute("ENHANCED_IMAGE")]
                ENHANCEDIMAGE,
                [Google.Apis.Util.StringValueAttribute("FLASH_INPAGE")]
                FLASHINPAGE,
                [Google.Apis.Util.StringValueAttribute("HTML5_BANNER")]
                HTML5BANNER,
                [Google.Apis.Util.StringValueAttribute("IMAGE")]
                IMAGE,
                [Google.Apis.Util.StringValueAttribute("INSTREAM_VIDEO")]
                INSTREAMVIDEO,
                [Google.Apis.Util.StringValueAttribute("INSTREAM_VIDEO_REDIRECT")]
                INSTREAMVIDEOREDIRECT,
                [Google.Apis.Util.StringValueAttribute("INTERNAL_REDIRECT")]
                INTERNALREDIRECT,
                [Google.Apis.Util.StringValueAttribute("INTERSTITIAL_INTERNAL_REDIRECT")]
                INTERSTITIALINTERNALREDIRECT,
                [Google.Apis.Util.StringValueAttribute("REDIRECT")]
                REDIRECT,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_EXPANDING")]
                RICHMEDIAEXPANDING,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_IM_EXPAND")]
                RICHMEDIAIMEXPAND,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INPAGE")]
                RICHMEDIAINPAGE,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INPAGE_FLOATING")]
                RICHMEDIAINPAGEFLOATING,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INTERSTITIAL_FLOAT")]
                RICHMEDIAINTERSTITIALFLOAT,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_MOBILE_IN_APP")]
                RICHMEDIAMOBILEINAPP,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_MULTI_FLOATING")]
                RICHMEDIAMULTIFLOATING,
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_PEEL_DOWN")]
                RICHMEDIAPEELDOWN,
                [Google.Apis.Util.StringValueAttribute("TRACKING_TEXT")]
                TRACKINGTEXT,
                [Google.Apis.Util.StringValueAttribute("VPAID_LINEAR")]
                VPAIDLINEAR,
                [Google.Apis.Util.StringValueAttribute("VPAID_NON_LINEAR")]
                VPAIDNONLINEAR,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creatives"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "archived", new Google.Apis.Discovery.Parameter
                    {
                        Name = "archived",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "companionCreativeIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "companionCreativeIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creativeFieldIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creativeFieldIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "renderingIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "renderingIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sizeIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sizeIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "studioCreativeId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "studioCreativeId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "types", new Google.Apis.Discovery.Parameter
                    {
                        Name = "types",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Creative body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing creative. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Creative>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Creative body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Creative Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creatives"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing creative.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Creative body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing creative.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Creative>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Creative body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Creative Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/creatives"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "dimensionValues" collection of methods.</summary>
    public class DimensionValuesResource
    {
        private const string Resource = "dimensionValues";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DimensionValuesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves list of report dimension values for a list of filters.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile ID.</param>
        public virtual QueryRequest Query(Google.Apis.Dfareporting.v2_4.Data.DimensionValueRequest body, long profileId)
        {
            return new QueryRequest(service, body, profileId);
        }

        /// <summary>Retrieves list of report dimension values for a list of filters.</summary>
        public class QueryRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.DimensionValueList>
        {
            /// <summary>Constructs a new Query request.</summary>
            public QueryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.DimensionValueRequest body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.DimensionValueRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "query"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/dimensionvalues/query"; }
            }

            /// <summary>Initializes Query parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "directorySiteContacts" collection of methods.</summary>
    public class DirectorySiteContactsResource
    {
        private const string Resource = "directorySiteContacts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DirectorySiteContactsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one directory site contact by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Directory
        /// site contact ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one directory site contact by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.DirectorySiteContact>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Directory site contact ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/directorySiteContacts/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of directory site contacts, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of directory site contacts, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.DirectorySiteContactsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only directory site contacts with these directory site IDs. This is a required
            /// field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only directory site contacts with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example,
            /// "directory site contact*2015" will return objects with names like "directory site contact June 2015",
            /// "directory site contact April 2015", or simply "directory site contact 2015". Most of the searches also
            /// add wildcards implicitly at the start and the end of the search string. For example, a search string of
            /// "directory site contact" will match objects with name "my directory site contact", "directory site
            /// contact 2015", or simply "directory site contact".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/directorySiteContacts"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "directorySiteIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "directorySiteIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "directorySites" collection of methods.</summary>
    public class DirectorySitesResource
    {
        private const string Resource = "directorySites";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DirectorySitesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one directory site by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Directory
        /// site ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one directory site by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.DirectorySite>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Directory site ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/directorySites/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new directory site.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.DirectorySite body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new directory site.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.DirectorySite>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.DirectorySite body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.DirectorySite Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/directorySites"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of directory sites, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of directory sites, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.DirectorySitesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>This search filter is no longer supported and will have no effect on the results
            /// returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInStreamVideoPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInStreamVideoPlacements { get; set; }

            /// <summary>This search filter is no longer supported and will have no effect on the results
            /// returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInterstitialPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInterstitialPlacements { get; set; }

            /// <summary>Select only directory sites that accept publisher paid placements. This field can be left
            /// blank.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsPublisherPaidPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsPublisherPaidPlacements { get; set; }

            /// <summary>Select only active directory sites. Leave blank to retrieve both active and inactive directory
            /// sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only directory sites with this country ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("countryId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CountryId { get; set; }

            /// <summary>Select only directory sites with this DFP network code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dfp_network_code", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string DfpNetworkCode { get; set; }

            /// <summary>Select only directory sites with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only directory sites with this parent ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("parentId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> ParentId { get; set; }

            /// <summary>Allows searching for objects by name, ID or URL. Wildcards (*) are allowed. For example,
            /// "directory site*2015" will return objects with names like "directory site June 2015", "directory site
            /// April 2015", or simply "directory site 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "directory site" will match
            /// objects with name "my directory site", "directory site 2015" or simply, "directory site".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/directorySites"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "acceptsInStreamVideoPlacements", new Google.Apis.Discovery.Parameter
                    {
                        Name = "acceptsInStreamVideoPlacements",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "acceptsInterstitialPlacements", new Google.Apis.Discovery.Parameter
                    {
                        Name = "acceptsInterstitialPlacements",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "acceptsPublisherPaidPlacements", new Google.Apis.Discovery.Parameter
                    {
                        Name = "acceptsPublisherPaidPlacements",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "countryId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "countryId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "dfp_network_code", new Google.Apis.Discovery.Parameter
                    {
                        Name = "dfp_network_code",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "parentId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parentId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "eventTags" collection of methods.</summary>
    public class EventTagsResource
    {
        private const string Resource = "eventTags";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public EventTagsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing event tag.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Event tag
        /// ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing event tag.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/eventTags/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one event tag by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Event tag
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one event tag by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.EventTag>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/eventTags/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new event tag.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.EventTag body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new event tag.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.EventTag>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.EventTag body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.EventTag Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/eventTags"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of event tags, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of event tags, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.EventTagsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only event tags that belong to this ad.</summary>
            [Google.Apis.Util.RequestParameterAttribute("adId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdId { get; set; }

            /// <summary>Select only event tags that belong to this advertiser.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only event tags that belong to this campaign.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CampaignId { get; set; }

            /// <summary>Examine only the specified campaign or advertiser's event tags for matching selector criteria.
            /// When set to false, the parent advertiser and parent campaign of the specified ad or campaign is examined
            /// as well. In addition, when set to false, the status field is examined as well, along with the
            /// enabledByDefault field. This parameter can not be set to true when adId is specified as ads do not
            /// define their own even tags.</summary>
            [Google.Apis.Util.RequestParameterAttribute("definitionsOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> DefinitionsOnly { get; set; }

            /// <summary>Select only enabled event tags. What is considered enabled or disabled depends on the
            /// definitionsOnly parameter. When definitionsOnly is set to true, only the specified advertiser or
            /// campaign's event tags' enabledByDefault field is examined. When definitionsOnly is set to false, the
            /// specified ad or specified campaign's parent advertiser's or parent campaign's event tags'
            /// enabledByDefault and status fields are examined as well.</summary>
            [Google.Apis.Util.RequestParameterAttribute("enabled", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Enabled { get; set; }

            /// <summary>Select only event tags with the specified event tag types. Event tag types can be used to
            /// specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through
            /// URL for either impression or click tracking.</summary>
            [Google.Apis.Util.RequestParameterAttribute("eventTagTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<EventTagTypesEnum> EventTagTypes { get; set; }

            /// <summary>Select only event tags with the specified event tag types. Event tag types can be used to
            /// specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through
            /// URL for either impression or click tracking.</summary>
            public enum EventTagTypesEnum
            {
                [Google.Apis.Util.StringValueAttribute("CLICK_THROUGH_EVENT_TAG")]
                CLICKTHROUGHEVENTTAG,
                [Google.Apis.Util.StringValueAttribute("IMPRESSION_IMAGE_EVENT_TAG")]
                IMPRESSIONIMAGEEVENTTAG,
                [Google.Apis.Util.StringValueAttribute("IMPRESSION_JAVASCRIPT_EVENT_TAG")]
                IMPRESSIONJAVASCRIPTEVENTTAG,
            }

            /// <summary>Select only event tags with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "eventtag*2015" will return objects with names like "eventtag June 2015", "eventtag April 2015", or
            /// simply "eventtag 2015". Most of the searches also add wildcards implicitly at the start and the end of
            /// the search string. For example, a search string of "eventtag" will match objects with name "my
            /// eventtag", "eventtag 2015", or simply "eventtag".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/eventTags"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "adId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "adId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "definitionsOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "definitionsOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "enabled", new Google.Apis.Discovery.Parameter
                    {
                        Name = "enabled",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "eventTagTypes", new Google.Apis.Discovery.Parameter
                    {
                        Name = "eventTagTypes",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing event tag. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Event tag
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.EventTag body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing event tag. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.EventTag>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.EventTag body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.EventTag Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/eventTags"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing event tag.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.EventTag body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing event tag.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.EventTag>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.EventTag body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.EventTag Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/eventTags"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "files" collection of methods.</summary>
    public class FilesResource
    {
        private const string Resource = "files";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves a report file by its report ID and file ID.</summary>
        /// <param name="reportId">The ID of the report.</param>
        /// <param name="fileId">The ID of the report
        /// file.</param>
        public virtual GetRequest Get(long reportId, long fileId)
        {
            return new GetRequest(service, reportId, fileId);
        }

        /// <summary>Retrieves a report file by its report ID and file ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.File>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long reportId, long fileId)
                : base(service)
            {
                ReportId = reportId;
                FileId = fileId;
                MediaDownloader = new Google.Apis.Download.MediaDownloader(service);
                InitParameters();
            }


            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>The ID of the report file.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long FileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "reports/{reportId}/files/{fileId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "fileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "fileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

            /// <summary>Gets the media downloader.</summary>
            public Google.Apis.Download.IMediaDownloader MediaDownloader { get; private set; }

            /// <summary>Synchronously download the media into the given stream.</summary>
            public virtual void Download(System.IO.Stream stream)
            {
                MediaDownloader.Download(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download the media into the given stream.</summary>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream)
            {
                return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download the media into the given stream.</summary>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream,
                System.Threading.CancellationToken cancellationToken)
            {
                return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
            }

        }

        /// <summary>Lists files for a user profile.</summary>
        /// <param name="profileId">The DFA profile ID.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Lists files for a user profile.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FileList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>The DFA profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 10]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The scope that defines which results are returned, default is 'MINE'.</summary>
            /// [default: MINE]
            [Google.Apis.Util.RequestParameterAttribute("scope", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ScopeEnum> Scope { get; set; }

            /// <summary>The scope that defines which results are returned, default is 'MINE'.</summary>
            public enum ScopeEnum
            {
                /// <summary>All files in account.</summary>
                [Google.Apis.Util.StringValueAttribute("ALL")]
                ALL,
                /// <summary>My files.</summary>
                [Google.Apis.Util.StringValueAttribute("MINE")]
                MINE,
                /// <summary>Files shared with me.</summary>
                [Google.Apis.Util.StringValueAttribute("SHARED_WITH_ME")]
                SHAREDWITHME,
            }

            /// <summary>The field by which to sort the list.</summary>
            /// [default: LAST_MODIFIED_TIME]
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>The field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary>Sort by file ID.</summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                /// <summary>Sort by 'lastmodifiedAt' field.</summary>
                [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                LASTMODIFIEDTIME,
            }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            /// [default: DESCENDING]
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/files"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "scope", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scope",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "MINE",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "LAST_MODIFIED_TIME",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "DESCENDING",
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "floodlightActivities" collection of methods.</summary>
    public class FloodlightActivitiesResource
    {
        private const string Resource = "floodlightActivities";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FloodlightActivitiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing floodlight activity.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// activity ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing floodlight activity.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Generates a tag for a floodlight activity.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual GeneratetagRequest Generatetag(long profileId)
        {
            return new GeneratetagRequest(service, profileId);
        }

        /// <summary>Generates a tag for a floodlight activity.</summary>
        public class GeneratetagRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivitiesGenerateTagResponse>
        {
            /// <summary>Constructs a new Generatetag request.</summary>
            public GeneratetagRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID for which we want to generate a tag.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightActivityId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "generatetag"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities/generatetag"; }
            }

            /// <summary>Initializes Generatetag parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightActivityId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightActivityId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one floodlight activity by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// activity ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one floodlight activity by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new floodlight activity.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new floodlight activity.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of floodlight activities, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of floodlight activities, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivitiesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only floodlight activities for the specified advertiser ID. Must specify either ids,
            /// advertiserId, or floodlightConfigurationId for a non-empty result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> FloodlightActivityGroupIds { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string FloodlightActivityGroupName { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group tag
            /// string.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupTagString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string FloodlightActivityGroupTagString { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FloodlightActivityGroupTypeEnum> FloodlightActivityGroupType { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group type.</summary>
            public enum FloodlightActivityGroupTypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("COUNTER")]
                COUNTER,
                [Google.Apis.Util.StringValueAttribute("SALE")]
                SALE,
            }

            /// <summary>Select only floodlight activities for the specified floodlight configuration ID. Must specify
            /// either ids, advertiserId, or floodlightConfigurationId for a non-empty result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightConfigurationId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

            /// <summary>Select only floodlight activities with the specified IDs. Must specify either ids,
            /// advertiserId, or floodlightConfigurationId for a non-empty result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "floodlightactivity*2015" will return objects with names like "floodlightactivity June 2015",
            /// "floodlightactivity April 2015", or simply "floodlightactivity 2015". Most of the searches also add
            /// wildcards implicitly at the start and the end of the search string. For example, a search string of
            /// "floodlightactivity" will match objects with name "my floodlightactivity activity", "floodlightactivity
            /// 2015", or simply "floodlightactivity".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only floodlight activities with the specified tag string.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tagString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string TagString { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightActivityGroupIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightActivityGroupIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightActivityGroupName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightActivityGroupName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightActivityGroupTagString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightActivityGroupTagString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightActivityGroupType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightActivityGroupType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightConfigurationId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightConfigurationId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tagString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tagString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing floodlight activity. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// activity ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing floodlight activity. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing floodlight activity.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing floodlight activity.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightActivity Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivities"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "floodlightActivityGroups" collection of methods.</summary>
    public class FloodlightActivityGroupsResource
    {
        private const string Resource = "floodlightActivityGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FloodlightActivityGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one floodlight activity group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// activity Group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one floodlight activity group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity Group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivityGroups/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new floodlight activity group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new floodlight activity group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivityGroups"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of floodlight activity groups, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of floodlight activity groups, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only floodlight activity groups with the specified advertiser ID. Must specify either
            /// advertiserId or floodlightConfigurationId for a non-empty result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only floodlight activity groups with the specified floodlight configuration ID. Must
            /// specify either advertiserId, or floodlightConfigurationId for a non-empty result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightConfigurationId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

            /// <summary>Select only floodlight activity groups with the specified IDs. Must specify either advertiserId
            /// or floodlightConfigurationId for a non-empty result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "floodlightactivitygroup*2015" will return objects with names like "floodlightactivitygroup June 2015",
            /// "floodlightactivitygroup April 2015", or simply "floodlightactivitygroup 2015". Most of the searches
            /// also add wildcards implicitly at the start and the end of the search string. For example, a search
            /// string of "floodlightactivitygroup" will match objects with name "my floodlightactivitygroup activity",
            /// "floodlightactivitygroup 2015", or simply "floodlightactivitygroup".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only floodlight activity groups with the specified floodlight activity group
            /// type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>Select only floodlight activity groups with the specified floodlight activity group
            /// type.</summary>
            public enum TypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("COUNTER")]
                COUNTER,
                [Google.Apis.Util.StringValueAttribute("SALE")]
                SALE,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivityGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightConfigurationId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightConfigurationId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "type", new Google.Apis.Discovery.Parameter
                    {
                        Name = "type",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing floodlight activity group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// activity Group ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing floodlight activity group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity Group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivityGroups"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing floodlight activity group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing floodlight activity group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightActivityGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightActivityGroups"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "floodlightConfigurations" collection of methods.</summary>
    public class FloodlightConfigurationsResource
    {
        private const string Resource = "floodlightConfigurations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FloodlightConfigurationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one floodlight configuration by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// configuration ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one floodlight configuration by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight configuration ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightConfigurations/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of floodlight configurations, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of floodlight configurations, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightConfigurationsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Set of IDs of floodlight configurations to retrieve. Required field; otherwise an empty list
            /// will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightConfigurations"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing floodlight configuration. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight
        /// configuration ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing floodlight configuration. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight configuration ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightConfigurations"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing floodlight configuration.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing floodlight configuration.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.FloodlightConfiguration Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/floodlightConfigurations"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "inventoryItems" collection of methods.</summary>
    public class InventoryItemsResource
    {
        private const string Resource = "inventoryItems";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InventoryItemsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one inventory item by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="projectId">Project ID for order documents.</param>
        /// <param name="id">Inventory item ID.</param>
        public virtual GetRequest Get(long profileId, long projectId, long id)
        {
            return new GetRequest(service, profileId, projectId, id);
        }

        /// <summary>Gets one inventory item by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.InventoryItem>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long projectId, long id)
                : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for order documents.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Inventory item ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of inventory items, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="projectId">Project ID for order documents.</param>
        public virtual ListRequest List(long profileId, long projectId)
        {
            return new ListRequest(service, profileId, projectId);
        }

        /// <summary>Retrieves a list of inventory items, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.InventoryItemsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long projectId)
                : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for order documents.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Select only inventory items with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only inventory items that are in plan.</summary>
            [Google.Apis.Util.RequestParameterAttribute("inPlan", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> InPlan { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only inventory items that belong to specified orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> OrderId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only inventory items that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteId { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only inventory items with this type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>Select only inventory items with this type.</summary>
            public enum TypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("PLANNING_PLACEMENT_TYPE_CREDIT")]
                PLANNINGPLACEMENTTYPECREDIT,
                [Google.Apis.Util.StringValueAttribute("PLANNING_PLACEMENT_TYPE_REGULAR")]
                PLANNINGPLACEMENTTYPEREGULAR,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{projectId}/inventoryItems"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "inPlan", new Google.Apis.Discovery.Parameter
                    {
                        Name = "inPlan",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "siteId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "siteId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "type", new Google.Apis.Discovery.Parameter
                    {
                        Name = "type",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "landingPages" collection of methods.</summary>
    public class LandingPagesResource
    {
        private const string Resource = "landingPages";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LandingPagesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing campaign landing page.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Landing page campaign ID.</param>
        /// <param name="id">Landing page ID.</param>
        public virtual DeleteRequest Delete(long profileId, long campaignId, long id)
        {
            return new DeleteRequest(service, profileId, campaignId, id);
        }

        /// <summary>Deletes an existing campaign landing page.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long campaignId, long id)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }

            /// <summary>Landing page ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/landingPages/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one campaign landing page by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Landing page campaign ID.</param>
        /// <param name="id">Landing page ID.</param>
        public virtual GetRequest Get(long profileId, long campaignId, long id)
        {
            return new GetRequest(service, profileId, campaignId, id);
        }

        /// <summary>Gets one campaign landing page by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.LandingPage>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long campaignId, long id)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }

            /// <summary>Landing page ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/landingPages/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new landing page for the specified campaign.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Landing page campaign ID.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.LandingPage body, long profileId, long campaignId)
        {
            return new InsertRequest(service, body, profileId, campaignId);
        }

        /// <summary>Inserts a new landing page for the specified campaign.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.LandingPage>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.LandingPage body, long profileId, long campaignId)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.LandingPage Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/landingPages"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of landing pages for the specified campaign.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Landing page campaign ID.</param>
        public virtual ListRequest List(long profileId, long campaignId)
        {
            return new ListRequest(service, profileId, campaignId);
        }

        /// <summary>Retrieves the list of landing pages for the specified campaign.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.LandingPagesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long campaignId)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/landingPages"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing campaign landing page. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Landing page campaign ID.</param>
        /// <param name="id">Landing page ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.LandingPage body, long profileId, long campaignId, long id)
        {
            return new PatchRequest(service, body, profileId, campaignId, id);
        }

        /// <summary>Updates an existing campaign landing page. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.LandingPage>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.LandingPage body, long profileId, long campaignId, long id)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }

            /// <summary>Landing page ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.LandingPage Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/landingPages"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing campaign landing page.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="campaignId">Landing page campaign ID.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.LandingPage body, long profileId, long campaignId)
        {
            return new UpdateRequest(service, body, profileId, campaignId);
        }

        /// <summary>Updates an existing campaign landing page.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.LandingPage>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.LandingPage body, long profileId, long campaignId)
                : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.LandingPage Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/campaigns/{campaignId}/landingPages"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "metros" collection of methods.</summary>
    public class MetrosResource
    {
        private const string Resource = "metros";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MetrosResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves a list of metros.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of metros.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.MetrosListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/metros"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "mobileCarriers" collection of methods.</summary>
    public class MobileCarriersResource
    {
        private const string Resource = "mobileCarriers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MobileCarriersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one mobile carrier by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Mobile
        /// carrier ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one mobile carrier by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.MobileCarrier>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Mobile carrier ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/mobileCarriers/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of mobile carriers.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of mobile carriers.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.MobileCarriersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/mobileCarriers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "operatingSystemVersions" collection of methods.</summary>
    public class OperatingSystemVersionsResource
    {
        private const string Resource = "operatingSystemVersions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OperatingSystemVersionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one operating system version by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Operating
        /// system version ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one operating system version by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OperatingSystemVersion>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Operating system version ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/operatingSystemVersions/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of operating system versions.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of operating system versions.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OperatingSystemVersionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/operatingSystemVersions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "operatingSystems" collection of methods.</summary>
    public class OperatingSystemsResource
    {
        private const string Resource = "operatingSystems";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OperatingSystemsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one operating system by DART ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="dartId">Operating
        /// system DART ID.</param>
        public virtual GetRequest Get(long profileId, long dartId)
        {
            return new GetRequest(service, profileId, dartId);
        }

        /// <summary>Gets one operating system by DART ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OperatingSystem>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long dartId)
                : base(service)
            {
                ProfileId = profileId;
                DartId = dartId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Operating system DART ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dartId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long DartId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/operatingSystems/{dartId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "dartId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "dartId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of operating systems.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of operating systems.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OperatingSystemsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/operatingSystems"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "orderDocuments" collection of methods.</summary>
    public class OrderDocumentsResource
    {
        private const string Resource = "orderDocuments";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OrderDocumentsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one order document by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="projectId">Project ID for order documents.</param>
        /// <param name="id">Order document ID.</param>
        public virtual GetRequest Get(long profileId, long projectId, long id)
        {
            return new GetRequest(service, profileId, projectId, id);
        }

        /// <summary>Gets one order document by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OrderDocument>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long projectId, long id)
                : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for order documents.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Order document ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of order documents, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="projectId">Project ID for order documents.</param>
        public virtual ListRequest List(long profileId, long projectId)
        {
            return new ListRequest(service, profileId, projectId);
        }

        /// <summary>Retrieves a list of order documents, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OrderDocumentsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long projectId)
                : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for order documents.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Select only order documents that have been approved by at least one user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("approved", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Approved { get; set; }

            /// <summary>Select only order documents with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only order documents for specified orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> OrderId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for order documents by name or ID. Wildcards (*) are allowed. For example,
            /// "orderdocument*2015" will return order documents with names like "orderdocument June 2015",
            /// "orderdocument April 2015", or simply "orderdocument 2015". Most of the searches also add wildcards
            /// implicitly at the start and the end of the search string. For example, a search string of
            /// "orderdocument" will match order documents with name "my orderdocument", "orderdocument 2015", or simply
            /// "orderdocument".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only order documents that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteId { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{projectId}/orderDocuments"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approved", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approved",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "siteId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "siteId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "orders" collection of methods.</summary>
    public class OrdersResource
    {
        private const string Resource = "orders";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OrdersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one order by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="projectId">Project ID for orders.</param>
        /// <param name="id">Order ID.</param>
        public virtual GetRequest Get(long profileId, long projectId, long id)
        {
            return new GetRequest(service, profileId, projectId, id);
        }

        /// <summary>Gets one order by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Order>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long projectId, long id)
                : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Order ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{projectId}/orders/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of orders, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="projectId">Project ID for orders.</param>
        public virtual ListRequest List(long profileId, long projectId)
        {
            return new ListRequest(service, profileId, projectId);
        }

        /// <summary>Retrieves a list of orders, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.OrdersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long projectId)
                : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Select only orders with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for orders by name or ID. Wildcards (*) are allowed. For example, "order*2015"
            /// will return orders with names like "order June 2015", "order April 2015", or simply "order 2015". Most
            /// of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "order" will match orders with name "my order", "order 2015", or simply
            /// "order".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only orders that are associated with these site IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteId { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{projectId}/orders"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "siteId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "siteId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "placementGroups" collection of methods.</summary>
    public class PlacementGroupsResource
    {
        private const string Resource = "placementGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlacementGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one placement group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one placement group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementGroups/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new placement group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.PlacementGroup body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new placement group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.PlacementGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.PlacementGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementGroups"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of placement groups, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of placement groups, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only placement groups that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only archived placements. Don't set this field to select both archived and non-archived
            /// placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only placement groups that belong to these campaigns.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select only placement groups that are associated with these content categories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentCategoryIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ContentCategoryIds { get; set; }

            /// <summary>Select only placement groups that are associated with these directory sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only placement groups with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only placements or placement groups whose end date is on or before the specified
            /// maxEndDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxEndDate { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only placements or placement groups whose start date is on or before the specified
            /// maxStartDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxStartDate { get; set; }

            /// <summary>Select only placements or placement groups whose end date is on or after the specified
            /// minEndDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("minEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinEndDate { get; set; }

            /// <summary>Select only placements or placement groups whose start date is on or after the specified
            /// minStartDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("minStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinStartDate { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only placement groups belonging with this group type. A package is a simple group of
            /// placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements
            /// that not only acts as a single pricing point but also assumes that all the tags in it will be served at
            /// the same time. A roadblock requires one of its assigned placements to be marked as primary for
            /// reporting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementGroupType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PlacementGroupTypeEnum> PlacementGroupType { get; set; }

            /// <summary>Select only placement groups belonging with this group type. A package is a simple group of
            /// placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements
            /// that not only acts as a single pricing point but also assumes that all the tags in it will be served at
            /// the same time. A roadblock requires one of its assigned placements to be marked as primary for
            /// reporting.</summary>
            public enum PlacementGroupTypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_PACKAGE")]
                PLACEMENTPACKAGE,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_ROADBLOCK")]
                PLACEMENTROADBLOCK,
            }

            /// <summary>Select only placement groups that are associated with these placement strategies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementStrategyIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementStrategyIds { get; set; }

            /// <summary>Select only placement groups with these pricing types.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pricingTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PricingTypesEnum> PricingTypes { get; set; }

            /// <summary>Select only placement groups with these pricing types.</summary>
            public enum PricingTypesEnum
            {
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPA")]
                PRICINGTYPECPA,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPC")]
                PRICINGTYPECPC,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPM")]
                PRICINGTYPECPM,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_CLICKS")]
                PRICINGTYPEFLATRATECLICKS,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_IMPRESSIONS")]
                PRICINGTYPEFLATRATEIMPRESSIONS,
            }

            /// <summary>Allows searching for placement groups by name or ID. Wildcards (*) are allowed. For example,
            /// "placement*2015" will return placement groups with names like "placement group June 2015", "placement
            /// group May 2015", or simply "placements 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "placementgroup" will match
            /// placement groups with name "my placementgroup", "placementgroup 2015", or simply
            /// "placementgroup".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only placement groups that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "archived", new Google.Apis.Discovery.Parameter
                    {
                        Name = "archived",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "contentCategoryIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "contentCategoryIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "directorySiteIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "directorySiteIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxEndDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxEndDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxStartDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxStartDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minEndDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minEndDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minStartDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minStartDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "placementGroupType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "placementGroupType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "placementStrategyIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "placementStrategyIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pricingTypes", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pricingTypes",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "siteIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "siteIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing placement group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// group ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.PlacementGroup body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing placement group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.PlacementGroup body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.PlacementGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementGroups"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing placement group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.PlacementGroup body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing placement group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.PlacementGroup body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.PlacementGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementGroups"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "placementStrategies" collection of methods.</summary>
    public class PlacementStrategiesResource
    {
        private const string Resource = "placementStrategies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlacementStrategiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing placement strategy.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// strategy ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing placement strategy.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement strategy ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementStrategies/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one placement strategy by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// strategy ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one placement strategy by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement strategy ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementStrategies/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new placement strategy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new placement strategy.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementStrategies"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of placement strategies, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of placement strategies, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementStrategiesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only placement strategies with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "placementstrategy*2015" will return objects with names like "placementstrategy June 2015",
            /// "placementstrategy April 2015", or simply "placementstrategy 2015". Most of the searches also add
            /// wildcards implicitly at the start and the end of the search string. For example, a search string of
            /// "placementstrategy" will match objects with name "my placementstrategy", "placementstrategy 2015", or
            /// simply "placementstrategy".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementStrategies"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing placement strategy. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// strategy ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing placement strategy. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement strategy ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementStrategies"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing placement strategy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing placement strategy.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.PlacementStrategy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placementStrategies"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "placements" collection of methods.</summary>
    public class PlacementsResource
    {
        private const string Resource = "placements";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlacementsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Generates tags for a placement.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual GeneratetagsRequest Generatetags(long profileId)
        {
            return new GeneratetagsRequest(service, profileId);
        }

        /// <summary>Generates tags for a placement.</summary>
        public class GeneratetagsRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementsGenerateTagsResponse>
        {
            /// <summary>Constructs a new Generatetags request.</summary>
            public GeneratetagsRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Generate placements belonging to this campaign. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CampaignId { get; set; }

            /// <summary>Generate tags for these placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementIds { get; set; }

            /// <summary>Tag formats to generate for these placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tagFormats", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TagFormatsEnum> TagFormats { get; set; }

            /// <summary>Tag formats to generate for these placements.</summary>
            public enum TagFormatsEnum
            {
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_CLICK_COMMANDS")]
                PLACEMENTTAGCLICKCOMMANDS,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_IFRAME_ILAYER")]
                PLACEMENTTAGIFRAMEILAYER,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_IFRAME_JAVASCRIPT")]
                PLACEMENTTAGIFRAMEJAVASCRIPT,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGIFRAMEJAVASCRIPTLEGACY,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH")]
                PLACEMENTTAGINSTREAMVIDEOPREFETCH,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3")]
                PLACEMENTTAGINSTREAMVIDEOPREFETCHVAST3,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERNAL_REDIRECT")]
                PLACEMENTTAGINTERNALREDIRECT,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT")]
                PLACEMENTTAGINTERSTITIALIFRAMEJAVASCRIPT,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGINTERSTITIALIFRAMEJAVASCRIPTLEGACY,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT")]
                PLACEMENTTAGINTERSTITIALINTERNALREDIRECT,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT")]
                PLACEMENTTAGINTERSTITIALJAVASCRIPT,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGINTERSTITIALJAVASCRIPTLEGACY,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_JAVASCRIPT")]
                PLACEMENTTAGJAVASCRIPT,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGJAVASCRIPTLEGACY,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_STANDARD")]
                PLACEMENTTAGSTANDARD,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING")]
                PLACEMENTTAGTRACKING,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING_IFRAME")]
                PLACEMENTTAGTRACKINGIFRAME,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING_JAVASCRIPT")]
                PLACEMENTTAGTRACKINGJAVASCRIPT,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "generatetags"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placements/generatetags"; }
            }

            /// <summary>Initializes Generatetags parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "placementIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "placementIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tagFormats", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tagFormats",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one placement by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one placement by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Placement>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placements/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new placement.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Placement body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new placement.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Placement>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Placement body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Placement Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placements"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of placements, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of placements, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlacementsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only placements that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only archived placements. Don't set this field to select both archived and non-archived
            /// placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only placements that belong to these campaigns.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select only placements that are associated with these compatibilities. DISPLAY and
            /// DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or
            /// interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps.
            /// IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.</summary>
            [Google.Apis.Util.RequestParameterAttribute("compatibilities", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<CompatibilitiesEnum> Compatibilities { get; set; }

            /// <summary>Select only placements that are associated with these compatibilities. DISPLAY and
            /// DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or
            /// interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps.
            /// IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.</summary>
            public enum CompatibilitiesEnum
            {
                [Google.Apis.Util.StringValueAttribute("APP")]
                APP,
                [Google.Apis.Util.StringValueAttribute("APP_INTERSTITIAL")]
                APPINTERSTITIAL,
                [Google.Apis.Util.StringValueAttribute("DISPLAY")]
                DISPLAY,
                [Google.Apis.Util.StringValueAttribute("DISPLAY_INTERSTITIAL")]
                DISPLAYINTERSTITIAL,
                [Google.Apis.Util.StringValueAttribute("IN_STREAM_VIDEO")]
                INSTREAMVIDEO,
            }

            /// <summary>Select only placements that are associated with these content categories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentCategoryIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ContentCategoryIds { get; set; }

            /// <summary>Select only placements that are associated with these directory sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only placements that belong to these placement groups.</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> GroupIds { get; set; }

            /// <summary>Select only placements with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only placements or placement groups whose end date is on or before the specified
            /// maxEndDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxEndDate { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only placements or placement groups whose start date is on or before the specified
            /// maxStartDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxStartDate { get; set; }

            /// <summary>Select only placements or placement groups whose end date is on or after the specified
            /// minEndDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("minEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinEndDate { get; set; }

            /// <summary>Select only placements or placement groups whose start date is on or after the specified
            /// minStartDate. The date should be formatted as "yyyy-MM-dd".</summary>
            [Google.Apis.Util.RequestParameterAttribute("minStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinStartDate { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only placements with this payment source.</summary>
            [Google.Apis.Util.RequestParameterAttribute("paymentSource", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PaymentSourceEnum> PaymentSource { get; set; }

            /// <summary>Select only placements with this payment source.</summary>
            public enum PaymentSourceEnum
            {
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_AGENCY_PAID")]
                PLACEMENTAGENCYPAID,
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_PUBLISHER_PAID")]
                PLACEMENTPUBLISHERPAID,
            }

            /// <summary>Select only placements that are associated with these placement strategies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementStrategyIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementStrategyIds { get; set; }

            /// <summary>Select only placements with these pricing types.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pricingTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PricingTypesEnum> PricingTypes { get; set; }

            /// <summary>Select only placements with these pricing types.</summary>
            public enum PricingTypesEnum
            {
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPA")]
                PRICINGTYPECPA,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPC")]
                PRICINGTYPECPC,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPM")]
                PRICINGTYPECPM,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_CLICKS")]
                PRICINGTYPEFLATRATECLICKS,
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_IMPRESSIONS")]
                PRICINGTYPEFLATRATEIMPRESSIONS,
            }

            /// <summary>Allows searching for placements by name or ID. Wildcards (*) are allowed. For example,
            /// "placement*2015" will return placements with names like "placement June 2015", "placement May 2015", or
            /// simply "placements 2015". Most of the searches also add wildcards implicitly at the start and the end of
            /// the search string. For example, a search string of "placement" will match placements with name "my
            /// placement", "placement 2015", or simply "placement".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only placements that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteIds { get; set; }

            /// <summary>Select only placements that are associated with these sizes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sizeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SizeIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placements"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "archived", new Google.Apis.Discovery.Parameter
                    {
                        Name = "archived",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "compatibilities", new Google.Apis.Discovery.Parameter
                    {
                        Name = "compatibilities",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "contentCategoryIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "contentCategoryIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "directorySiteIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "directorySiteIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "groupIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "groupIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxEndDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxEndDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxStartDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxStartDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minEndDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minEndDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minStartDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minStartDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "paymentSource", new Google.Apis.Discovery.Parameter
                    {
                        Name = "paymentSource",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "placementStrategyIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "placementStrategyIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pricingTypes", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pricingTypes",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "siteIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "siteIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sizeIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sizeIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing placement. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Placement body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing placement. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Placement>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Placement body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Placement Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placements"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing placement.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Placement body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing placement.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Placement>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Placement body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Placement Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/placements"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "platformTypes" collection of methods.</summary>
    public class PlatformTypesResource
    {
        private const string Resource = "platformTypes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlatformTypesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one platform type by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Platform type
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one platform type by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlatformType>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Platform type ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/platformTypes/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of platform types.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of platform types.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PlatformTypesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/platformTypes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "postalCodes" collection of methods.</summary>
    public class PostalCodesResource
    {
        private const string Resource = "postalCodes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PostalCodesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one postal code by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="code">Postal code
        /// ID.</param>
        public virtual GetRequest Get(long profileId, string code)
        {
            return new GetRequest(service, profileId, code);
        }

        /// <summary>Gets one postal code by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PostalCode>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, string code)
                : base(service)
            {
                ProfileId = profileId;
                Code = code;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Postal code ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("code", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Code { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/postalCodes/{code}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "code", new Google.Apis.Discovery.Parameter
                    {
                        Name = "code",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of postal codes.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of postal codes.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.PostalCodesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/postalCodes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one project by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Project
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one project by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Project>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of projects, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of projects, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ProjectsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only projects with these advertiser IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only projects with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for projects by name or ID. Wildcards (*) are allowed. For example,
            /// "project*2015" will return projects with names like "project June 2015", "project April 2015", or simply
            /// "project 2015". Most of the searches also add wildcards implicitly at the start and the end of the
            /// search string. For example, a search string of "project" will match projects with name "my project",
            /// "project 2015", or simply "project".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/projects"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "regions" collection of methods.</summary>
    public class RegionsResource
    {
        private const string Resource = "regions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves a list of regions.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of regions.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RegionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/regions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "remarketingListShares" collection of methods.</summary>
    public class RemarketingListSharesResource
    {
        private const string Resource = "remarketingListShares";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RemarketingListSharesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one remarketing list share by remarketing list ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="remarketingListId">Remarketing list ID.</param>
        public virtual GetRequest Get(long profileId, long remarketingListId)
        {
            return new GetRequest(service, profileId, remarketingListId);
        }

        /// <summary>Gets one remarketing list share by remarketing list ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long remarketingListId)
                : base(service)
            {
                ProfileId = profileId;
                RemarketingListId = remarketingListId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("remarketingListId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long RemarketingListId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingListShares/{remarketingListId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "remarketingListId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "remarketingListId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing remarketing list share. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="remarketingListId">Remarketing list ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare body, long profileId, long remarketingListId)
        {
            return new PatchRequest(service, body, profileId, remarketingListId);
        }

        /// <summary>Updates an existing remarketing list share. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare body, long profileId, long remarketingListId)
                : base(service)
            {
                ProfileId = profileId;
                RemarketingListId = remarketingListId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("remarketingListId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long RemarketingListId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingListShares"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "remarketingListId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "remarketingListId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing remarketing list share.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing remarketing list share.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.RemarketingListShare Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingListShares"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "remarketingLists" collection of methods.</summary>
    public class RemarketingListsResource
    {
        private const string Resource = "remarketingLists";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RemarketingListsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one remarketing list by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Remarketing
        /// list ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one remarketing list by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingLists/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new remarketing list.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.RemarketingList body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new remarketing list.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.RemarketingList body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.RemarketingList Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingLists"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of remarketing lists, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="advertiserId">Select only remarketing lists owned by this advertiser.</param>
        public virtual ListRequest List(long profileId, long advertiserId)
        {
            return new ListRequest(service, profileId, advertiserId);
        }

        /// <summary>Retrieves a list of remarketing lists, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingListsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long advertiserId)
                : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only remarketing lists owned by this advertiser.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Select only active or only inactive remarketing lists.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only remarketing lists that have this floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightActivityId { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "remarketing list*2015" will return objects with names like "remarketing list June 2015", "remarketing
            /// list April 2015", or simply "remarketing list 2015". Most of the searches also add wildcards implicitly
            /// at the start and the end of the search string. For example, a search string of "remarketing list" will
            /// match objects with name "my remarketing list", "remarketing list 2015", or simply "remarketing
            /// list".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingLists"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "floodlightActivityId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "floodlightActivityId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing remarketing list. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Remarketing
        /// list ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.RemarketingList body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing remarketing list. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.RemarketingList body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.RemarketingList Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingLists"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing remarketing list.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.RemarketingList body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing remarketing list.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.RemarketingList body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.RemarketingList Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/remarketingLists"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "reports" collection of methods.</summary>
    public class ReportsResource
    {
        private const string Resource = "reports";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ReportsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            compatibleFields = new CompatibleFieldsResource(service);
            files = new FilesResource(service);

        }

        private readonly CompatibleFieldsResource compatibleFields;

        /// <summary>Gets the CompatibleFields resource.</summary>
        public virtual CompatibleFieldsResource CompatibleFields
        {
            get { return compatibleFields; }
        }

        /// <summary>The "compatibleFields" collection of methods.</summary>
        public class CompatibleFieldsResource
        {
            private const string Resource = "compatibleFields";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public CompatibleFieldsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Returns the fields that are compatible to be selected in the respective sections of a report
            /// criteria, given the fields already selected in the input report and user permissions.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="profileId">The DFA user profile ID.</param>
            public virtual QueryRequest Query(Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId)
            {
                return new QueryRequest(service, body, profileId);
            }

            /// <summary>Returns the fields that are compatible to be selected in the respective sections of a report
            /// criteria, given the fields already selected in the input report and user permissions.</summary>
            public class QueryRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.CompatibleFields>
            {
                /// <summary>Constructs a new Query request.</summary>
                public QueryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId)
                    : base(service)
                {
                    ProfileId = profileId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The DFA user profile ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dfareporting.v2_4.Data.Report Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "query"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "userprofiles/{profileId}/reports/compatiblefields/query"; }
                }

                /// <summary>Initializes Query parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "profileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "profileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        /// <summary>The "files" collection of methods.</summary>
        public class FilesResource
        {
            private const string Resource = "files";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public FilesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Retrieves a report file.</summary>
            /// <param name="profileId">The DFA profile ID.</param>
            /// <param name="reportId">The ID of the
            /// report.</param>
            /// <param name="fileId">The ID of the report file.</param>
            public virtual GetRequest Get(long profileId, long reportId, long fileId)
            {
                return new GetRequest(service, profileId, reportId, fileId);
            }

            /// <summary>Retrieves a report file.</summary>
            public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.File>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, long profileId, long reportId, long fileId)
                    : base(service)
                {
                    ProfileId = profileId;
                    ReportId = reportId;
                    FileId = fileId;
                    MediaDownloader = new Google.Apis.Download.MediaDownloader(service);
                    InitParameters();
                }


                /// <summary>The DFA profile ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>The ID of the report.</summary>
                [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ReportId { get; private set; }

                /// <summary>The ID of the report file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("fileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long FileId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "userprofiles/{profileId}/reports/{reportId}/files/{fileId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "profileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "profileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "reportId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "reportId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "fileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "fileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

                /// <summary>Gets the media downloader.</summary>
                public Google.Apis.Download.IMediaDownloader MediaDownloader { get; private set; }

                /// <summary>Synchronously download the media into the given stream.</summary>
                public virtual void Download(System.IO.Stream stream)
                {
                    MediaDownloader.Download(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download the media into the given stream.</summary>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream)
                {
                    return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download the media into the given stream.</summary>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream,
                    System.Threading.CancellationToken cancellationToken)
                {
                    return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
                }

            }

            /// <summary>Lists files for a report.</summary>
            /// <param name="profileId">The DFA profile ID.</param>
            /// <param name="reportId">The ID of the parent
            /// report.</param>
            public virtual ListRequest List(long profileId, long reportId)
            {
                return new ListRequest(service, profileId, reportId);
            }

            /// <summary>Lists files for a report.</summary>
            public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.FileList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                    : base(service)
                {
                    ProfileId = profileId;
                    ReportId = reportId;
                    InitParameters();
                }


                /// <summary>The DFA profile ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>The ID of the parent report.</summary>
                [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ReportId { get; private set; }

                /// <summary>Maximum number of results to return.</summary>
                /// [minimum: 0]
                /// [maximum: 10]
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> MaxResults { get; set; }

                /// <summary>The value of the nextToken from the previous result page.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The field by which to sort the list.</summary>
                /// [default: LAST_MODIFIED_TIME]
                [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

                /// <summary>The field by which to sort the list.</summary>
                public enum SortFieldEnum
                {
                    /// <summary>Sort by file ID.</summary>
                    [Google.Apis.Util.StringValueAttribute("ID")]
                    ID,
                    /// <summary>Sort by 'lastmodifiedAt' field.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                    LASTMODIFIEDTIME,
                }

                /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
                /// [default: DESCENDING]
                [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

                /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
                public enum SortOrderEnum
                {
                    /// <summary>Ascending order.</summary>
                    [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                    ASCENDING,
                    /// <summary>Descending order.</summary>
                    [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                    DESCENDING,
                }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "userprofiles/{profileId}/reports/{reportId}/files"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "profileId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "profileId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "reportId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "reportId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sortField", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sortField",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = "LAST_MODIFIED_TIME",
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sortOrder", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sortOrder",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = "DESCENDING",
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Deletes a report by its ID.</summary>
        /// <param name="profileId">The DFA user profile ID.</param>
        /// <param name="reportId">The ID of the
        /// report.</param>
        public virtual DeleteRequest Delete(long profileId, long reportId)
        {
            return new DeleteRequest(service, profileId, reportId);
        }

        /// <summary>Deletes a report by its ID.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a report by its ID.</summary>
        /// <param name="profileId">The DFA user profile ID.</param>
        /// <param name="reportId">The ID of the
        /// report.</param>
        public virtual GetRequest Get(long profileId, long reportId)
        {
            return new GetRequest(service, profileId, reportId);
        }

        /// <summary>Retrieves a report by its ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Report>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a report.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile ID.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Creates a report.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Report>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Report Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves list of reports.</summary>
        /// <param name="profileId">The DFA user profile ID.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves list of reports.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.ReportList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 10]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The scope that defines which results are returned, default is 'MINE'.</summary>
            /// [default: MINE]
            [Google.Apis.Util.RequestParameterAttribute("scope", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ScopeEnum> Scope { get; set; }

            /// <summary>The scope that defines which results are returned, default is 'MINE'.</summary>
            public enum ScopeEnum
            {
                /// <summary>All reports in account.</summary>
                [Google.Apis.Util.StringValueAttribute("ALL")]
                ALL,
                /// <summary>My reports.</summary>
                [Google.Apis.Util.StringValueAttribute("MINE")]
                MINE,
            }

            /// <summary>The field by which to sort the list.</summary>
            /// [default: LAST_MODIFIED_TIME]
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>The field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary>Sort by report ID.</summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                /// <summary>Sort by 'lastModifiedTime' field.</summary>
                [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                LASTMODIFIEDTIME,
                /// <summary>Sort by name of reports.</summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            /// [default: DESCENDING]
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is 'DESCENDING'.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "scope", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scope",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "MINE",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "LAST_MODIFIED_TIME",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "DESCENDING",
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a report. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile ID.</param>
        /// <param name="reportId">The ID of the
        /// report.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId, long reportId)
        {
            return new PatchRequest(service, body, profileId, reportId);
        }

        /// <summary>Updates a report. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Report>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Report Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Runs a report.</summary>
        /// <param name="profileId">The DFA profile ID.</param>
        /// <param name="reportId">The ID of the
        /// report.</param>
        public virtual RunRequest Run(long profileId, long reportId)
        {
            return new RunRequest(service, profileId, reportId);
        }

        /// <summary>Runs a report.</summary>
        public class RunRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.File>
        {
            /// <summary>Constructs a new Run request.</summary>
            public RunRequest(Google.Apis.Services.IClientService service, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }


            /// <summary>The DFA profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>If set and true, tries to run the report synchronously.</summary>
            [Google.Apis.Util.RequestParameterAttribute("synchronous", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Synchronous { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "run"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}/run"; }
            }

            /// <summary>Initializes Run parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "synchronous", new Google.Apis.Discovery.Parameter
                    {
                        Name = "synchronous",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a report.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The DFA user profile ID.</param>
        /// <param name="reportId">The ID of the
        /// report.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId, long reportId)
        {
            return new UpdateRequest(service, body, profileId, reportId);
        }

        /// <summary>Updates a report.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Report>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Report body, long profileId, long reportId)
                : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                Body = body;
                InitParameters();
            }


            /// <summary>The DFA user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Report Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/reports/{reportId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "sites" collection of methods.</summary>
    public class SitesResource
    {
        private const string Resource = "sites";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SitesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one site by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Site
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one site by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Site>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Site ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sites/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new site.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Site body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new site.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Site>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Site body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Site Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sites"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of sites, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of sites, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.SitesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>This search filter is no longer supported and will have no effect on the results
            /// returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInStreamVideoPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInStreamVideoPlacements { get; set; }

            /// <summary>This search filter is no longer supported and will have no effect on the results
            /// returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInterstitialPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInterstitialPlacements { get; set; }

            /// <summary>Select only sites that accept publisher paid placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsPublisherPaidPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsPublisherPaidPlacements { get; set; }

            /// <summary>Select only AdWords sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("adWordsSite", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AdWordsSite { get; set; }

            /// <summary>Select only approved sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("approved", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Approved { get; set; }

            /// <summary>Select only sites with these campaign IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select only sites with these directory site IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only sites with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name, ID or keyName. Wildcards (*) are allowed. For example,
            /// "site*2015" will return objects with names like "site June 2015", "site April 2015", or simply "site
            /// 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string.
            /// For example, a search string of "site" will match objects with name "my site", "site 2015", or simply
            /// "site".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only sites with this subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Select only sites that have not been mapped to a directory site.</summary>
            [Google.Apis.Util.RequestParameterAttribute("unmappedSite", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UnmappedSite { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sites"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "acceptsInStreamVideoPlacements", new Google.Apis.Discovery.Parameter
                    {
                        Name = "acceptsInStreamVideoPlacements",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "acceptsInterstitialPlacements", new Google.Apis.Discovery.Parameter
                    {
                        Name = "acceptsInterstitialPlacements",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "acceptsPublisherPaidPlacements", new Google.Apis.Discovery.Parameter
                    {
                        Name = "acceptsPublisherPaidPlacements",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "adWordsSite", new Google.Apis.Discovery.Parameter
                    {
                        Name = "adWordsSite",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approved", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approved",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "campaignIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "campaignIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "directorySiteIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "directorySiteIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "subaccountId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subaccountId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "unmappedSite", new Google.Apis.Discovery.Parameter
                    {
                        Name = "unmappedSite",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing site. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Site
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Site body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing site. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Site>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Site body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Site ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Site Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sites"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing site.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Site body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing site.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Site>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Site body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Site Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sites"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "sizes" collection of methods.</summary>
    public class SizesResource
    {
        private const string Resource = "sizes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SizesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one size by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Size
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one size by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Size>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Size ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sizes/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new size.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Size body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new size.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Size>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Size body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Size Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sizes"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of sizes, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of sizes, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.SizesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only sizes with this height.</summary>
            [Google.Apis.Util.RequestParameterAttribute("height", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Height { get; set; }

            /// <summary>Select only IAB standard sizes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("iabStandard", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> IabStandard { get; set; }

            /// <summary>Select only sizes with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only sizes with this width.</summary>
            [Google.Apis.Util.RequestParameterAttribute("width", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Width { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/sizes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "height", new Google.Apis.Discovery.Parameter
                    {
                        Name = "height",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "iabStandard", new Google.Apis.Discovery.Parameter
                    {
                        Name = "iabStandard",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "width", new Google.Apis.Discovery.Parameter
                    {
                        Name = "width",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "subaccounts" collection of methods.</summary>
    public class SubaccountsResource
    {
        private const string Resource = "subaccounts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SubaccountsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one subaccount by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Subaccount
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one subaccount by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Subaccount>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/subaccounts/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new subaccount.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.Subaccount body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new subaccount.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Subaccount>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Subaccount body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Subaccount Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/subaccounts"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets a list of subaccounts, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Gets a list of subaccounts, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.SubaccountsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only subaccounts with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "subaccount*2015" will return objects with names like "subaccount June 2015", "subaccount April 2015",
            /// or simply "subaccount 2015". Most of the searches also add wildcards implicitly at the start and the end
            /// of the search string. For example, a search string of "subaccount" will match objects with name "my
            /// subaccount", "subaccount 2015", or simply "subaccount".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/subaccounts"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing subaccount. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Subaccount
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.Subaccount body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing subaccount. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Subaccount>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Subaccount body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Subaccount Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/subaccounts"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing subaccount.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.Subaccount body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing subaccount.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.Subaccount>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.Subaccount body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.Subaccount Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/subaccounts"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "targetableRemarketingLists" collection of methods.</summary>
    public class TargetableRemarketingListsResource
    {
        private const string Resource = "targetableRemarketingLists";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetableRemarketingListsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one remarketing list by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Remarketing
        /// list ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one remarketing list by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.TargetableRemarketingList>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/targetableRemarketingLists/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of targetable remarketing lists, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param
        /// name="advertiserId">Select only targetable remarketing lists targetable by these advertisers.</param>
        public virtual ListRequest List(long profileId, long advertiserId)
        {
            return new ListRequest(service, profileId, advertiserId);
        }

        /// <summary>Retrieves a list of targetable remarketing lists, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.TargetableRemarketingListsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long advertiserId)
                : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only targetable remarketing lists targetable by these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Select only active or only inactive targetable remarketing lists.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "remarketing list*2015" will return objects with names like "remarketing list June 2015", "remarketing
            /// list April 2015", or simply "remarketing list 2015". Most of the searches also add wildcards implicitly
            /// at the start and the end of the search string. For example, a search string of "remarketing list" will
            /// match objects with name "my remarketing list", "remarketing list 2015", or simply "remarketing
            /// list".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/targetableRemarketingLists"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "active", new Google.Apis.Discovery.Parameter
                    {
                        Name = "active",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "userProfiles" collection of methods.</summary>
    public class UserProfilesResource
    {
        private const string Resource = "userProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one user profile by ID.</summary>
        /// <param name="profileId">The user profile ID.</param>
        public virtual GetRequest Get(long profileId)
        {
            return new GetRequest(service, profileId);
        }

        /// <summary>Gets one user profile by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>The user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves list of user profiles for a user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Retrieves list of user profiles for a user.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserProfileList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "userRolePermissionGroups" collection of methods.</summary>
    public class UserRolePermissionGroupsResource
    {
        private const string Resource = "userRolePermissionGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserRolePermissionGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one user role permission group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role
        /// permission group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one user role permission group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRolePermissionGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role permission group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRolePermissionGroups/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets a list of all supported user role permission groups.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Gets a list of all supported user role permission groups.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRolePermissionGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRolePermissionGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "userRolePermissions" collection of methods.</summary>
    public class UserRolePermissionsResource
    {
        private const string Resource = "userRolePermissions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserRolePermissionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets one user role permission by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role
        /// permission ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one user role permission by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRolePermission>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role permission ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRolePermissions/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets a list of user role permissions, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Gets a list of user role permissions, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRolePermissionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only user role permissions with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRolePermissions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "userRoles" collection of methods.</summary>
    public class UserRolesResource
    {
        private const string Resource = "userRoles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserRolesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes an existing user role.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role
        /// ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(service, profileId, id);
        }

        /// <summary>Deletes an existing user role.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRoles/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets one user role by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role
        /// ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(service, profileId, id);
        }

        /// <summary>Gets one user role by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRole>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRoles/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new user role.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v2_4.Data.UserRole body, long profileId)
        {
            return new InsertRequest(service, body, profileId);
        }

        /// <summary>Inserts a new user role.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRole>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.UserRole body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.UserRole Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRoles"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of user roles, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(service, profileId);
        }

        /// <summary>Retrieves a list of user roles, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRolesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only account level user roles not associated with any specific subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("accountUserRoleOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AccountUserRoleOnly { get; set; }

            /// <summary>Select only user roles with the specified IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "userrole*2015" will return objects with names like "userrole June 2015", "userrole April 2015", or
            /// simply "userrole 2015". Most of the searches also add wildcards implicitly at the start and the end of
            /// the search string. For example, a search string of "userrole" will match objects with name "my
            /// userrole", "userrole 2015", or simply "userrole".</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID,
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME,
            }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results, default is ASCENDING.</summary>
            public enum SortOrderEnum
            {
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING,
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING,
            }

            /// <summary>Select only user roles that belong to this subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRoles"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "accountUserRoleOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "accountUserRoleOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ids", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ids",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchString", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchString",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "subaccountId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subaccountId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing user role. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role
        /// ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v2_4.Data.UserRole body, long profileId, long id)
        {
            return new PatchRequest(service, body, profileId, id);
        }

        /// <summary>Updates an existing user role. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRole>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.UserRole body, long profileId, long id)
                : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.UserRole Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRoles"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an existing user role.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v2_4.Data.UserRole body, long profileId)
        {
            return new UpdateRequest(service, body, profileId);
        }

        /// <summary>Updates an existing user role.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v2_4.Data.UserRole>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v2_4.Data.UserRole body, long profileId)
                : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }


            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v2_4.Data.UserRole Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "userprofiles/{profileId}/userRoles"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Dfareporting.v2_4.Data
{    

    /// <summary>Contains properties of a DCM account.</summary>
    public class Account : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account permissions assigned to this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountPermissionIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> AccountPermissionIds { get; set; } 

        /// <summary>Profile for this account. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountProfile")]
        public virtual string AccountProfile { get; set; } 

        /// <summary>Whether this account is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Maximum number of active ads allowed for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeAdsLimitTier")]
        public virtual string ActiveAdsLimitTier { get; set; } 

        /// <summary>Whether to serve creatives with Active View tags. If disabled, viewability data will not be
        /// available for any impressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeViewOptOut")]
        public virtual System.Nullable<bool> ActiveViewOptOut { get; set; } 

        /// <summary>User role permissions available to the user roles of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availablePermissionIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> AvailablePermissionIds { get; set; } 

        /// <summary>Whether campaigns created in this account will be enabled for comScore vCE by default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comscoreVceEnabled")]
        public virtual System.Nullable<bool> ComscoreVceEnabled { get; set; } 

        /// <summary>ID of the country associated with this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryId")]
        public virtual System.Nullable<long> CountryId { get; set; } 

        /// <summary>ID of currency associated with this account. This is a required field. Acceptable values are: - "1"
        /// for USD - "2" for GBP - "3" for ESP - "4" for SEK - "5" for CAD - "6" for JPY - "7" for DEM - "8" for AUD -
        /// "9" for FRF - "10" for ITL - "11" for DKK - "12" for NOK - "13" for FIM - "14" for ZAR - "15" for IEP - "16"
        /// for NLG - "17" for EUR - "18" for KRW - "19" for TWD - "20" for SGD - "21" for CNY - "22" for HKD - "23" for
        /// NZD - "24" for MYR - "25" for BRL - "26" for PTE - "27" for MXP - "28" for CLP - "29" for TRY - "30" for ARS
        /// - "31" for PEN - "32" for ILS - "33" for CHF - "34" for VEF - "35" for COP - "36" for GTQ - "37" for PLN -
        /// "39" for INR - "40" for THB - "41" for IDR - "42" for CZK - "43" for RON - "44" for HUF - "45" for RUB -
        /// "46" for AED - "47" for BGN - "48" for HRK</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyId")]
        public virtual System.Nullable<long> CurrencyId { get; set; } 

        /// <summary>Default placement dimensions for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultCreativeSizeId")]
        public virtual System.Nullable<long> DefaultCreativeSizeId { get; set; } 

        /// <summary>Description of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>ID of this account. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#account".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Locale of this account. Acceptable values are: - "cs" (Czech) - "de" (German) - "en" (English) -
        /// "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja" (Japanese) - "ko"
        /// (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) - "tr" (Turkish) -
        /// "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual string Locale { get; set; } 

        /// <summary>Maximum image size allowed for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximumImageSize")]
        public virtual System.Nullable<long> MaximumImageSize { get; set; } 

        /// <summary>Name of this account. This is a required field, and must be less than 128 characters long and be
        /// globally unique.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by
        /// default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nielsenOcrEnabled")]
        public virtual System.Nullable<bool> NielsenOcrEnabled { get; set; } 

        /// <summary>Reporting configuration of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportsConfiguration")]
        public virtual ReportsConfiguration ReportsConfiguration { get; set; } 

        /// <summary>File size limit in kilobytes of Rich Media teaser creatives. Must be between 1 and 10240.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("teaserSizeLimit")]
        public virtual System.Nullable<long> TeaserSizeLimit { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Gets a summary of active ads in an account.</summary>
    public class AccountActiveAdSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Ads that have been activated for the account</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeAds")]
        public virtual System.Nullable<long> ActiveAds { get; set; } 

        /// <summary>Maximum number of active ads allowed for the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeAdsLimitTier")]
        public virtual string ActiveAdsLimitTier { get; set; } 

        /// <summary>Ads that can be activated for the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availableAds")]
        public virtual System.Nullable<long> AvailableAds { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountActiveAdSummary".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>AccountPermissions contains information about a particular account permission. Some features of DCM
    /// require an account permission to be present in the account.</summary>
    public class AccountPermission : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account profiles associated with this account permission.
        ///
        /// Possible values are: - "ACCOUNT_PROFILE_BASIC" - "ACCOUNT_PROFILE_STANDARD"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountProfiles")]
        public virtual System.Collections.Generic.IList<string> AccountProfiles { get; set; } 

        /// <summary>ID of this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountPermission".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Administrative level required to enable this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("level")]
        public virtual string Level { get; set; } 

        /// <summary>Name of this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Permission group of this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionGroupId")]
        public virtual System.Nullable<long> PermissionGroupId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>AccountPermissionGroups contains a mapping of permission group IDs to names. A permission group is a
    /// grouping of account permissions.</summary>
    public class AccountPermissionGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this account permission group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountPermissionGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this account permission group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Account Permission Group List Response</summary>
    public class AccountPermissionGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account permission group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountPermissionGroups")]
        public virtual System.Collections.Generic.IList<AccountPermissionGroup> AccountPermissionGroups { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountPermissionGroupsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Account Permission List Response</summary>
    public class AccountPermissionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account permission collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountPermissions")]
        public virtual System.Collections.Generic.IList<AccountPermission> AccountPermissions { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountPermissionsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>AccountUserProfiles contains properties of a DCM user profile. This resource is specifically for
    /// managing user profiles, whereas UserProfiles is for accessing the API.</summary>
    public class AccountUserProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of the user profile. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether this user profile is active. This defaults to false, and must be set true on insert for the
        /// user profile to be usable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Filter that describes which advertisers are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserFilter")]
        public virtual ObjectFilter AdvertiserFilter { get; set; } 

        /// <summary>Filter that describes which campaigns are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignFilter")]
        public virtual ObjectFilter CampaignFilter { get; set; } 

        /// <summary>Comments for this user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; } 

        /// <summary>Email of the user profile. The email addresss must be linked to a Google Account. This field is
        /// required on insertion and is read-only after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>ID of the user profile. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountUserProfile".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Locale of the user profile. This is a required field. Acceptable values are: - "cs" (Czech) - "de"
        /// (German) - "en" (English) - "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it"
        /// (Italian) - "ja" (Japanese) - "ko" (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) -
        /// "sv" (Swedish) - "tr" (Turkish) - "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual string Locale { get; set; } 

        /// <summary>Name of the user profile. This is a required field. Must be less than 64 characters long, must be
        /// globally unique, and cannot contain whitespace or any of the following characters: "&;"#%,".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Filter that describes which sites are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteFilter")]
        public virtual ObjectFilter SiteFilter { get; set; } 

        /// <summary>Subaccount ID of the user profile. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Trafficker type of this user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("traffickerType")]
        public virtual string TraffickerType { get; set; } 

        /// <summary>User type of the user profile. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userAccessType")]
        public virtual string UserAccessType { get; set; } 

        /// <summary>Filter that describes which user roles are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRoleFilter")]
        public virtual ObjectFilter UserRoleFilter { get; set; } 

        /// <summary>User role ID of the user profile. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRoleId")]
        public virtual System.Nullable<long> UserRoleId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Account User Profile List Response</summary>
    public class AccountUserProfilesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account user profile collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountUserProfiles")]
        public virtual System.Collections.Generic.IList<AccountUserProfile> AccountUserProfiles { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountUserProfilesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Account List Response</summary>
    public class AccountsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accounts")]
        public virtual System.Collections.Generic.IList<Account> Accounts { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an activity group.</summary>
    public class Activities : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of activity filters. The dimension values need to be all either of type "dfa:activity" or
        /// "dfa:activityGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<DimensionValue> Filters { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#activities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>List of names of floodlight activity metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
        public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a DCM ad.</summary>
    public class Ad : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this ad. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether this ad is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Advertiser ID of this ad. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Whether this ad is archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; } 

        /// <summary>Audience segment ID that is being targeted for this ad. Applicable when type is
        /// AD_SERVING_STANDARD_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceSegmentId")]
        public virtual System.Nullable<long> AudienceSegmentId { get; set; } 

        /// <summary>Campaign ID of this ad. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; } 

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; } 

        /// <summary>Click-through URL for this ad. This is a required field on insertion. Applicable when type is
        /// AD_SERVING_CLICK_TRACKER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; } 

        /// <summary>Click-through URL suffix properties for this ad. Applies to the URL in the ad or (if overriding ad
        /// properties) the URL in the creative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffixProperties")]
        public virtual ClickThroughUrlSuffixProperties ClickThroughUrlSuffixProperties { get; set; } 

        /// <summary>Comments for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; } 

        /// <summary>Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and
        /// DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular
        /// or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New
        /// mobile placements must be assigned DISPLAY or  DISPLAY_INTERSTITIAL and default ads created for those
        /// placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video
        /// ads developed with the VAST standard.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual string Compatibility { get; set; } 

        /// <summary>Information about the creation of this ad.This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; } 

        /// <summary>Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one
        /// assignment per creative group number is allowed for a maximum of two assignments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupAssignments")]
        public virtual System.Collections.Generic.IList<CreativeGroupAssignment> CreativeGroupAssignments { get; set; } 

        /// <summary>Creative rotation for this ad. Applicable when type is AD_SERVING_DEFAULT_AD,
        /// AD_SERVING_STANDARD_AD, or AD_SERVING_TRACKING. When type is AD_SERVING_DEFAULT_AD, this field should have
        /// exactly one creativeAssignment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeRotation")]
        public virtual CreativeRotation CreativeRotation { get; set; } 

        /// <summary>Time and day targeting information for this ad. Applicable when type is
        /// AD_SERVING_STANDARD_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dayPartTargeting")]
        public virtual DayPartTargeting DayPartTargeting { get; set; } 

        /// <summary>Default click-through event tag properties for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagProperties")]
        public virtual DefaultClickThroughEventTagProperties DefaultClickThroughEventTagProperties { get; set; } 

        /// <summary>Delivery schedule information for this ad. Applicable when type is AD_SERVING_STANDARD_AD or
        /// AD_SERVING_TRACKING. This field along with subfields priority and impressionRatio are required on insertion
        /// when type is AD_SERVING_STANDARD_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deliverySchedule")]
        public virtual DeliverySchedule DeliverySchedule { get; set; } 

        /// <summary>Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This
        /// is a required field on insert, and is read-only after insert.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicClickTracker")]
        public virtual System.Nullable<bool> DynamicClickTracker { get; set; } 

        /// <summary>Date and time that this ad should stop serving. Must be later than the start time. This is a
        /// required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(EndTimeRaw);
            }
            set
            {
                EndTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Event tag overrides for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTagOverrides")]
        public virtual System.Collections.Generic.IList<EventTagOverride> EventTagOverrides { get; set; } 

        /// <summary>Geographical targeting information for this ad.Applicable when type is
        /// AD_SERVING_STANDARD_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geoTargeting")]
        public virtual GeoTargeting GeoTargeting { get; set; } 

        /// <summary>ID of this ad. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this ad. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Key-value targeting information for this ad. Applicable when type is
        /// AD_SERVING_STANDARD_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyValueTargetingExpression")]
        public virtual KeyValueTargetingExpression KeyValueTargetingExpression { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#ad".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this ad. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Name of this ad. This is a required field and must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Placement assignments for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementAssignments")]
        public virtual System.Collections.Generic.IList<PlacementAssignment> PlacementAssignments { get; set; } 

        /// <summary>Applicable when type is AD_SERVING_STANDARD_AD. Remarketing list targeting expression for this
        /// ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListExpression")]
        public virtual ListTargetingExpression RemarketingListExpression { get; set; } 

        /// <summary>Size of this ad. Applicable when type is AD_SERVING_DEFAULT_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; } 

        /// <summary>Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is
        /// inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; } 

        /// <summary>Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is
        /// inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; } 

        /// <summary>Date and time that this ad should start serving. If creating an ad, this field must be a time in
        /// the future. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(StartTimeRaw);
            }
            set
            {
                StartTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Subaccount ID of this ad. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Technology platform targeting information for this ad. Applicable when type is
        /// AD_SERVING_STANDARD_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("technologyTargeting")]
        public virtual TechnologyTargeting TechnologyTargeting { get; set; } 

        /// <summary>Type of ad. This is a required field on insertion. Note that default ads (AD_SERVING_DEFAULT_AD)
        /// cannot be created directly (see Creative resource).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Ad Slot</summary>
    public class AdSlot : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Comment for this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; } 

        /// <summary>Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop,
        /// mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are
        /// for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the
        /// VAST standard.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual string Compatibility { get; set; } 

        /// <summary>Height of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual System.Nullable<long> Height { get; set; } 

        /// <summary>ID of the placement from an external platform that is linked to this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkedPlacementId")]
        public virtual System.Nullable<long> LinkedPlacementId { get; set; } 

        /// <summary>Name of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Payment source type of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentSourceType")]
        public virtual string PaymentSourceType { get; set; } 

        /// <summary>Primary ad slot of a roadblock inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        /// <summary>Width of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<long> Width { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Ad List Response</summary>
    public class AdsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Ad collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ads")]
        public virtual System.Collections.Generic.IList<Ad> Ads { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#adsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a DCM advertiser.</summary>
    public class Advertiser : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this advertiser.This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting
        /// purposes, allowing you to see aggregated information for all advertisers in each group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserGroupId")]
        public virtual System.Nullable<long> AdvertiserGroupId { get; set; } 

        /// <summary>Suffix added to click-through URL of ad creative associations under this advertiser. Must be less
        /// than 129 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffix")]
        public virtual string ClickThroughUrlSuffix { get; set; } 

        /// <summary>ID of the click-through event tag to apply by default to the landing pages of this advertiser's
        /// campaigns.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagId")]
        public virtual System.Nullable<long> DefaultClickThroughEventTagId { get; set; } 

        /// <summary>Default email address used in sender field for tag emails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultEmail")]
        public virtual string DefaultEmail { get; set; } 

        /// <summary>Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created
        /// automatically, so on insert this field should be left blank. This field can be set to another advertiser's
        /// floodlight configuration ID in order to share that advertiser's floodlight configuration with this
        /// advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with
        /// floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration
        /// is not already shared with another advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; } 

        /// <summary>Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationIdDimensionValue")]
        public virtual DimensionValue FloodlightConfigurationIdDimensionValue { get; set; } 

        /// <summary>ID of this advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertiser".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this advertiser. This is a required field and must be less than 256 characters long and
        /// unique among advertisers of the same account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of
        /// this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight
        /// configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has
        /// activities associated with any campaign or placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalFloodlightConfigurationId")]
        public virtual System.Nullable<long> OriginalFloodlightConfigurationId { get; set; } 

        /// <summary>Status of this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>Subaccount ID of this advertiser.This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Suspension status of this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suspended")]
        public virtual System.Nullable<bool> Suspended { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Groups advertisers together so that reports can be generated for the entire group at once.</summary>
    public class AdvertiserGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this advertiser group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>ID of this advertiser group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertiserGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this advertiser group. This is a required field and must be less than 256 characters long
        /// and unique among advertiser groups of the same account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Advertiser Group List Response</summary>
    public class AdvertiserGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Advertiser group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserGroups")]
        public virtual System.Collections.Generic.IList<AdvertiserGroup> AdvertiserGroups { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertiserGroupsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Advertiser List Response</summary>
    public class AdvertisersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Advertiser collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertisers")]
        public virtual System.Collections.Generic.IList<Advertiser> Advertisers { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertisersListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Audience Segment.</summary>
    public class AudienceSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Weight allocated to this segment. Must be between 1 and 1000. The weight assigned will be
        /// understood in proportion to the weights assigned to other segments in the same segment group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allocation")]
        public virtual System.Nullable<int> Allocation { get; set; } 

        /// <summary>ID of this audience segment. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Name of this audience segment. This is a required field and must be less than 65 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Audience Segment Group.</summary>
    public class AudienceSegmentGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Audience segments assigned to this group. The number of segments must be between 2 and
        /// 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceSegments")]
        public virtual System.Collections.Generic.IList<AudienceSegment> AudienceSegments { get; set; } 

        /// <summary>ID of this audience segment group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Name of this audience segment group. This is a required field and must be less than 65 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a browser that can be targeted by ads.</summary>
    public class Browser : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID referring to this grouping of browser and version numbers. This is the ID used for
        /// targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browserVersionId")]
        public virtual System.Nullable<long> BrowserVersionId { get; set; } 

        /// <summary>DART ID of this browser. This is the ID used when generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#browser".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Major version number (leftmost number) of this browser. For example, for Chrome 5.0.376.86 beta,
        /// this field should be set to 5. An asterisk (*) may be used to target any version number, and a question mark
        /// (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.*
        /// targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0.
        /// Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it
        /// is.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("majorVersion")]
        public virtual string MajorVersion { get; set; } 

        /// <summary>Minor version number (number after first dot on left) of this browser. For example, for Chrome
        /// 5.0.375.86 beta, this field should be set to 0. An asterisk (*) may be used to target any version number,
        /// and a question mark (?) may be used to target cases where the version number cannot be identified. For
        /// example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1,
        /// 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell
        /// which version it is.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minorVersion")]
        public virtual string MinorVersion { get; set; } 

        /// <summary>Name of this browser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Browser List Response</summary>
    public class BrowsersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Browser collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browsers")]
        public virtual System.Collections.Generic.IList<Browser> Browsers { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#browsersListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a DCM campaign.</summary>
    public class Campaign : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this campaign. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Additional creative optimization configurations for the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCreativeOptimizationConfigurations")]
        public virtual System.Collections.Generic.IList<CreativeOptimizationConfiguration> AdditionalCreativeOptimizationConfigurations { get; set; } 

        /// <summary>Advertiser group ID of the associated advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserGroupId")]
        public virtual System.Nullable<long> AdvertiserGroupId { get; set; } 

        /// <summary>Advertiser ID of this campaign. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the advertiser ID of this campaign. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Whether this campaign has been archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; } 

        /// <summary>Audience segment groups assigned to this campaign. Cannot have more than 300 segment
        /// groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceSegmentGroups")]
        public virtual System.Collections.Generic.IList<AudienceSegmentGroup> AudienceSegmentGroups { get; set; } 

        /// <summary>Billing invoice code included in the DCM client billing invoices associated with the
        /// campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingInvoiceCode")]
        public virtual string BillingInvoiceCode { get; set; } 

        /// <summary>Click-through URL suffix override properties for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffixProperties")]
        public virtual ClickThroughUrlSuffixProperties ClickThroughUrlSuffixProperties { get; set; } 

        /// <summary>Arbitrary comments about this campaign. Must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; } 

        /// <summary>Whether comScore vCE reports are enabled for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comscoreVceEnabled")]
        public virtual System.Nullable<bool> ComscoreVceEnabled { get; set; } 

        /// <summary>Information about the creation of this campaign. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; } 

        /// <summary>List of creative group IDs that are assigned to the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> CreativeGroupIds { get; set; } 

        /// <summary>Creative optimization configuration for the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeOptimizationConfiguration")]
        public virtual CreativeOptimizationConfiguration CreativeOptimizationConfiguration { get; set; } 

        /// <summary>Click-through event tag ID override properties for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagProperties")]
        public virtual DefaultClickThroughEventTagProperties DefaultClickThroughEventTagProperties { get; set; } 

        /// <summary>Date on which the campaign will stop running. On insert, the end date must be today or a future
        /// date. The end date must be later than or be the same as the start date. If, for example, you set 6/25/2015
        /// as both the start and end dates, the effective campaign run date is just that day only, 6/25/2015. The
        /// hours, minutes, and seconds of the end date should not be set, as doing so will result in an error. This is
        /// a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>Overrides that can be used to activate or deactivate advertiser event tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTagOverrides")]
        public virtual System.Collections.Generic.IList<EventTagOverride> EventTagOverrides { get; set; } 

        /// <summary>External ID for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalId")]
        public virtual string ExternalId { get; set; } 

        /// <summary>ID of this campaign. This is a read-only auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#campaign".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this campaign. This is a read-only
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Lookback window settings for the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; } 

        /// <summary>Name of this campaign. This is a required field and must be less than 256 characters long and
        /// unique among campaigns of the same advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Whether Nielsen reports are enabled for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nielsenOcrEnabled")]
        public virtual System.Nullable<bool> NielsenOcrEnabled { get; set; } 

        /// <summary>Date on which the campaign starts running. The start date can be any date. The hours, minutes, and
        /// seconds of the start date should not be set, as doing so will result in an error. This is a required
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>Subaccount ID of this campaign. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Campaign trafficker contact emails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("traffickerEmails")]
        public virtual System.Collections.Generic.IList<string> TraffickerEmails { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Identifies a creative which has been associated with a given campaign.</summary>
    public class CampaignCreativeAssociation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative associated with the campaign. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#campaignCreativeAssociation".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Campaign Creative Association List Response</summary>
    public class CampaignCreativeAssociationsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Campaign creative association collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignCreativeAssociations")]
        public virtual System.Collections.Generic.IList<CampaignCreativeAssociation> CampaignCreativeAssociations { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#campaignCreativeAssociationsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Campaign List Response</summary>
    public class CampaignsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Campaign collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaigns")]
        public virtual System.Collections.Generic.IList<Campaign> Campaigns { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#campaignsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Describes a change that a user has made to a resource.</summary>
    public class ChangeLog : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of the modified object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Action which caused the change.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; } 

        /// <summary>Time when the object was modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("changeTime")]
        public virtual string ChangeTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="ChangeTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> ChangeTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(ChangeTimeRaw);
            }
            set
            {
                ChangeTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Field name of the object which changed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; } 

        /// <summary>ID of this change log.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#changeLog".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>New value of the object field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newValue")]
        public virtual string NewValue { get; set; } 

        /// <summary>ID of the object of this change log. The object could be a campaign, placement, ad, or other
        /// type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectId")]
        public virtual System.Nullable<long> ObjectId { get; set; } 

        /// <summary>Object type of the change log.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
        public virtual string ObjectType { get; set; } 

        /// <summary>Old value of the object field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oldValue")]
        public virtual string OldValue { get; set; } 

        /// <summary>Subaccount ID of the modified object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Transaction ID of this change log. When a single API call results in many changes, each change will
        /// have a separate ID in the change log but will share the same transactionId.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transactionId")]
        public virtual System.Nullable<long> TransactionId { get; set; } 

        /// <summary>ID of the user who modified the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userProfileId")]
        public virtual System.Nullable<long> UserProfileId { get; set; } 

        /// <summary>User profile name of the user who modified the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userProfileName")]
        public virtual string UserProfileName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Change Log List Response</summary>
    public class ChangeLogsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Change log collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("changeLogs")]
        public virtual System.Collections.Generic.IList<ChangeLog> ChangeLogs { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#changeLogsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>City List Response</summary>
    public class CitiesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>City collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cities")]
        public virtual System.Collections.Generic.IList<City> Cities { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#citiesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a city that can be targeted by ads.</summary>
    public class City : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>DART ID of the country to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; } 

        /// <summary>DART ID of this city. This is the ID used for targeting and generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#city".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metro region code of the metro region (DMA) to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metroCode")]
        public virtual string MetroCode { get; set; } 

        /// <summary>ID of the metro region (DMA) to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metroDmaId")]
        public virtual System.Nullable<long> MetroDmaId { get; set; } 

        /// <summary>Name of this city.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Region code of the region to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; } 

        /// <summary>DART ID of the region to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionDartId")]
        public virtual System.Nullable<long> RegionDartId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Click Tag.</summary>
    public class ClickTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Advertiser event name associated with the click tag. This field is used by ENHANCED_BANNER,
        /// ENHANCED_IMAGE, and HTML5_BANNER creatives.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventName")]
        public virtual string EventName { get; set; } 

        /// <summary>Parameter name for the specified click tag. For ENHANCED_IMAGE creative assets, this field must
        /// match the value of the creative asset's creativeAssetId.name field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Parameter value for the specified click tag. This field contains a click-through url.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Click-through URL</summary>
    public class ClickThroughUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Read-only convenience field representing the actual URL that will be used for this click-through.
        /// The URL is computed as follows: - If defaultLandingPage is enabled then the campaign's default landing page
        /// URL is assigned to this field. - If defaultLandingPage is not enabled and a landingPageId is specified then
        /// that landing page's URL is assigned to this field. - If neither of the above cases apply, then the
        /// customClickThroughUrl is assigned to this field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("computedClickThroughUrl")]
        public virtual string ComputedClickThroughUrl { get; set; } 

        /// <summary>Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the
        /// landingPageId field is left unset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customClickThroughUrl")]
        public virtual string CustomClickThroughUrl { get; set; } 

        /// <summary>Whether the campaign default landing page is used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLandingPage")]
        public virtual System.Nullable<bool> DefaultLandingPage { get; set; } 

        /// <summary>ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set
        /// to false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("landingPageId")]
        public virtual System.Nullable<long> LandingPageId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Click Through URL Suffix settings.</summary>
    public class ClickThroughUrlSuffixProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Click-through URL suffix to apply to all ads in this entity's scope. Must be less than 128
        /// characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffix")]
        public virtual string ClickThroughUrlSuffix { get; set; } 

        /// <summary>Whether this entity should override the inherited click-through URL suffix with its own defined
        /// value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrideInheritedSuffix")]
        public virtual System.Nullable<bool> OverrideInheritedSuffix { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Companion Click-through override.</summary>
    public class CompanionClickThroughOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Click-through URL of this companion click-through override.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; } 

        /// <summary>ID of the creative for this companion click-through override.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a response to the queryCompatibleFields method.</summary>
    public class CompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Contains items that are compatible to be selected for a report of type
        /// "CROSS_DIMENSION_REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crossDimensionReachReportCompatibleFields")]
        public virtual CrossDimensionReachReportCompatibleFields CrossDimensionReachReportCompatibleFields { get; set; } 

        /// <summary>Contains items that are compatible to be selected for a report of type "FLOODLIGHT".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightReportCompatibleFields")]
        public virtual FloodlightReportCompatibleFields FloodlightReportCompatibleFields { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#compatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Contains items that are compatible to be selected for a report of type
        /// "PATH_TO_CONVERSION".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathToConversionReportCompatibleFields")]
        public virtual PathToConversionReportCompatibleFields PathToConversionReportCompatibleFields { get; set; } 

        /// <summary>Contains items that are compatible to be selected for a report of type "REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachReportCompatibleFields")]
        public virtual ReachReportCompatibleFields ReachReportCompatibleFields { get; set; } 

        /// <summary>Contains items that are compatible to be selected for a report of type "STANDARD".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportCompatibleFields")]
        public virtual ReportCompatibleFields ReportCompatibleFields { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about an internet connection type that can be targeted by ads. Clients can use the
    /// connection type to target mobile vs. broadband users.</summary>
    public class ConnectionType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this connection type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#connectionType".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this connection type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Connection Type List Response</summary>
    public class ConnectionTypesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Collection of connection types such as broadband and mobile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("connectionTypes")]
        public virtual System.Collections.Generic.IList<ConnectionType> ConnectionTypes { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#connectionTypesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Content Category List Response</summary>
    public class ContentCategoriesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Content category collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategories")]
        public virtual System.Collections.Generic.IList<ContentCategory> ContentCategories { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#contentCategoriesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Organizes placements according to the contents of their associated webpages.</summary>
    public class ContentCategory : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this content category. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>ID of this content category. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#contentCategory".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this content category. This is a required field and must be less than 256 characters long
        /// and unique among content categories of the same account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Country List Response</summary>
    public class CountriesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countries")]
        public virtual System.Collections.Generic.IList<Country> Countries { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#countriesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a country that can be targeted by ads.</summary>
    public class Country : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>DART ID of this country. This is the ID used for targeting and generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#country".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Whether ad serving supports secure servers in this country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslEnabled")]
        public virtual System.Nullable<bool> SslEnabled { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a Creative.</summary>
    public class Creative : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this creative. This field, if left unset, will be auto-generated for both insert and
        /// update operations. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether the creative is active. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Ad parameters user for VPAID creative. This is a read-only field. Applicable to the following
        /// creative types: all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adParameters")]
        public virtual string AdParameters { get; set; } 

        /// <summary>Keywords for a Rich Media creative. Keywords let you customize the creative settings of a Rich
        /// Media ad running on your site without having to contact the advertiser. You can use keywords to dynamically
        /// change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA,
        /// and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adTagKeys")]
        public virtual System.Collections.Generic.IList<string> AdTagKeys { get; set; } 

        /// <summary>Advertiser ID of this creative. This is a required field. Applicable to all creative
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Whether script access is allowed for this creative. This is a read-only and deprecated field which
        /// will automatically be set to true on update. Applicable to the following creative types:
        /// FLASH_INPAGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowScriptAccess")]
        public virtual System.Nullable<bool> AllowScriptAccess { get; set; } 

        /// <summary>Whether the creative is archived. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; } 

        /// <summary>Type of artwork used for the creative. This is a read-only field. Applicable to the following
        /// creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkType")]
        public virtual string ArtworkType { get; set; } 

        /// <summary>Source application where creative was authored. Presently, only DBM authored creatives will have
        /// this field set. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authoringSource")]
        public virtual string AuthoringSource { get; set; } 

        /// <summary>Authoring tool for HTML5 banner creatives. This is a read-only field. Applicable to the following
        /// creative types: HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authoringTool")]
        public virtual string AuthoringTool { get; set; } 

        /// <summary>Whether images are automatically advanced for enhanced image creatives. Applicable to the following
        /// creative types: ENHANCED_IMAGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("auto_advance_images")]
        public virtual System.Nullable<bool> AutoAdvanceImages { get; set; } 

        /// <summary>The 6-character HTML color code, beginning with #, for the background of the window area where the
        /// Flash file is displayed. Default is white. Applicable to the following creative types:
        /// FLASH_INPAGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backgroundColor")]
        public virtual string BackgroundColor { get; set; } 

        /// <summary>Click-through URL for backup image. Applicable to the following creative types: ENHANCED_BANNER,
        /// FLASH_INPAGE, and HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageClickThroughUrl")]
        public virtual string BackupImageClickThroughUrl { get; set; } 

        /// <summary>List of feature dependencies that will cause a backup image to be served if the browser that serves
        /// the ad does not support them. Feature dependencies are features that a browser must be able to support in
        /// order to render your HTML5 creative asset correctly. This field is initially auto-generated to contain all
        /// features detected by DCM for all the assets of this creative and can then be modified by the client. To
        /// reset this field, copy over all the creativeAssets' detected features. Applicable to the following creative
        /// types: ENHANCED_BANNER and HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageFeatures")]
        public virtual System.Collections.Generic.IList<string> BackupImageFeatures { get; set; } 

        /// <summary>Reporting label used for HTML5 banner backup image. Applicable to the following creative types:
        /// ENHANCED_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageReportingLabel")]
        public virtual string BackupImageReportingLabel { get; set; } 

        /// <summary>Target window for backup image. Applicable to the following creative types: ENHANCED_BANNER,
        /// FLASH_INPAGE, and HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageTargetWindow")]
        public virtual TargetWindow BackupImageTargetWindow { get; set; } 

        /// <summary>Click tags of the creative. For ENHANCED_BANNER, FLASH_INPAGE, and HTML5_BANNER creatives, this is
        /// a subset of detected click tags for the assets associated with this creative. After creating a flash asset,
        /// detected click tags will be returned in the creativeAssetMetadata. When inserting the creative, populate the
        /// creative clickTags field using the creativeAssetMetadata.clickTags field. For ENHANCED_IMAGE creatives,
        /// there should be exactly one entry in this list for each image creative asset. A click tag is matched with a
        /// corresponding creative asset by matching the clickTag.name field with the creativeAsset.assetIdentifier.name
        /// field. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE, FLASH_INPAGE,
        /// HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTags")]
        public virtual System.Collections.Generic.IList<ClickTag> ClickTags { get; set; } 

        /// <summary>Industry standard ID assigned to creative for reach and frequency. Applicable to the following
        /// creative types: all INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commercialId")]
        public virtual string CommercialId { get; set; } 

        /// <summary>List of companion creatives assigned to an in-Stream videocreative. Acceptable values include IDs
        /// of existing flash and image creatives. Applicable to the following creative types: all INSTREAM_VIDEO and
        /// all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionCreatives")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> CompanionCreatives { get; set; } 

        /// <summary>Compatibilities associated with this creative. This is a read-only field. DISPLAY and
        /// DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices or in mobile apps for regular
        /// or interstitial ads, respectively. APP and APP_INTERSTITIAL  are for rendering in mobile apps. Only pre-
        /// existing creatives may have these compatibilities since new creatives will either be assigned DISPLAY or
        /// DISPLAY_INTERSTITIAL instead. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the
        /// VAST standard. Applicable to all creative types.
        ///
        /// Acceptable values are: - "APP" - "APP_INTERSTITIAL" - "IN_STREAM_VIDEO" - "DISPLAY" -
        /// "DISPLAY_INTERSTITIAL"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual System.Collections.Generic.IList<string> Compatibility { get; set; } 

        /// <summary>Whether Flash assets associated with the creative need to be automatically converted to HTML5. This
        /// flag is enabled by default and users can choose to disable it if they don't want the system to generate and
        /// use HTML5 asset for this creative. Applicable to the following creative types: ENHANCED_BANNER and
        /// FLASH_INPAGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("convertFlashToHtml5")]
        public virtual System.Nullable<bool> ConvertFlashToHtml5 { get; set; } 

        /// <summary>List of counter events configured for the creative. For ENHANCED_IMAGE creatives, these are read-
        /// only and auto-generated from clickTags. Applicable to the following creative types: ENHANCED_IMAGE, all
        /// RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("counterCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> CounterCustomEvents { get; set; } 

        /// <summary>Assets associated with a creative. Applicable to all but the following creative types:
        /// INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeAssets")]
        public virtual System.Collections.Generic.IList<CreativeAsset> CreativeAssets { get; set; } 

        /// <summary>Creative field assignments for this creative. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldAssignments")]
        public virtual System.Collections.Generic.IList<CreativeFieldAssignment> CreativeFieldAssignments { get; set; } 

        /// <summary>Custom key-values for a Rich Media creative. Key-values let you customize the creative settings of
        /// a Rich Media ad running on your site without having to contact the advertiser. You can use key-values to
        /// dynamically change the look or functionality of a creative. Applicable to the following creative types: all
        /// RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customKeyValues")]
        public virtual System.Collections.Generic.IList<string> CustomKeyValues { get; set; } 

        /// <summary>List of exit events configured for the creative. For ENHANCED_BANNER and ENHANCED_IMAGE creatives,
        /// these are read-only and auto-generated from clickTags, For ENHANCED_BANNER, an event is also created from
        /// the backupImageReportingLabel. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE,
        /// all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> ExitCustomEvents { get; set; } 

        /// <summary>OpenWindow FSCommand of this creative. This lets the SWF file communicate with either Flash Player
        /// or the program hosting Flash Player, such as a web browser. This is only triggered if allowScriptAccess
        /// field is true. Applicable to the following creative types: FLASH_INPAGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fsCommand")]
        public virtual FsCommand FsCommand { get; set; } 

        /// <summary>HTML code for the creative. This is a required field when applicable. This field is ignored if
        /// htmlCodeLocked is false. Applicable to the following creative types: all CUSTOM, FLASH_INPAGE, and
        /// HTML5_BANNER, and all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("htmlCode")]
        public virtual string HtmlCode { get; set; } 

        /// <summary>Whether HTML code is DCM-generated or manually entered. Set to true to ignore changes to htmlCode.
        /// Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("htmlCodeLocked")]
        public virtual System.Nullable<bool> HtmlCodeLocked { get; set; } 

        /// <summary>ID of this creative. This is a read-only, auto-generated field. Applicable to all creative
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this creative. This is a read-only field. Applicable to all creative
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creative".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Creative last modification information. This is a read-only field. Applicable to all creative
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Latest Studio trafficked creative ID associated with rich media and VPAID creatives. This is a
        /// read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestTraffickedCreativeId")]
        public virtual System.Nullable<long> LatestTraffickedCreativeId { get; set; } 

        /// <summary>Name of the creative. This is a required field and must be less than 256 characters long.
        /// Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Override CSS value for rich media creatives. Applicable to the following creative types: all
        /// RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrideCss")]
        public virtual string OverrideCss { get; set; } 

        /// <summary>URL of hosted image or hosted video or another ad tag. For INSTREAM_VIDEO_REDIRECT creatives this
        /// is the in-stream video redirect URL. The standard for a VAST (Video Ad Serving Template) ad response allows
        /// for a redirect link to another VAST 2.0 or 3.0 call. This is a required field when applicable. Applicable to
        /// the following creative types: INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, REDIRECT, and
        /// INSTREAM_VIDEO_REDIRECT</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectUrl")]
        public virtual string RedirectUrl { get; set; } 

        /// <summary>ID of current rendering version. This is a read-only field. Applicable to all creative
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderingId")]
        public virtual System.Nullable<long> RenderingId { get; set; } 

        /// <summary>Dimension value for the rendering ID of this creative. This is a read-only field. Applicable to all
        /// creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderingIdDimensionValue")]
        public virtual DimensionValue RenderingIdDimensionValue { get; set; } 

        /// <summary>The minimum required Flash plugin version for this creative. For example, 11.2.202.235. This is a
        /// read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requiredFlashPluginVersion")]
        public virtual string RequiredFlashPluginVersion { get; set; } 

        /// <summary>The internal Flash version for this creative as calculated by DoubleClick Studio. This is a read-
        /// only field. Applicable to the following creative types: FLASH_INPAGE, ENHANCED_BANNER, all RICH_MEDIA, and
        /// all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requiredFlashVersion")]
        public virtual System.Nullable<int> RequiredFlashVersion { get; set; } 

        /// <summary>Size associated with this creative. When inserting or updating a creative either the size ID field
        /// or size width and height fields can be used. This is a required field when applicable; however for IMAGE and
        /// FLASH_INPAGE creatives, if left blank, this field will be automatically set using the actual size of the
        /// associated image assets. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE,
        /// FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; } 

        /// <summary>Whether the user can choose to skip the creative. Applicable to the following creative types: all
        /// INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippable")]
        public virtual System.Nullable<bool> Skippable { get; set; } 

        /// <summary>Whether the creative is SSL-compliant. This is a read-only field. Applicable to all creative
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; } 

        /// <summary>Whether creative should be treated as SSL compliant even if the system scan shows it's not.
        /// Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslOverride")]
        public virtual System.Nullable<bool> SslOverride { get; set; } 

        /// <summary>Studio advertiser ID associated with rich media and VPAID creatives. This is a read-only field.
        /// Applicable to the following creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studioAdvertiserId")]
        public virtual System.Nullable<long> StudioAdvertiserId { get; set; } 

        /// <summary>Studio creative ID associated with rich media and VPAID creatives. This is a read-only field.
        /// Applicable to the following creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studioCreativeId")]
        public virtual System.Nullable<long> StudioCreativeId { get; set; } 

        /// <summary>Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only
        /// field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studioTraffickedCreativeId")]
        public virtual System.Nullable<long> StudioTraffickedCreativeId { get; set; } 

        /// <summary>Subaccount ID of this creative. This field, if left unset, will be auto-generated for both insert
        /// and update operations. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Third-party URL used to record backup image impressions. Applicable to the following creative
        /// types: all RICH_MEDIA</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyBackupImageImpressionsUrl")]
        public virtual string ThirdPartyBackupImageImpressionsUrl { get; set; } 

        /// <summary>Third-party URL used to record rich media impressions. Applicable to the following creative types:
        /// all RICH_MEDIA</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyRichMediaImpressionsUrl")]
        public virtual string ThirdPartyRichMediaImpressionsUrl { get; set; } 

        /// <summary>Third-party URLs for tracking in-stream video creative events. Applicable to the following creative
        /// types: all INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyUrls")]
        public virtual System.Collections.Generic.IList<ThirdPartyTrackingUrl> ThirdPartyUrls { get; set; } 

        /// <summary>List of timer events configured for the creative. For ENHANCED_IMAGE creatives, these are read-only
        /// and auto-generated from clickTags. Applicable to the following creative types: ENHANCED_IMAGE, all
        /// RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timerCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> TimerCustomEvents { get; set; } 

        /// <summary>Combined size of all creative assets. This is a read-only field. Applicable to the following
        /// creative types: all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalFileSize")]
        public virtual System.Nullable<long> TotalFileSize { get; set; } 

        /// <summary>Type of this creative.This is a required field. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The version number helps you keep track of multiple versions of your creative in your reports. The
        /// version number will always be auto-generated during insert operations to start at 1. For tracking creatives
        /// the version cannot be incremented and will always remain at 1. For all other creative types the version can
        /// be incremented only by 1 during update operations. In addition, the version will be automatically
        /// incremented by 1 when undergoing Rich Media creative merging. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<int> Version { get; set; } 

        /// <summary>Description of the video ad. Applicable to the following creative types: all INSTREAM_VIDEO and all
        /// VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoDescription")]
        public virtual string VideoDescription { get; set; } 

        /// <summary>Creative video duration in seconds. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO, all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoDuration")]
        public virtual System.Nullable<float> VideoDuration { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Asset.</summary>
    public class CreativeAsset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the
        /// following creative types: FLASH_INPAGE and ENHANCED_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actionScript3")]
        public virtual System.Nullable<bool> ActionScript3 { get; set; } 

        /// <summary>Whether the video asset is active. This is a read-only field for VPAID_NON_LINEAR assets.
        /// Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Possible alignments for an asset. This is a read-only field. Applicable to the following creative
        /// types: RICH_MEDIA_MULTI_FLOATING.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alignment")]
        public virtual string Alignment { get; set; } 

        /// <summary>Artwork type of rich media creative. This is a read-only field. Applicable to the following
        /// creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkType")]
        public virtual string ArtworkType { get; set; } 

        /// <summary>Identifier of this asset. This is the same identifier returned during creative asset insert
        /// operation. This is a required field. Applicable to all but the following creative types: all REDIRECT and
        /// TRACKING_TEXT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetIdentifier")]
        public virtual CreativeAssetId AssetIdentifier { get; set; } 

        /// <summary>Exit event configured for the backup image. Applicable to the following creative types: all
        /// RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageExit")]
        public virtual CreativeCustomEvent BackupImageExit { get; set; } 

        /// <summary>Detected bit-rate for video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bitRate")]
        public virtual System.Nullable<int> BitRate { get; set; } 

        /// <summary>Rich media child asset type. This is a read-only field. Applicable to the following creative types:
        /// all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("childAssetType")]
        public virtual string ChildAssetType { get; set; } 

        /// <summary>Size of an asset when collapsed. This is a read-only field. Applicable to the following creative
        /// types: all RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is
        /// ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("collapsedSize")]
        public virtual Size CollapsedSize { get; set; } 

        /// <summary>Custom start time in seconds for making the asset visible. Applicable to the following creative
        /// types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customStartTimeValue")]
        public virtual System.Nullable<int> CustomStartTimeValue { get; set; } 

        /// <summary>List of feature dependencies for the creative asset that are detected by DCM. Feature dependencies
        /// are features that a browser must be able to support in order to render your HTML5 creative correctly. This
        /// is a read-only, auto-generated field. Applicable to the following creative types: ENHANCED_BANNER and
        /// HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectedFeatures")]
        public virtual System.Collections.Generic.IList<string> DetectedFeatures { get; set; } 

        /// <summary>Type of rich media asset. This is a read-only field. Applicable to the following creative types:
        /// all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayType")]
        public virtual string DisplayType { get; set; } 

        /// <summary>Duration in seconds for which an asset will be displayed. Applicable to the following creative
        /// types: INSTREAM_VIDEO and VPAID_LINEAR.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual System.Nullable<int> Duration { get; set; } 

        /// <summary>Duration type for which an asset will be displayed. Applicable to the following creative types: all
        /// RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("durationType")]
        public virtual string DurationType { get; set; } 

        /// <summary>Detected expanded dimension for video asset. This is a read-only field. Applicable to the following
        /// creative types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expandedDimension")]
        public virtual Size ExpandedDimension { get; set; } 

        /// <summary>File size associated with this creative asset. This is a read-only field. Applicable to all but the
        /// following creative types: all REDIRECT and TRACKING_TEXT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileSize")]
        public virtual System.Nullable<long> FileSize { get; set; } 

        /// <summary>Flash version of the asset. This is a read-only field. Applicable to the following creative types:
        /// FLASH_INPAGE, ENHANCED_BANNER, all RICH_MEDIA, and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flashVersion")]
        public virtual System.Nullable<int> FlashVersion { get; set; } 

        /// <summary>Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all
        /// RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hideFlashObjects")]
        public virtual System.Nullable<bool> HideFlashObjects { get; set; } 

        /// <summary>Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all
        /// RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hideSelectionBoxes")]
        public virtual System.Nullable<bool> HideSelectionBoxes { get; set; } 

        /// <summary>Whether the asset is horizontally locked. This is a read-only field. Applicable to the following
        /// creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("horizontallyLocked")]
        public virtual System.Nullable<bool> HorizontallyLocked { get; set; } 

        /// <summary>Numeric ID of this creative asset. This is a required field and should not be modified. Applicable
        /// to all but the following creative types: all REDIRECT and TRACKING_TEXT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Detected MIME type for video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; } 

        /// <summary>Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the
        /// following creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose
        /// displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual OffsetPosition Offset { get; set; } 

        /// <summary>Whether the backup asset is original or changed by the user in DCM. Applicable to the following
        /// creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalBackup")]
        public virtual System.Nullable<bool> OriginalBackup { get; set; } 

        /// <summary>Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("position")]
        public virtual OffsetPosition Position { get; set; } 

        /// <summary>Offset left unit for an asset. This is a read-only field. Applicable to the following creative
        /// types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionLeftUnit")]
        public virtual string PositionLeftUnit { get; set; } 

        /// <summary>Offset top unit for an asset. This is a read-only field if the asset displayType is
        /// ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionTopUnit")]
        public virtual string PositionTopUnit { get; set; } 

        /// <summary>Progressive URL for video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progressiveServingUrl")]
        public virtual string ProgressiveServingUrl { get; set; } 

        /// <summary>Whether the asset pushes down other content. Applicable to the following creative types: all
        /// RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches
        /// size.width, and the collapsedSize.height is less than size.height.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pushdown")]
        public virtual System.Nullable<bool> Pushdown { get; set; } 

        /// <summary>Pushdown duration in seconds for an asset. Must be between 0 and 9.99. Applicable to the following
        /// creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the
        /// offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than
        /// size.height.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pushdownDuration")]
        public virtual System.Nullable<float> PushdownDuration { get; set; } 

        /// <summary>Role of the asset in relation to creative. Applicable to all but the following creative types: all
        /// REDIRECT and TRACKING_TEXT. This is a required field. PRIMARY applies to ENHANCED_BANNER, FLASH_INPAGE,
        /// HTML5_BANNER, IMAGE, IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all
        /// VPAID creatives. BACKUP_IMAGE applies to ENHANCED_BANNER, FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and
        /// all VPAID creatives. ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives. OTHER refers to
        /// assets from sources other than DCM, such as Studio uploaded assets, applicable to all RICH_MEDIA and all
        /// VPAID creatives. PARENT_VIDEO refers to videos uploaded by the user in DCM and is applicable to
        /// INSTREAM_VIDEO and VPAID_LINEAR creatives. TRANSCODED_VIDEO refers to videos transcoded by DCM from
        /// PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR creatives. ALTERNATE_VIDEO refers
        /// to the DCM representation of child asset videos from Studio, and is applicable to VPAID_LINEAR creatives.
        /// These cannot be added or removed within DCM. For VPAID_LINEAR creatives, PARENT_VIDEO, TRANSCODED_VIDEO and
        /// ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served.
        /// Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR creative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; } 

        /// <summary>Size associated with this creative asset. This is a required field when applicable; however for
        /// IMAGE and FLASH_INPAGE creatives, if left blank, this field will be automatically set using the actual size
        /// of the associated image asset. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE,
        /// FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; } 

        /// <summary>Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following
        /// creative types: all REDIRECT and TRACKING_TEXT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; } 

        /// <summary>Initial wait time type before making the asset visible. Applicable to the following creative types:
        /// all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTimeType")]
        public virtual string StartTimeType { get; set; } 

        /// <summary>Streaming URL for video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streamingServingUrl")]
        public virtual string StreamingServingUrl { get; set; } 

        /// <summary>Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA.
        /// Additionally, only applicable to HTML5 assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transparency")]
        public virtual System.Nullable<bool> Transparency { get; set; } 

        /// <summary>Whether the asset is vertically locked. This is a read-only field. Applicable to the following
        /// creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verticallyLocked")]
        public virtual System.Nullable<bool> VerticallyLocked { get; set; } 

        /// <summary>Detected video duration for video asset. This is a read-only field. Applicable to the following
        /// creative types: INSTREAM_VIDEO and all VPAID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoDuration")]
        public virtual System.Nullable<float> VideoDuration { get; set; } 

        /// <summary>Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE,
        /// RICH_MEDIA_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_INPAGE, and RICH_MEDIA_INPAGE_FLOATING.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("windowMode")]
        public virtual string WindowMode { get; set; } 

        /// <summary>zIndex value of an asset. This is a read-only field. Applicable to the following creative types:
        /// all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types:
        /// ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zIndex")]
        public virtual System.Nullable<int> ZIndex { get; set; } 

        /// <summary>File name of zip file. This is a read-only field. Applicable to the following creative types:
        /// HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zipFilename")]
        public virtual string ZipFilename { get; set; } 

        /// <summary>Size of zip file. This is a read-only field. Applicable to the following creative types:
        /// HTML5_BANNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zipFilesize")]
        public virtual string ZipFilesize { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Asset ID.</summary>
    public class CreativeAssetId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the creative asset. This is a required field while inserting an asset. After insertion,
        /// this assetIdentifier is used to identify the uploaded asset. Characters in the name must be alphanumeric or
        /// one of the following: ".-_ ". Spaces are allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Type of asset to upload. This is a required field. IMAGE is solely used for IMAGE creatives. Other
        /// image assets should use HTML_IMAGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>CreativeAssets contains properties of a creative asset file which will be uploaded or has already been
    /// uploaded. Refer to the creative sample code for how to upload assets and insert a creative.</summary>
    public class CreativeAssetMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative asset. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetIdentifier")]
        public virtual CreativeAssetId AssetIdentifier { get; set; } 

        /// <summary>List of detected click tags for assets. This is a read-only auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTags")]
        public virtual System.Collections.Generic.IList<ClickTag> ClickTags { get; set; } 

        /// <summary>List of feature dependencies for the creative asset that are detected by DCM. Feature dependencies
        /// are features that a browser must be able to support in order to render your HTML5 creative correctly. This
        /// is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectedFeatures")]
        public virtual System.Collections.Generic.IList<string> DetectedFeatures { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeAssetMetadata".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Rules validated during code generation that generated a warning. This is a read-only, auto-
        /// generated field.
        ///
        /// Possible values are: - "CLICK_TAG_NON_TOP_LEVEL" - "CLICK_TAG_MISSING" - "CLICK_TAG_MORE_THAN_ONE" -
        /// "CLICK_TAG_INVALID" - "ORPHANED_ASSET" - "PRIMARY_HTML_MISSING" - "EXTERNAL_FILE_REFERENCED" -
        /// "MRAID_REFERENCED" - "ADMOB_REFERENCED" - "FILE_TYPE_INVALID" - "ZIP_INVALID" - "LINKED_FILE_NOT_FOUND" -
        /// "MAX_FLASH_VERSION_11" - "NOT_SSL_COMPLIANT" - "FILE_DETAIL_EMPTY" - "ASSET_INVALID" -
        /// "GWD_PROPERTIES_INVALID" - "ENABLER_UNSUPPORTED_METHOD_DCM" - "ASSET_FORMAT_UNSUPPORTED_DCM" -
        /// "COMPONENT_UNSUPPORTED_DCM" - "HTML5_FEATURE_UNSUPPORTED' "</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnedValidationRules")]
        public virtual System.Collections.Generic.IList<string> WarnedValidationRules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Assignment.</summary>
    public class CreativeAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this creative assignment is active. When true, the creative will be included in the ad's
        /// rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Whether applicable event tags should fire when this creative assignment is rendered. If this value
        /// is unset when the ad is inserted or updated, it will default to true for all creative types EXCEPT for
        /// INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("applyEventTags")]
        public virtual System.Nullable<bool> ApplyEventTags { get; set; } 

        /// <summary>Click-through URL of the creative assignment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; } 

        /// <summary>Companion creative overrides for this creative assignment. Applicable to video ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionCreativeOverrides")]
        public virtual System.Collections.Generic.IList<CompanionClickThroughOverride> CompanionCreativeOverrides { get; set; } 

        /// <summary>Creative group assignments for this creative assignment. Only one assignment per creative group
        /// number is allowed for a maximum of two assignments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupAssignments")]
        public virtual System.Collections.Generic.IList<CreativeGroupAssignment> CreativeGroupAssignments { get; set; } 

        /// <summary>ID of the creative to be assigned. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; } 

        /// <summary>Dimension value for the ID of the creative. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeIdDimensionValue")]
        public virtual DimensionValue CreativeIdDimensionValue { get; set; } 

        /// <summary>Date and time that the assigned creative should stop serving. Must be later than the start
        /// time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(EndTimeRaw);
            }
            set
            {
                EndTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Rich media exit overrides for this creative assignment. Applicable when the creative type is any of
        /// the following: - RICH_MEDIA_INPAGE - RICH_MEDIA_INPAGE_FLOATING - RICH_MEDIA_IM_EXPAND -
        /// RICH_MEDIA_EXPANDING - RICH_MEDIA_INTERSTITIAL_FLOAT - RICH_MEDIA_MOBILE_IN_APP - RICH_MEDIA_MULTI_FLOATING
        /// - RICH_MEDIA_PEEL_DOWN - ADVANCED_BANNER - VPAID_LINEAR - VPAID_NON_LINEAR</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("richMediaExitOverrides")]
        public virtual System.Collections.Generic.IList<RichMediaExitOverride> RichMediaExitOverrides { get; set; } 

        /// <summary>Sequence number of the creative assignment, applicable when the rotation type is
        /// CREATIVE_ROTATION_TYPE_SEQUENTIAL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sequence")]
        public virtual System.Nullable<int> Sequence { get; set; } 

        /// <summary>Whether the creative to be assigned is SSL-compliant. This is a read-only field that is auto-
        /// generated when the ad is inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; } 

        /// <summary>Date and time that the assigned creative should start serving.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(StartTimeRaw);
            }
            set
            {
                StartTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Weight of the creative assignment, applicable when the rotation type is
        /// CREATIVE_ROTATION_TYPE_RANDOM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("weight")]
        public virtual System.Nullable<int> Weight { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Custom Event.</summary>
    public class CreativeCustomEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Unique ID of this event used by DDM Reporting and Data Transfer. This is a read-only
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserCustomEventId")]
        public virtual System.Nullable<long> AdvertiserCustomEventId { get; set; } 

        /// <summary>User-entered name for the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserCustomEventName")]
        public virtual string AdvertiserCustomEventName { get; set; } 

        /// <summary>Type of the event. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserCustomEventType")]
        public virtual string AdvertiserCustomEventType { get; set; } 

        /// <summary>Artwork label column, used to link events in DCM back to events in Studio. This is a required field
        /// and should not be modified after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkLabel")]
        public virtual string ArtworkLabel { get; set; } 

        /// <summary>Artwork type used by the creative.This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkType")]
        public virtual string ArtworkType { get; set; } 

        /// <summary>Exit URL of the event. This field is used only for exit events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitUrl")]
        public virtual string ExitUrl { get; set; } 

        /// <summary>ID of this event. This is a required field and should not be modified after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Properties for rich media popup windows. This field is used only for exit events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("popupWindowProperties")]
        public virtual PopupWindowProperties PopupWindowProperties { get; set; } 

        /// <summary>Target type used by the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetType")]
        public virtual string TargetType { get; set; } 

        /// <summary>Video reporting ID, used to differentiate multiple videos in a single creative. This is a read-only
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoReportingId")]
        public virtual string VideoReportingId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a creative field.</summary>
    public class CreativeField : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this creative field. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this creative field. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>ID of this creative field. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeField".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this creative field. This is a required field and must be less than 256 characters long and
        /// unique among creative fields of the same advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Subaccount ID of this creative field. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Field Assignment.</summary>
    public class CreativeFieldAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldId")]
        public virtual System.Nullable<long> CreativeFieldId { get; set; } 

        /// <summary>ID of the creative field value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldValueId")]
        public virtual System.Nullable<long> CreativeFieldValueId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a creative field value.</summary>
    public class CreativeFieldValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this creative field value. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeFieldValue".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Value of this creative field value. It needs to be less than 256 characters in length and unique
        /// per creative field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Field Value List Response</summary>
    public class CreativeFieldValuesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative field value collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldValues")]
        public virtual System.Collections.Generic.IList<CreativeFieldValue> CreativeFieldValues { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeFieldValuesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Field List Response</summary>
    public class CreativeFieldsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative field collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFields")]
        public virtual System.Collections.Generic.IList<CreativeField> CreativeFields { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeFieldsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a creative group.</summary>
    public class CreativeGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this creative group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this creative group. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Subgroup of the creative group. Assign your creative groups to one of the following subgroups in
        /// order to filter or manage them more easily. This field is required on insertion and is read-only after
        /// insertion. Acceptable values are: - 1 - 2</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupNumber")]
        public virtual System.Nullable<int> GroupNumber { get; set; } 

        /// <summary>ID of this creative group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this creative group. This is a required field and must be less than 256 characters long and
        /// unique among creative groups of the same advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Subaccount ID of this creative group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Group Assignment.</summary>
    public class CreativeGroupAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative group to be assigned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupId")]
        public virtual System.Nullable<long> CreativeGroupId { get; set; } 

        /// <summary>Creative group number of the creative group assignment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupNumber")]
        public virtual string CreativeGroupNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Group List Response</summary>
    public class CreativeGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroups")]
        public virtual System.Collections.Generic.IList<CreativeGroup> CreativeGroups { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeGroupsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative optimization settings.</summary>
    public class CreativeOptimizationConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this creative optimization config. This field is auto-generated when the campaign is inserted
        /// or updated. It can be null for existing campaigns.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Name of this creative optimization config. This is a required field and must be less than 129
        /// characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>List of optimization activities associated with this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optimizationActivitys")]
        public virtual System.Collections.Generic.IList<OptimizationActivity> OptimizationActivitys { get; set; } 

        /// <summary>Optimization model for this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optimizationModel")]
        public virtual string OptimizationModel { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Rotation.</summary>
    public class CreativeRotation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative assignments in this creative rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeAssignments")]
        public virtual System.Collections.Generic.IList<CreativeAssignment> CreativeAssignments { get; set; } 

        /// <summary>Creative optimization configuration that is used by this ad. It should refer to one of the existing
        /// optimization configurations in the ad's campaign. If it is unset or set to 0, then the campaign's default
        /// optimization configuration will be used for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeOptimizationConfigurationId")]
        public virtual System.Nullable<long> CreativeOptimizationConfigurationId { get; set; } 

        /// <summary>Type of creative rotation. Can be used to specify whether to use sequential or random
        /// rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>Strategy for calculating weights. Used with CREATIVE_ROTATION_TYPE_RANDOM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("weightCalculationStrategy")]
        public virtual string WeightCalculationStrategy { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative Settings</summary>
    public class CreativeSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Header text for iFrames for this site. Must be less than or equal to 2000 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iFrameFooter")]
        public virtual string IFrameFooter { get; set; } 

        /// <summary>Header text for iFrames for this site. Must be less than or equal to 2000 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iFrameHeader")]
        public virtual string IFrameHeader { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative List Response</summary>
    public class CreativesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatives")]
        public virtual System.Collections.Generic.IList<Creative> Creatives { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents fields that are compatible to be selected for a report of type
    /// "CROSS_DIMENSION_REACH".</summary>
    public class CrossDimensionReachReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dimensions which are compatible to be selected in the "breakdown" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("breakdown")]
        public virtual System.Collections.Generic.IList<Dimension> Breakdown { get; set; } 

        /// <summary>Dimensions which are compatible to be selected in the "dimensionFilters" section of the
        /// report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; } 

        /// <summary>The kind of resource this is, in this case
        /// dfareporting#crossDimensionReachReportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "overlapMetricNames" section of the
        /// report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overlapMetrics")]
        public virtual System.Collections.Generic.IList<Metric> OverlapMetrics { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a Custom Rich Media Events group.</summary>
    public class CustomRichMediaEvents : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of custom rich media event IDs. Dimension values must be all of type
        /// dfa:richMediaEventTypeIdAndName.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filteredEventIds")]
        public virtual System.Collections.Generic.IList<DimensionValue> FilteredEventIds { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#customRichMediaEvents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a date range.</summary>
    public class DateRange : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The end date of the date range, inclusive. A string of the format: "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#dateRange.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The date range relative to the date of when the report is run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relativeDateRange")]
        public virtual string RelativeDateRange { get; set; } 

        /// <summary>The start date of the date range, inclusive. A string of the format: "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Day Part Targeting.</summary>
    public class DayPartTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Days of the week when the ad will serve.
        ///
        /// Acceptable values are: - "SUNDAY" - "MONDAY" - "TUESDAY" - "WEDNESDAY" - "THURSDAY" - "FRIDAY" -
        /// "SATURDAY"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("daysOfWeek")]
        public virtual System.Collections.Generic.IList<string> DaysOfWeek { get; set; } 

        /// <summary>Hours of the day when the ad will serve. Must be an integer between 0 and 23 (inclusive), where 0
        /// is midnight to 1 AM, and 23 is 11 PM to midnight. Can be specified with days of week, in which case the ad
        /// would serve during these hours on the specified days. For example, if Monday, Wednesday, Friday are the days
        /// of week specified and 9-10am, 3-5pm (hours 9, 15, and 16) is specified, the ad would serve Monday,
        /// Wednesdays, and Fridays at 9-10am and 3-5pm.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hoursOfDay")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> HoursOfDay { get; set; } 

        /// <summary>Whether or not to use the user's local time. If false, the America/New York time zone
        /// applies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLocalTime")]
        public virtual System.Nullable<bool> UserLocalTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Properties of inheriting and overriding the default click-through event tag. A campaign may override
    /// the event tag defined at the advertiser level, and an ad may also override the campaign's setting
    /// further.</summary>
    public class DefaultClickThroughEventTagProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the click-through event tag to apply to all ads in this entity's scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagId")]
        public virtual System.Nullable<long> DefaultClickThroughEventTagId { get; set; } 

        /// <summary>Whether this entity should override the inherited default click-through event tag with its own
        /// defined value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrideInheritedEventTag")]
        public virtual System.Nullable<bool> OverrideInheritedEventTag { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Delivery Schedule.</summary>
    public class DeliverySchedule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Limit on the number of times an individual user can be served the ad within a specified period of
        /// time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("frequencyCap")]
        public virtual FrequencyCap FrequencyCap { get; set; } 

        /// <summary>Whether or not hard cutoff is enabled. If true, the ad will not serve after the end date and time.
        /// Otherwise the ad will continue to be served until it has reached its delivery goals.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hardCutoff")]
        public virtual System.Nullable<bool> HardCutoff { get; set; } 

        /// <summary>Impression ratio for this ad. This ratio determines how often each ad is served relative to the
        /// others. For example, if ad A has an impression ratio of 1 and ad B has an impression ratio of 3, then DCM
        /// will serve ad B three times as often as ad A. Must be between 1 and 10.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressionRatio")]
        public virtual System.Nullable<long> ImpressionRatio { get; set; } 

        /// <summary>Serving priority of an ad, with respect to other ads. The lower the priority number, the greater
        /// the priority with which it is served.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual string Priority { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>DFP Settings</summary>
    public class DfpSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>DFP network code for this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dfp_network_code")]
        public virtual string DfpNetworkCode { get; set; } 

        /// <summary>DFP network name for this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dfp_network_name")]
        public virtual string DfpNetworkName { get; set; } 

        /// <summary>Whether this directory site accepts programmatic placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("programmaticPlacementAccepted")]
        public virtual System.Nullable<bool> ProgrammaticPlacementAccepted { get; set; } 

        /// <summary>Whether this directory site accepts publisher-paid tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubPaidPlacementAccepted")]
        public virtual System.Nullable<bool> PubPaidPlacementAccepted { get; set; } 

        /// <summary>Whether this directory site is available only via DoubleClick Publisher Portal.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherPortalOnly")]
        public virtual System.Nullable<bool> PublisherPortalOnly { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a dimension.</summary>
    public class Dimension : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind of resource this is, in this case dfareporting#dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The dimension name, e.g. dfa:advertiser</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a dimension filter.</summary>
    public class DimensionFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension to filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#dimensionFilter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The value of the dimension to filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a DimensionValue resource.</summary>
    public class DimensionValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; } 

        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The ID associated with the value if available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#dimensionValue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If
        /// set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it
        /// can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType
        /// other than EXACT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchType")]
        public virtual string MatchType { get; set; } 

        /// <summary>The value of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

    }    

    /// <summary>Represents the list of DimensionValue resources.</summary>
    public class DimensionValueList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The dimension values returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<DimensionValue> Items { get; set; } 

        /// <summary>The kind of list this is, in this case dfareporting#dimensionValueList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Continuation token used to page through dimension values. To retrieve the next page of results, set
        /// the next request's "pageToken" to the value of this field. The page token is only valid for a limited amount
        /// of time and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

    }    

    /// <summary>Represents a DimensionValuesRequest.</summary>
    public class DimensionValueRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension for which values should be requested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; } 

        /// <summary>The end date of the date range for which to retrieve dimension values. A string of the format
        /// "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>The list of filters by which to filter values. The filters are ANDed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<DimensionFilter> Filters { get; set; } 

        /// <summary>The kind of request this is, in this case dfareporting#dimensionValueRequest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The start date of the date range for which to retrieve dimension values. A string of the format
        /// "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an
    /// account via the Sites resource before they can be assigned to a placement.</summary>
    public class DirectorySite : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this directory site is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Directory site contacts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactAssignments")]
        public virtual System.Collections.Generic.IList<DirectorySiteContactAssignment> ContactAssignments { get; set; } 

        /// <summary>Country ID of this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryId")]
        public virtual System.Nullable<long> CountryId { get; set; } 

        /// <summary>Currency ID of this directory site. Possible values are: - "1" for USD - "2" for GBP - "3" for ESP
        /// - "4" for SEK - "5" for CAD - "6" for JPY - "7" for DEM - "8" for AUD - "9" for FRF - "10" for ITL - "11"
        /// for DKK - "12" for NOK - "13" for FIM - "14" for ZAR - "15" for IEP - "16" for NLG - "17" for EUR - "18" for
        /// KRW - "19" for TWD - "20" for SGD - "21" for CNY - "22" for HKD - "23" for NZD - "24" for MYR - "25" for BRL
        /// - "26" for PTE - "27" for MXP - "28" for CLP - "29" for TRY - "30" for ARS - "31" for PEN - "32" for ILS -
        /// "33" for CHF - "34" for VEF - "35" for COP - "36" for GTQ - "37" for PLN - "39" for INR - "40" for THB -
        /// "41" for IDR - "42" for CZK - "43" for RON - "44" for HUF - "45" for RUB - "46" for AED - "47" for BGN -
        /// "48" for HRK</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyId")]
        public virtual System.Nullable<long> CurrencyId { get; set; } 

        /// <summary>Description of this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>ID of this directory site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this directory site. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Tag types for regular placements.
        ///
        /// Acceptable values are: - "STANDARD" - "IFRAME_JAVASCRIPT_INPAGE" - "INTERNAL_REDIRECT_INPAGE" -
        /// "JAVASCRIPT_INPAGE"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inpageTagFormats")]
        public virtual System.Collections.Generic.IList<string> InpageTagFormats { get; set; } 

        /// <summary>Tag types for interstitial placements.
        ///
        /// Acceptable values are: - "IFRAME_JAVASCRIPT_INTERSTITIAL" - "INTERNAL_REDIRECT_INTERSTITIAL" -
        /// "JAVASCRIPT_INTERSTITIAL"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interstitialTagFormats")]
        public virtual System.Collections.Generic.IList<string> InterstitialTagFormats { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#directorySite".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Parent directory site ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentId")]
        public virtual System.Nullable<long> ParentId { get; set; } 

        /// <summary>Directory site settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("settings")]
        public virtual DirectorySiteSettings Settings { get; set; } 

        /// <summary>URL of this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a Site Directory contact.</summary>
    public class DirectorySiteContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Address of this directory site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        /// <summary>Email address of this directory site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>First name of this directory site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firstName")]
        public virtual string FirstName { get; set; } 

        /// <summary>ID of this directory site contact. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#directorySiteContact".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Last name of this directory site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastName")]
        public virtual string LastName { get; set; } 

        /// <summary>Phone number of this directory site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phone")]
        public virtual string Phone { get; set; } 

        /// <summary>Directory site contact role.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; } 

        /// <summary>Title or designation of this directory site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>Directory site contact type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Directory Site Contact Assignment</summary>
    public class DirectorySiteContactAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this directory site contact. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactId")]
        public virtual System.Nullable<long> ContactId { get; set; } 

        /// <summary>Visibility of this directory site contact assignment. When set to PUBLIC this contact assignment is
        /// visible to all account and agency users; when set to PRIVATE it is visible only to the site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual string Visibility { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Directory Site Contact List Response</summary>
    public class DirectorySiteContactsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Directory site contact collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteContacts")]
        public virtual System.Collections.Generic.IList<DirectorySiteContact> DirectorySiteContacts { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#directorySiteContactsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Directory Site Settings</summary>
    public class DirectorySiteSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this directory site has disabled active view creatives.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeViewOptOut")]
        public virtual System.Nullable<bool> ActiveViewOptOut { get; set; } 

        /// <summary>Directory site DFP settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dfp_settings")]
        public virtual DfpSettings DfpSettings { get; set; } 

        /// <summary>Whether this site accepts in-stream video ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instream_video_placement_accepted")]
        public virtual System.Nullable<bool> InstreamVideoPlacementAccepted { get; set; } 

        /// <summary>Whether this site accepts interstitial ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interstitialPlacementAccepted")]
        public virtual System.Nullable<bool> InterstitialPlacementAccepted { get; set; } 

        /// <summary>Whether this directory site has disabled Nielsen OCR reach ratings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nielsenOcrOptOut")]
        public virtual System.Nullable<bool> NielsenOcrOptOut { get; set; } 

        /// <summary>Whether this directory site has disabled generation of Verification ins tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verificationTagOptOut")]
        public virtual System.Nullable<bool> VerificationTagOptOut { get; set; } 

        /// <summary>Whether this directory site has disabled active view for in-stream video creatives.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoActiveViewOptOut")]
        public virtual System.Nullable<bool> VideoActiveViewOptOut { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Directory Site List Response</summary>
    public class DirectorySitesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Directory site collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySites")]
        public virtual System.Collections.Generic.IList<DirectorySite> DirectorySites { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#directorySitesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of an event tag.</summary>
    public class EventTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this event tag. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this event tag. This field or the campaignId field is required on
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Campaign ID of this event tag. This field or the advertiserId field is required on
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; } 

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; } 

        /// <summary>Whether this event tag should be automatically enabled for all of the advertiser's campaigns and
        /// ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledByDefault")]
        public virtual System.Nullable<bool> EnabledByDefault { get; set; } 

        /// <summary>Whether to remove this event tag from ads that are trafficked through DoubleClick Bid Manager to Ad
        /// Exchange. This may be useful if the event tag uses a pixel that is unapproved for Ad Exchange bids on one or
        /// more networks, such as the Google Display Network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeFromAdxRequests")]
        public virtual System.Nullable<bool> ExcludeFromAdxRequests { get; set; } 

        /// <summary>ID of this event tag. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#eventTag".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this event tag. This is a required field and must be less than 256 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Site filter type for this event tag. If no type is specified then the event tag will be applied to
        /// all sites.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteFilterType")]
        public virtual string SiteFilterType { get; set; } 

        /// <summary>Filter list of site IDs associated with this event tag. The siteFilterType determines whether this
        /// is a whitelist or blacklist filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SiteIds { get; set; } 

        /// <summary>Whether this tag is SSL-compliant or not. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; } 

        /// <summary>Status of this event tag. Must be ENABLED for this event tag to fire. This is a required
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>Subaccount ID of this event tag. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript
        /// URL, or a third-party click-through URL for either impression or click tracking. This is a required
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL
        /// appended to the end of it. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>Number of times the landing page URL should be URL-escaped before being appended to the click-
        /// through event tag URL. Only applies to click-through event tags as specified by the event tag
        /// type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlEscapeLevels")]
        public virtual System.Nullable<int> UrlEscapeLevels { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Event tag override information.</summary>
    public class EventTagOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this override is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; } 

        /// <summary>ID of this event tag override. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Event Tag List Response</summary>
    public class EventTagsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Event tag collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTags")]
        public virtual System.Collections.Generic.IList<EventTag> EventTags { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#eventTagsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a File resource. A file contains the metadata for a report run. It shows the status of the
    /// run and holds the URLs to the generated report data if the run is finished and the status is
    /// "REPORT_AVAILABLE".</summary>
    public class File : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The date range for which the file has report data. The date range will always be the absolute date
        /// range for which the report is run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
        public virtual DateRange DateRange { get; set; } 

        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The filename of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>The output format of the report. Only available once the file is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format { get; set; } 

        /// <summary>The unique ID of this report file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The timestamp in milliseconds since epoch when this file was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual System.Nullable<long> LastModifiedTime { get; set; } 

        /// <summary>The ID of the report this file was generated from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportId")]
        public virtual System.Nullable<long> ReportId { get; set; } 

        /// <summary>The status of the report file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The URLs where the completed report file can be downloaded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urls")]
        public virtual File.UrlsData Urls { get; set; } 

        

        /// <summary>The URLs where the completed report file can be downloaded.</summary>
        public class UrlsData
        {
            /// <summary>The URL for downloading the report data through the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("apiUrl")]
            public virtual string ApiUrl { get; set; } 

            /// <summary>The URL for downloading the report data through a browser.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("browserUrl")]
            public virtual string BrowserUrl { get; set; } 

        }
    }    

    /// <summary>Represents the list of File resources.</summary>
    public class FileList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The files returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<File> Items { get; set; } 

        /// <summary>The kind of list this is, in this case dfareporting#fileList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Continuation token used to page through files. To retrieve the next page of results, set the next
        /// request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time
        /// and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

    }    

    /// <summary>Flight</summary>
    public class Flight : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Inventory item flight end date.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>Rate or cost of this flight.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rateOrCost")]
        public virtual System.Nullable<long> RateOrCost { get; set; } 

        /// <summary>Inventory item flight start date.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>Units of this flight.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Floodlight Activity GenerateTag Response</summary>
    public class FloodlightActivitiesGenerateTagResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Generated tag for this floodlight activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityTag")]
        public virtual string FloodlightActivityTag { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivitiesGenerateTagResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Floodlight Activity List Response</summary>
    public class FloodlightActivitiesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivities")]
        public virtual System.Collections.Generic.IList<FloodlightActivity> FloodlightActivities { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivitiesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a Floodlight activity.</summary>
    public class FloodlightActivity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this floodlight activity. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied
        /// over either from the activity group's advertiser or the existing activity's advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Code type used for cache busting in the generated tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheBustingType")]
        public virtual string CacheBustingType { get; set; } 

        /// <summary>Counting method for conversions for this floodlight activity. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countingMethod")]
        public virtual string CountingMethod { get; set; } 

        /// <summary>Dynamic floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultTags")]
        public virtual System.Collections.Generic.IList<FloodlightActivityDynamicTag> DefaultTags { get; set; } 

        /// <summary>URL where this tag will be deployed. If specified, must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expectedUrl")]
        public virtual string ExpectedUrl { get; set; } 

        /// <summary>Floodlight activity group ID of this floodlight activity. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupId")]
        public virtual System.Nullable<long> FloodlightActivityGroupId { get; set; } 

        /// <summary>Name of the associated floodlight activity group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupName")]
        public virtual string FloodlightActivityGroupName { get; set; } 

        /// <summary>Tag string of the associated floodlight activity group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupTagString")]
        public virtual string FloodlightActivityGroupTagString { get; set; } 

        /// <summary>Type of the associated floodlight activity group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupType")]
        public virtual string FloodlightActivityGroupType { get; set; } 

        /// <summary>Floodlight configuration ID of this floodlight activity. If this field is left blank, the value
        /// will be copied over either from the activity group's floodlight configuration or from the existing
        /// activity's floodlight configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; } 

        /// <summary>Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationIdDimensionValue")]
        public virtual DimensionValue FloodlightConfigurationIdDimensionValue { get; set; } 

        /// <summary>Whether this activity is archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hidden")]
        public virtual System.Nullable<bool> Hidden { get; set; } 

        /// <summary>ID of this floodlight activity. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this floodlight activity. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Whether the image tag is enabled for this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageTagEnabled")]
        public virtual System.Nullable<bool> ImageTagEnabled { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivity".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this floodlight activity. This is a required field. Must be less than 129 characters long
        /// and cannot contain quotes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>General notes or implementation instructions for the tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes { get; set; } 

        /// <summary>Publisher dynamic floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherTags")]
        public virtual System.Collections.Generic.IList<FloodlightActivityPublisherDynamicTag> PublisherTags { get; set; } 

        /// <summary>Whether this tag should use SSL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secure")]
        public virtual System.Nullable<bool> Secure { get; set; } 

        /// <summary>Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by
        /// the system from the floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; } 

        /// <summary>Whether this floodlight activity must be SSL-compliant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; } 

        /// <summary>Subaccount ID of this floodlight activity. This is a read-only field that can be left
        /// blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Tag format type for the floodlight activity. If left blank, the tag format will default to
        /// HTML.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagFormat")]
        public virtual string TagFormat { get; set; } 

        /// <summary>Value of the cat= paramter in the floodlight tag, which the ad servers use to identify the
        /// activity. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8
        /// characters long, with valid characters being [a-z][A-Z][0-9][-][ _ ]. This tag string must also be unique
        /// among activities of the same activity group. This field is read-only after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagString")]
        public virtual string TagString { get; set; } 

        /// <summary>List of the user-defined variables used by this conversion tag. These map to the "u[1-20]=" in the
        /// tags. Each of these can have a user defined type. Acceptable values are: - "U1" - "U2" - "U3" - "U4" - "U5"
        /// - "U6" - "U7" - "U8" - "U9" - "U10" - "U11" - "U12" - "U13" - "U14" - "U15" - "U16" - "U17" - "U18" - "U19"
        /// - "U20"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefinedVariableTypes")]
        public virtual System.Collections.Generic.IList<string> UserDefinedVariableTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Dynamic Tag</summary>
    public class FloodlightActivityDynamicTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this dynamic tag. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Name of this tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Tag code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a Floodlight activity group.</summary>
    public class FloodlightActivityGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this floodlight activity group. This is a read-only field that can be left
        /// blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this floodlight activity group. If this field is left blank, the value will be
        /// copied over either from the floodlight configuration's advertiser or from the existing activity group's
        /// advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Floodlight configuration ID of this floodlight activity group. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; } 

        /// <summary>Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationIdDimensionValue")]
        public virtual DimensionValue FloodlightConfigurationIdDimensionValue { get; set; } 

        /// <summary>ID of this floodlight activity group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this floodlight activity group. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivityGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this floodlight activity group. This is a required field. Must be less than 65 characters
        /// long and cannot contain quotes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Subaccount ID of this floodlight activity group. This is a read-only field that can be left
        /// blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Value of the type= parameter in the floodlight tag, which the ad servers use to identify the
        /// activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated
        /// for you. This string must be 1 to 8 characters long, with valid characters being [a-z][A-Z][0-9][-][ _ ].
        /// This tag string must also be unique among activity groups of the same floodlight configuration. This field
        /// is read-only after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagString")]
        public virtual string TagString { get; set; } 

        /// <summary>Type of the floodlight activity group. This is a required field that is read-only after
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Floodlight Activity Group List Response</summary>
    public class FloodlightActivityGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroups")]
        public virtual System.Collections.Generic.IList<FloodlightActivityGroup> FloodlightActivityGroups { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivityGroupsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Publisher Dynamic Tag</summary>
    public class FloodlightActivityPublisherDynamicTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this tag is applicable only for click-throughs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThrough")]
        public virtual System.Nullable<bool> ClickThrough { get; set; } 

        /// <summary>Directory site ID of this dynamic tag. This is a write-only field that can be used as an
        /// alternative to the siteId field. When this resource is retrieved, only the siteId field will be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; } 

        /// <summary>Dynamic floodlight tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicTag")]
        public virtual FloodlightActivityDynamicTag DynamicTag { get; set; } 

        /// <summary>Site ID of this dynamic tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; } 

        /// <summary>Dimension value for the ID of the site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIdDimensionValue")]
        public virtual DimensionValue SiteIdDimensionValue { get; set; } 

        /// <summary>Whether this tag is applicable only for view-throughs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewThrough")]
        public virtual System.Nullable<bool> ViewThrough { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a Floodlight configuration.</summary>
    public class FloodlightConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this floodlight configuration. This is a read-only field that can be left
        /// blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of the parent advertiser of this floodlight configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Whether advertiser data is shared with Google Analytics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyticsDataSharingEnabled")]
        public virtual System.Nullable<bool> AnalyticsDataSharingEnabled { get; set; } 

        /// <summary>Whether the exposure-to-conversion report is enabled. This report shows detailed pathway
        /// information on up to 10 of the most recent ad exposures seen by a user before converting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exposureToConversionEnabled")]
        public virtual System.Nullable<bool> ExposureToConversionEnabled { get; set; } 

        /// <summary>Day that will be counted as the first day of the week in reports. This is a required
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firstDayOfWeek")]
        public virtual string FirstDayOfWeek { get; set; } 

        /// <summary>ID of this floodlight configuration. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this floodlight configuration. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Whether in-app attribution tracking is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inAppAttributionTrackingEnabled")]
        public virtual System.Nullable<bool> InAppAttributionTrackingEnabled { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightConfiguration".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Lookback window settings for this floodlight configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; } 

        /// <summary>Types of attribution options for natural search conversions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalSearchConversionAttributionOption")]
        public virtual string NaturalSearchConversionAttributionOption { get; set; } 

        /// <summary>Settings for DCM Omniture integration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("omnitureSettings")]
        public virtual OmnitureSettings OmnitureSettings { get; set; } 

        /// <summary>List of standard variables enabled for this configuration.
        ///
        /// Acceptable values are: - "ORD" - "NUM"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("standardVariableTypes")]
        public virtual System.Collections.Generic.IList<string> StandardVariableTypes { get; set; } 

        /// <summary>Subaccount ID of this floodlight configuration. This is a read-only field that can be left
        /// blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Configuration settings for dynamic and image floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagSettings")]
        public virtual TagSettings TagSettings { get; set; } 

        /// <summary>List of third-party authentication tokens enabled for this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyAuthenticationTokens")]
        public virtual System.Collections.Generic.IList<ThirdPartyAuthenticationToken> ThirdPartyAuthenticationTokens { get; set; } 

        /// <summary>List of user defined variables enabled for this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefinedVariableConfigurations")]
        public virtual System.Collections.Generic.IList<UserDefinedVariableConfiguration> UserDefinedVariableConfigurations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Floodlight Configuration List Response</summary>
    public class FloodlightConfigurationsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight configuration collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurations")]
        public virtual System.Collections.Generic.IList<FloodlightConfiguration> FloodlightConfigurations { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightConfigurationsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents fields that are compatible to be selected for a report of type "FlOODLIGHT".</summary>
    public class FloodlightReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dimensions which are compatible to be selected in the "dimensionFilters" section of the
        /// report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; } 

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#floodlightReportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Frequency Cap.</summary>
    public class FrequencyCap : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days in seconds,
        /// or 7,776,000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual System.Nullable<long> Duration { get; set; } 

        /// <summary>Number of times an individual user can be served the ad within the specified duration. The maximum
        /// allowed is 15.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressions")]
        public virtual System.Nullable<long> Impressions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>FsCommand.</summary>
    public class FsCommand : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Distance from the left of the browser.Applicable when positionOption is
        /// DISTANCE_FROM_TOP_LEFT_CORNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("left")]
        public virtual System.Nullable<int> Left { get; set; } 

        /// <summary>Position in the browser where the window will open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionOption")]
        public virtual string PositionOption { get; set; } 

        /// <summary>Distance from the top of the browser. Applicable when positionOption is
        /// DISTANCE_FROM_TOP_LEFT_CORNER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top")]
        public virtual System.Nullable<int> Top { get; set; } 

        /// <summary>Height of the window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("windowHeight")]
        public virtual System.Nullable<int> WindowHeight { get; set; } 

        /// <summary>Width of the window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("windowWidth")]
        public virtual System.Nullable<int> WindowWidth { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Geographical Targeting.</summary>
    public class GeoTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cities to be targeted. For each city only dartId is required. The other fields are populated
        /// automatically when the ad is inserted or updated. If targeting a city, do not target or exclude the country
        /// of the city, and do not target the metro or region of the city.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cities")]
        public virtual System.Collections.Generic.IList<City> Cities { get; set; } 

        /// <summary>Countries to be targeted or excluded from targeting, depending on the setting of the
        /// excludeCountries field. For each country only dartId is required. The other fields are populated
        /// automatically when the ad is inserted or updated. If targeting or excluding a country, do not target
        /// regions, cities, metros, or postal codes in the same country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countries")]
        public virtual System.Collections.Generic.IList<Country> Countries { get; set; } 

        /// <summary>Whether or not to exclude the countries in the countries field from targeting. If false, the
        /// countries field refers to countries which will be targeted by the ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeCountries")]
        public virtual System.Nullable<bool> ExcludeCountries { get; set; } 

        /// <summary>Metros to be targeted. For each metro only dmaId is required. The other fields are populated
        /// automatically when the ad is inserted or updated. If targeting a metro, do not target or exclude the country
        /// of the metro.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metros")]
        public virtual System.Collections.Generic.IList<Metro> Metros { get; set; } 

        /// <summary>Postal codes to be targeted. For each postal code only id is required. The other fields are
        /// populated automatically when the ad is inserted or updated. If targeting a postal code, do not target or
        /// exclude the country of the postal code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCodes")]
        public virtual System.Collections.Generic.IList<PostalCode> PostalCodes { get; set; } 

        /// <summary>Regions to be targeted. For each region only dartId is required. The other fields are populated
        /// automatically when the ad is inserted or updated. If targeting a region, do not target or exclude the
        /// country of the region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regions")]
        public virtual System.Collections.Generic.IList<Region> Regions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a buy from the DoubleClick Planning inventory store.</summary>
    public class InventoryItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Ad slots of this inventory item. If this inventory item represents a standalone placement, there
        /// will be exactly one ad slot. If this inventory item represents a placement group, there will be more than
        /// one ad slot, each representing one child placement in that placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adSlots")]
        public virtual System.Collections.Generic.IList<AdSlot> AdSlots { get; set; } 

        /// <summary>Advertiser ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Content category ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategoryId")]
        public virtual System.Nullable<long> ContentCategoryId { get; set; } 

        /// <summary>Estimated click-through rate of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("estimatedClickThroughRate")]
        public virtual System.Nullable<long> EstimatedClickThroughRate { get; set; } 

        /// <summary>Estimated conversion rate of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("estimatedConversionRate")]
        public virtual System.Nullable<long> EstimatedConversionRate { get; set; } 

        /// <summary>ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Whether this inventory item is in plan.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inPlan")]
        public virtual System.Nullable<bool> InPlan { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#inventoryItem".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Name of this inventory item. For standalone inventory items, this is the same name as that of its
        /// only ad slot. For group inventory items, this can differ from the name of any of its ad slots.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Negotiation channel ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("negotiationChannelId")]
        public virtual System.Nullable<long> NegotiationChannelId { get; set; } 

        /// <summary>Order ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderId")]
        public virtual System.Nullable<long> OrderId { get; set; } 

        /// <summary>Placement strategy ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategyId")]
        public virtual System.Nullable<long> PlacementStrategyId { get; set; } 

        /// <summary>Pricing of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricing")]
        public virtual Pricing Pricing { get; set; } 

        /// <summary>Project ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual System.Nullable<long> ProjectId { get; set; } 

        /// <summary>RFP ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rfpId")]
        public virtual System.Nullable<long> RfpId { get; set; } 

        /// <summary>ID of the site this inventory item is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; } 

        /// <summary>Subaccount ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Type of inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Inventory item List Response</summary>
    public class InventoryItemsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Inventory item collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inventoryItems")]
        public virtual System.Collections.Generic.IList<InventoryItem> InventoryItems { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#inventoryItemsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Key Value Targeting Expression.</summary>
    public class KeyValueTargetingExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Keyword expression being targeted by the ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expression")]
        public virtual string Expression { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about where a user's browser is taken after the user clicks an ad.</summary>
    public class LandingPage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether or not this landing page will be assigned to any ads or creatives that do not have a
        /// landing page assigned explicitly. Only one default landing page is allowed per campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("default")]
        public virtual System.Nullable<bool> Default__ { get; set; } 

        /// <summary>ID of this landing page. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#landingPage".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this landing page. This is a required field. It must be less than 256 characters long, and
        /// must be unique among landing pages of the same campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>URL of this landing page. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Landing Page List Response</summary>
    public class LandingPagesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#landingPagesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Landing page collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("landingPages")]
        public virtual System.Collections.Generic.IList<LandingPage> LandingPages { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Modification timestamp.</summary>
    public class LastModifiedInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Timestamp of the last change in milliseconds since epoch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("time")]
        public virtual System.Nullable<long> Time { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A group clause made up of list population terms representing constraints joined by ORs.</summary>
    public class ListPopulationClause : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Terms of this list population clause. Each clause is made up of list population terms representing
        /// constraints and are joined by ORs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("terms")]
        public virtual System.Collections.Generic.IList<ListPopulationTerm> Terms { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Remarketing List Population Rule.</summary>
    public class ListPopulationRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity ID associated with this rule. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; } 

        /// <summary>Name of floodlight activity associated with this rule. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityName")]
        public virtual string FloodlightActivityName { get; set; } 

        /// <summary>Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses
        /// themselves are made up of list population terms which are joined by ORs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listPopulationClauses")]
        public virtual System.Collections.Generic.IList<ListPopulationClause> ListPopulationClauses { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Remarketing List Population Rule Term.</summary>
    public class ListPopulationTerm : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Will be true if the term should check if the user is in the list and false if the term should check
        /// if the user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False
        /// by default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contains")]
        public virtual System.Nullable<bool> Contains { get; set; } 

        /// <summary>Whether to negate the comparison result of this term during rule evaluation. This field is only
        /// relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("negation")]
        public virtual System.Nullable<bool> Negation { get; set; } 

        /// <summary>Comparison operator of this term. This field is only relevant when type is left unset or set to
        /// CUSTOM_VARIABLE_TERM or REFERRER_TERM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operator")]
        public virtual string Operator__ { get; set; } 

        /// <summary>ID of the list in question. This field is only relevant when type is set to
        /// LIST_MEMBERSHIP_TERM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListId")]
        public virtual System.Nullable<long> RemarketingListId { get; set; } 

        /// <summary>List population term type determines the applicable fields in this object. If left unset or set to
        /// CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable.
        /// If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM
        /// then operator, value, and negation are applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>Literal to compare the variable to. This field is only relevant when type is left unset or set to
        /// CUSTOM_VARIABLE_TERM or REFERRER_TERM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>Friendly name of this term's variable. This is a read-only, auto-generated field. This field is
        /// only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableFriendlyName")]
        public virtual string VariableFriendlyName { get; set; } 

        /// <summary>Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when
        /// type is set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableName")]
        public virtual string VariableName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Remarketing List Targeting Expression.</summary>
    public class ListTargetingExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Expression describing which lists are being targeted by the ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expression")]
        public virtual string Expression { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Lookback configuration settings.</summary>
    public class LookbackConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Lookback window, in days, from the last time a given user clicked on one of your ads. If you enter
        /// 0, clicks will not be considered as triggering events for floodlight tracking. If you leave this field
        /// blank, the default value for your account will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickDuration")]
        public virtual System.Nullable<int> ClickDuration { get; set; } 

        /// <summary>Lookback window, in days, from the last time a given user viewed one of your ads. If you enter 0,
        /// impressions will not be considered as triggering events for floodlight tracking. If you leave this field
        /// blank, the default value for your account will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postImpressionActivitiesDuration")]
        public virtual System.Nullable<int> PostImpressionActivitiesDuration { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a metric.</summary>
    public class Metric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind of resource this is, in this case dfareporting#metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The metric name, e.g. dfa:impressions</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a metro region that can be targeted by ads.</summary>
    public class Metro : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this metro region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>DART ID of the country to which this metro region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; } 

        /// <summary>DART ID of this metro region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; } 

        /// <summary>DMA ID of this metro region. This is the ID used for targeting and generating reports, and is
        /// equivalent to metro_code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dmaId")]
        public virtual System.Nullable<long> DmaId { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#metro".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metro code of this metro region. This is equivalent to dma_id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metroCode")]
        public virtual string MetroCode { get; set; } 

        /// <summary>Name of this metro region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metro List Response</summary>
    public class MetrosListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#metrosListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metro collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metros")]
        public virtual System.Collections.Generic.IList<Metro> Metros { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a mobile carrier that can be targeted by ads.</summary>
    public class MobileCarrier : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this mobile carrier belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>DART ID of the country to which this mobile carrier belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; } 

        /// <summary>ID of this mobile carrier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#mobileCarrier".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this mobile carrier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Mobile Carrier List Response</summary>
    public class MobileCarriersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#mobileCarriersListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Mobile carrier collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileCarriers")]
        public virtual System.Collections.Generic.IList<MobileCarrier> MobileCarriers { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Object Filter.</summary>
    public class ObjectFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#objectFilter".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Applicable when status is ASSIGNED. The user has access to objects with these object IDs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ObjectIds { get; set; } 

        /// <summary>Status of the filter. NONE means the user has access to none of the objects. ALL means the user has
        /// access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds
        /// list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Offset Position.</summary>
    public class OffsetPosition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Offset distance from left side of an asset or a window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("left")]
        public virtual System.Nullable<int> Left { get; set; } 

        /// <summary>Offset distance from top side of an asset or a window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top")]
        public virtual System.Nullable<int> Top { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Omniture Integration Settings.</summary>
    public class OmnitureSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether placement cost data will be sent to Omniture. This property can be enabled only if
        /// omnitureIntegrationEnabled is true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("omnitureCostDataEnabled")]
        public virtual System.Nullable<bool> OmnitureCostDataEnabled { get; set; } 

        /// <summary>Whether Omniture integration is enabled. This property can be enabled only when the "Advanced Ad
        /// Serving" account setting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("omnitureIntegrationEnabled")]
        public virtual System.Nullable<bool> OmnitureIntegrationEnabled { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about an operating system that can be targeted by ads.</summary>
    public class OperatingSystem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>DART ID of this operating system. This is the ID used for targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; } 

        /// <summary>Whether this operating system is for desktop.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("desktop")]
        public virtual System.Nullable<bool> Desktop { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#operatingSystem".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Whether this operating system is for mobile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobile")]
        public virtual System.Nullable<bool> Mobile { get; set; } 

        /// <summary>Name of this operating system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a particular version of an operating system that can be targeted by
    /// ads.</summary>
    public class OperatingSystemVersion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#operatingSystemVersion".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Major version (leftmost number) of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("majorVersion")]
        public virtual string MajorVersion { get; set; } 

        /// <summary>Minor version (number after the first dot) of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minorVersion")]
        public virtual string MinorVersion { get; set; } 

        /// <summary>Name of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Operating system of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystem")]
        public virtual OperatingSystem OperatingSystem { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Operating System Version List Response</summary>
    public class OperatingSystemVersionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#operatingSystemVersionsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Operating system version collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystemVersions")]
        public virtual System.Collections.Generic.IList<OperatingSystemVersion> OperatingSystemVersions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Operating System List Response</summary>
    public class OperatingSystemsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#operatingSystemsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Operating system collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystems")]
        public virtual System.Collections.Generic.IList<OperatingSystem> OperatingSystems { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Creative optimization activity.</summary>
    public class OptimizationActivity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity ID of this optimization activity. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; } 

        /// <summary>Dimension value for the ID of the floodlight activity. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityIdDimensionValue")]
        public virtual DimensionValue FloodlightActivityIdDimensionValue { get; set; } 

        /// <summary>Weight associated with this optimization. Must be greater than 1. The weight assigned will be
        /// understood in proportion to the weights assigned to the other optimization activities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("weight")]
        public virtual System.Nullable<int> Weight { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Describes properties of a DoubleClick Planning order.</summary>
    public class Order : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>IDs for users that have to approve documents created for this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("approverUserProfileIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ApproverUserProfileIds { get; set; } 

        /// <summary>Buyer invoice ID associated with this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buyerInvoiceId")]
        public virtual string BuyerInvoiceId { get; set; } 

        /// <summary>Name of the buyer organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buyerOrganizationName")]
        public virtual string BuyerOrganizationName { get; set; } 

        /// <summary>Comments in this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; } 

        /// <summary>Contacts for this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contacts")]
        public virtual System.Collections.Generic.IList<OrderContact> Contacts { get; set; } 

        /// <summary>ID of this order. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#order".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Name of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Notes of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes { get; set; } 

        /// <summary>ID of the terms and conditions template used in this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("planningTermId")]
        public virtual System.Nullable<long> PlanningTermId { get; set; } 

        /// <summary>Project ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual System.Nullable<long> ProjectId { get; set; } 

        /// <summary>Seller order ID associated with this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sellerOrderId")]
        public virtual string SellerOrderId { get; set; } 

        /// <summary>Name of the seller organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sellerOrganizationName")]
        public virtual string SellerOrganizationName { get; set; } 

        /// <summary>Site IDs this order is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SiteId { get; set; } 

        /// <summary>Free-form site names this order is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteNames")]
        public virtual System.Collections.Generic.IList<string> SiteNames { get; set; } 

        /// <summary>Subaccount ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Terms and conditions of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("termsAndConditions")]
        public virtual string TermsAndConditions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contact of an order.</summary>
    public class OrderContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Free-form information about this contact. It could be any information related to this contact in
        /// addition to type, title, name, and signature user profile ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactInfo")]
        public virtual string ContactInfo { get; set; } 

        /// <summary>Name of this contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactName")]
        public virtual string ContactName { get; set; } 

        /// <summary>Title of this contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactTitle")]
        public virtual string ContactTitle { get; set; } 

        /// <summary>Type of this contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactType")]
        public virtual string ContactType { get; set; } 

        /// <summary>ID of the user profile containing the signature that will be embedded into order
        /// documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signatureUserProfileId")]
        public virtual System.Nullable<long> SignatureUserProfileId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a DoubleClick Planning order document.</summary>
    public class OrderDocument : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>The amended order document ID of this order document. An order document can be created by
        /// optionally amending another order document so that the change history can be preserved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("amendedOrderDocumentId")]
        public virtual System.Nullable<long> AmendedOrderDocumentId { get; set; } 

        /// <summary>IDs of users who have approved this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("approvedByUserProfileIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ApprovedByUserProfileIds { get; set; } 

        /// <summary>Whether this order document is cancelled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cancelled")]
        public virtual System.Nullable<bool> Cancelled { get; set; } 

        /// <summary>Information about the creation of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createdInfo")]
        public virtual LastModifiedInfo CreatedInfo { get; set; } 

        /// <summary>Effective date of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("effectiveDate")]
        public virtual string EffectiveDate { get; set; } 

        /// <summary>ID of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#orderDocument".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>List of email addresses that received the last sent document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastSentRecipients")]
        public virtual System.Collections.Generic.IList<string> LastSentRecipients { get; set; } 

        /// <summary>Timestamp of the last email sent with this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastSentTime")]
        public virtual string LastSentTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastSentTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastSentTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastSentTimeRaw);
            }
            set
            {
                LastSentTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>ID of the order from which this order document is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderId")]
        public virtual System.Nullable<long> OrderId { get; set; } 

        /// <summary>Project ID of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual System.Nullable<long> ProjectId { get; set; } 

        /// <summary>Whether this order document has been signed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signed")]
        public virtual System.Nullable<bool> Signed { get; set; } 

        /// <summary>Subaccount ID of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Title of this order document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>Type of this order document</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Order document List Response</summary>
    public class OrderDocumentsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#orderDocumentsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Order document collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderDocuments")]
        public virtual System.Collections.Generic.IList<OrderDocument> OrderDocuments { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Order List Response</summary>
    public class OrdersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#ordersListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Order collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orders")]
        public virtual System.Collections.Generic.IList<Order> Orders { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents fields that are compatible to be selected for a report of type
    /// "PATH_TO_CONVERSION".</summary>
    public class PathToConversionReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Conversion dimensions which are compatible to be selected in the "conversionDimensions" section of
        /// the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversionDimensions")]
        public virtual System.Collections.Generic.IList<Dimension> ConversionDimensions { get; set; } 

        /// <summary>Custom floodlight variables which are compatible to be selected in the "customFloodlightVariables"
        /// section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customFloodlightVariables")]
        public virtual System.Collections.Generic.IList<Dimension> CustomFloodlightVariables { get; set; } 

        /// <summary>The kind of resource this is, in this case
        /// dfareporting#pathToConversionReportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; } 

        /// <summary>Per-interaction dimensions which are compatible to be selected in the "perInteractionDimensions"
        /// section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("perInteractionDimensions")]
        public virtual System.Collections.Generic.IList<Dimension> PerInteractionDimensions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a placement.</summary>
    public class Placement : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this placement. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this placement. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Whether this placement is archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; } 

        /// <summary>Campaign ID of this placement. This field is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; } 

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; } 

        /// <summary>Comments for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; } 

        /// <summary>Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, mobile
        /// devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no
        /// longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO
        /// refers to rendering in in-stream video ads developed with the VAST standard. This field is required on
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual string Compatibility { get; set; } 

        /// <summary>ID of the content category assigned to this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategoryId")]
        public virtual System.Nullable<long> ContentCategoryId { get; set; } 

        /// <summary>Information about the creation of this placement. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; } 

        /// <summary>Directory site ID of this placement. On insert, you must set either this field or the siteId field
        /// to specify the site associated with this placement. This is a required field that is read-only after
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; } 

        /// <summary>Dimension value for the ID of the directory site. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteIdDimensionValue")]
        public virtual DimensionValue DirectorySiteIdDimensionValue { get; set; } 

        /// <summary>External ID for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalId")]
        public virtual string ExternalId { get; set; } 

        /// <summary>ID of this placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Key name of this placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyName")]
        public virtual string KeyName { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placement".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this placement. This is a read-only
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Lookback window settings for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; } 

        /// <summary>Name of this placement.This is a required field and must be less than 256 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Whether payment was approved for this placement. This is a read-only field relevant only to
        /// publisher-paid placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentApproved")]
        public virtual System.Nullable<bool> PaymentApproved { get; set; } 

        /// <summary>Payment source for this placement. This is a required field that is read-only after
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentSource")]
        public virtual string PaymentSource { get; set; } 

        /// <summary>ID of this placement's group, if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroupId")]
        public virtual System.Nullable<long> PlacementGroupId { get; set; } 

        /// <summary>Dimension value for the ID of the placement group. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroupIdDimensionValue")]
        public virtual DimensionValue PlacementGroupIdDimensionValue { get; set; } 

        /// <summary>ID of the placement strategy assigned to this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategyId")]
        public virtual System.Nullable<long> PlacementStrategyId { get; set; } 

        /// <summary>Pricing schedule of this placement. This field is required on insertion, specifically subfields
        /// startDate, endDate and pricingType.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingSchedule")]
        public virtual PricingSchedule PricingSchedule { get; set; } 

        /// <summary>Whether this placement is the primary placement of a roadblock (placement group). You cannot change
        /// this field from true to false. Setting this field to true will automatically set the primary field on the
        /// original primary placement of the roadblock to false, and it will automatically set the roadblock's
        /// primaryPlacementId field to the ID of this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        /// <summary>Information about the last publisher update. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherUpdateInfo")]
        public virtual LastModifiedInfo PublisherUpdateInfo { get; set; } 

        /// <summary>Site ID associated with this placement. On insert, you must set either this field or the
        /// directorySiteId field to specify the site associated with this placement. This is a required field that is
        /// read-only after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; } 

        /// <summary>Dimension value for the ID of the site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIdDimensionValue")]
        public virtual DimensionValue SiteIdDimensionValue { get; set; } 

        /// <summary>Size associated with this placement. When inserting or updating a placement, only the size ID field
        /// is used. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; } 

        /// <summary>Whether creatives assigned to this placement must be SSL-compliant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; } 

        /// <summary>Third-party placement status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>Subaccount ID of this placement. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Tag formats to generate for this placement. This field is required on insertion. Acceptable values
        /// are: - "PLACEMENT_TAG_STANDARD" - "PLACEMENT_TAG_IFRAME_JAVASCRIPT" - "PLACEMENT_TAG_IFRAME_ILAYER" -
        /// "PLACEMENT_TAG_INTERNAL_REDIRECT" - "PLACEMENT_TAG_JAVASCRIPT" -
        /// "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT" - "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT" -
        /// "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT" - "PLACEMENT_TAG_CLICK_COMMANDS" -
        /// "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH" - "PLACEMENT_TAG_TRACKING" - "PLACEMENT_TAG_TRACKING_IFRAME" -
        /// "PLACEMENT_TAG_TRACKING_JAVASCRIPT"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagFormats")]
        public virtual System.Collections.Generic.IList<string> TagFormats { get; set; } 

        /// <summary>Tag settings for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagSetting")]
        public virtual TagSetting TagSetting { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement Assignment.</summary>
    public class PlacementAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this placement assignment is active. When true, the placement will be included in the ad's
        /// rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>ID of the placement to be assigned. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementId")]
        public virtual System.Nullable<long> PlacementId { get; set; } 

        /// <summary>Dimension value for the ID of the placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementIdDimensionValue")]
        public virtual DimensionValue PlacementIdDimensionValue { get; set; } 

        /// <summary>Whether the placement to be assigned requires SSL. This is a read-only field that is auto-generated
        /// when the ad is inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a package or roadblock.</summary>
    public class PlacementGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this placement group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this placement group. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Whether this placement group is archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; } 

        /// <summary>Campaign ID of this placement group. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; } 

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; } 

        /// <summary>IDs of placements which are assigned to this placement group. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("childPlacementIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ChildPlacementIds { get; set; } 

        /// <summary>Comments for this placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; } 

        /// <summary>ID of the content category assigned to this placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategoryId")]
        public virtual System.Nullable<long> ContentCategoryId { get; set; } 

        /// <summary>Information about the creation of this placement group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; } 

        /// <summary>Directory site ID associated with this placement group. On insert, you must set either this field
        /// or the site_id field to specify the site associated with this placement group. This is a required field that
        /// is read-only after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; } 

        /// <summary>Dimension value for the ID of the directory site. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteIdDimensionValue")]
        public virtual DimensionValue DirectorySiteIdDimensionValue { get; set; } 

        /// <summary>External ID for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalId")]
        public virtual string ExternalId { get; set; } 

        /// <summary>ID of this placement group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this placement group. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this placement group. This is a read-only
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Name of this placement group. This is a required field and must be less than 256 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Type of this placement group. A package is a simple group of placements that acts as a single
        /// pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single
        /// pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock
        /// requires one of its assigned placements to be marked as primary for reporting. This field is required on
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroupType")]
        public virtual string PlacementGroupType { get; set; } 

        /// <summary>ID of the placement strategy assigned to this placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategyId")]
        public virtual System.Nullable<long> PlacementStrategyId { get; set; } 

        /// <summary>Pricing schedule of this placement group. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingSchedule")]
        public virtual PricingSchedule PricingSchedule { get; set; } 

        /// <summary>ID of the primary placement, used to calculate the media cost of a roadblock (placement group).
        /// Modifying this field will automatically modify the primary field on all affected roadblock child
        /// placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryPlacementId")]
        public virtual System.Nullable<long> PrimaryPlacementId { get; set; } 

        /// <summary>Dimension value for the ID of the primary placement. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryPlacementIdDimensionValue")]
        public virtual DimensionValue PrimaryPlacementIdDimensionValue { get; set; } 

        /// <summary>Site ID associated with this placement group. On insert, you must set either this field or the
        /// directorySiteId field to specify the site associated with this placement group. This is a required field
        /// that is read-only after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; } 

        /// <summary>Dimension value for the ID of the site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIdDimensionValue")]
        public virtual DimensionValue SiteIdDimensionValue { get; set; } 

        /// <summary>Subaccount ID of this placement group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement Group List Response</summary>
    public class PlacementGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementGroupsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Placement group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroups")]
        public virtual System.Collections.Generic.IList<PlacementGroup> PlacementGroups { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement Strategy List Response</summary>
    public class PlacementStrategiesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementStrategiesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Placement strategy collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategies")]
        public virtual System.Collections.Generic.IList<PlacementStrategy> PlacementStrategies { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a placement strategy.</summary>
    public class PlacementStrategy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this placement strategy.This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>ID of this placement strategy. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementStrategy".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this placement strategy. This is a required field. It must be less than 256 characters long
        /// and unique among placement strategies of the same account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement Tag</summary>
    public class PlacementTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Placement ID</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementId")]
        public virtual System.Nullable<long> PlacementId { get; set; } 

        /// <summary>Tags generated for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagDatas")]
        public virtual System.Collections.Generic.IList<TagData> TagDatas { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement GenerateTags Response</summary>
    public class PlacementsGenerateTagsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementsGenerateTagsResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Set of generated tags for the specified placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementTags")]
        public virtual System.Collections.Generic.IList<PlacementTag> PlacementTags { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement List Response</summary>
    public class PlacementsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Placement collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placements")]
        public virtual System.Collections.Generic.IList<Placement> Placements { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a platform type that can be targeted by ads.</summary>
    public class PlatformType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this platform type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#platformType".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this platform type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Platform Type List Response</summary>
    public class PlatformTypesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#platformTypesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Platform type collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platformTypes")]
        public virtual System.Collections.Generic.IList<PlatformType> PlatformTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Popup Window Properties.</summary>
    public class PopupWindowProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Popup dimension for a creative. This is a read-only field. Applicable to the following creative
        /// types: all RICH_MEDIA and all VPAID</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimension")]
        public virtual Size Dimension { get; set; } 

        /// <summary>Upper-left corner coordinates of the popup window. Applicable if positionType is
        /// COORDINATES.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual OffsetPosition Offset { get; set; } 

        /// <summary>Popup window position either centered or at specific coordinate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionType")]
        public virtual string PositionType { get; set; } 

        /// <summary>Whether to display the browser address bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showAddressBar")]
        public virtual System.Nullable<bool> ShowAddressBar { get; set; } 

        /// <summary>Whether to display the browser menu bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showMenuBar")]
        public virtual System.Nullable<bool> ShowMenuBar { get; set; } 

        /// <summary>Whether to display the browser scroll bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showScrollBar")]
        public virtual System.Nullable<bool> ShowScrollBar { get; set; } 

        /// <summary>Whether to display the browser status bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showStatusBar")]
        public virtual System.Nullable<bool> ShowStatusBar { get; set; } 

        /// <summary>Whether to display the browser tool bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showToolBar")]
        public virtual System.Nullable<bool> ShowToolBar { get; set; } 

        /// <summary>Title of popup window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a postal code that can be targeted by ads.</summary>
    public class PostalCode : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Postal code. This is equivalent to the id field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual string Code { get; set; } 

        /// <summary>Country code of the country to which this postal code belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>DART ID of the country to which this postal code belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; } 

        /// <summary>ID of this postal code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#postalCode".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Postal Code List Response</summary>
    public class PostalCodesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#postalCodesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Postal code collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCodes")]
        public virtual System.Collections.Generic.IList<PostalCode> PostalCodes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Pricing Information</summary>
    public class Pricing : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cap cost type of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("capCostType")]
        public virtual string CapCostType { get; set; } 

        /// <summary>End date of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>Flights of this inventory item. A flight (a.k.a. pricing period) represents the inventory item
        /// pricing information for a specific period of time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flights")]
        public virtual System.Collections.Generic.IList<Flight> Flights { get; set; } 

        /// <summary>Group type of this inventory item if it represents a placement group. Is null otherwise. There are
        /// two type of placement groups: PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE is a simple group of inventory items
        /// that acts as a single pricing point for a group of tags. PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK is a group
        /// of inventory items that not only acts as a single pricing point, but also assumes that all the tags in it
        /// will be served at the same time. A roadblock requires one of its assigned inventory items to be marked as
        /// primary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupType")]
        public virtual string GroupType { get; set; } 

        /// <summary>Pricing type of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingType")]
        public virtual string PricingType { get; set; } 

        /// <summary>Start date of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Pricing Schedule</summary>
    public class PricingSchedule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Placement cap cost option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("capCostOption")]
        public virtual string CapCostOption { get; set; } 

        /// <summary>Whether cap costs are ignored by ad serving.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disregardOverdelivery")]
        public virtual System.Nullable<bool> DisregardOverdelivery { get; set; } 

        /// <summary>Placement end date. This date must be later than, or the same day as, the placement start date, but
        /// not later than the campaign end date. If, for example, you set 6/25/2015 as both the start and end dates,
        /// the effective placement date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end
        /// date should not be set, as doing so will result in an error. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>Whether this placement is flighted. If true, pricing periods will be computed
        /// automatically.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flighted")]
        public virtual System.Nullable<bool> Flighted { get; set; } 

        /// <summary>Floodlight activity ID associated with this placement. This field should be set when placement
        /// pricing type is set to PRICING_TYPE_CPA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; } 

        /// <summary>Pricing periods for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingPeriods")]
        public virtual System.Collections.Generic.IList<PricingSchedulePricingPeriod> PricingPeriods { get; set; } 

        /// <summary>Placement pricing type. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingType")]
        public virtual string PricingType { get; set; } 

        /// <summary>Placement start date. This date must be later than, or the same day as, the campaign start date.
        /// The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error.
        /// This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>Testing start date of this placement. The hours, minutes, and seconds of the start date should not
        /// be set, as doing so will result in an error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testingStartDate")]
        public virtual string TestingStartDate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Pricing Period</summary>
    public class PricingSchedulePricingPeriod : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Pricing period end date. This date must be later than, or the same day as, the pricing period start
        /// date, but not later than the placement end date. The period end date can be the same date as the period
        /// start date. If, for example, you set 6/25/2015 as both the start and end dates, the effective pricing period
        /// date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as
        /// doing so will result in an error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>Comments for this pricing period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingComment")]
        public virtual string PricingComment { get; set; } 

        /// <summary>Rate or cost of this pricing period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rateOrCostNanos")]
        public virtual System.Nullable<long> RateOrCostNanos { get; set; } 

        /// <summary>Pricing period start date. This date must be later than, or the same day as, the placement start
        /// date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an
        /// error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>Units of this pricing period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a DoubleClick Planning project.</summary>
    public class Project : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Advertiser ID of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Audience age group of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceAgeGroup")]
        public virtual string AudienceAgeGroup { get; set; } 

        /// <summary>Audience gender of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceGender")]
        public virtual string AudienceGender { get; set; } 

        /// <summary>Budget of this project in the currency specified by the current account. The value stored in this
        /// field represents only the non-fractional amount. For example, for USD, the smallest value that can be
        /// represented by this field is 1 US dollar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("budget")]
        public virtual System.Nullable<long> Budget { get; set; } 

        /// <summary>Client billing code of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientBillingCode")]
        public virtual string ClientBillingCode { get; set; } 

        /// <summary>Name of the project client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientName")]
        public virtual string ClientName { get; set; } 

        /// <summary>End date of the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; } 

        /// <summary>ID of this project. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#project".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Information about the most recent modification of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; } 

        /// <summary>Name of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Overview of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overview")]
        public virtual string Overview { get; set; } 

        /// <summary>Start date of the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; } 

        /// <summary>Subaccount ID of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>Number of clicks that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetClicks")]
        public virtual System.Nullable<long> TargetClicks { get; set; } 

        /// <summary>Number of conversions that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetConversions")]
        public virtual System.Nullable<long> TargetConversions { get; set; } 

        /// <summary>CPA that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpaNanos")]
        public virtual System.Nullable<long> TargetCpaNanos { get; set; } 

        /// <summary>CPC that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpcNanos")]
        public virtual System.Nullable<long> TargetCpcNanos { get; set; } 

        /// <summary>CPM that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpmNanos")]
        public virtual System.Nullable<long> TargetCpmNanos { get; set; } 

        /// <summary>Number of impressions that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetImpressions")]
        public virtual System.Nullable<long> TargetImpressions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Project List Response</summary>
    public class ProjectsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#projectsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Project collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projects")]
        public virtual System.Collections.Generic.IList<Project> Projects { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents fields that are compatible to be selected for a report of type "REACH".</summary>
    public class ReachReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dimensions which are compatible to be selected in the "dimensionFilters" section of the
        /// report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; } 

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#reachReportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; } 

        /// <summary>Metrics which are compatible to be selected as activity metrics to pivot on in the "activities"
        /// section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pivotedActivityMetrics")]
        public virtual System.Collections.Generic.IList<Metric> PivotedActivityMetrics { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "reachByFrequencyMetricNames" section of the
        /// report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachByFrequencyMetrics")]
        public virtual System.Collections.Generic.IList<Metric> ReachByFrequencyMetrics { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a recipient.</summary>
    public class Recipient : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The delivery type for the recipient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deliveryType")]
        public virtual string DeliveryType { get; set; } 

        /// <summary>The email address of the recipient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#recipient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a region that can be targeted by ads.</summary>
    public class Region : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>DART ID of the country to which this region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; } 

        /// <summary>DART ID of this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#region".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Region code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Region List Response</summary>
    public class RegionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#regionsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Region collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regions")]
        public virtual System.Collections.Generic.IList<Region> Regions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a remarketing list. Remarketing enables you to create lists of users who have
    /// performed specific actions on a site, then target ads to members of those lists. This resource can be used to
    /// manage remarketing lists that are owned by your advertisers. To see all remarketing lists that are visible to
    /// your advertisers, including those that are shared to your advertiser or account, use the
    /// TargetableRemarketingLists resource.</summary>
    public class RemarketingList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this remarketing list. This is a read-only, auto-generated field that is only
        /// returned in GET requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether this remarketing list is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Dimension value for the advertiser ID that owns this remarketing list. This is a required
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Remarketing list description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Remarketing list ID. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#remarketingList".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Number of days that a user should remain in the remarketing list without an impression.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifeSpan")]
        public virtual System.Nullable<long> LifeSpan { get; set; } 

        /// <summary>Rule used to populate the remarketing list with users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listPopulationRule")]
        public virtual ListPopulationRule ListPopulationRule { get; set; } 

        /// <summary>Number of users currently in the list. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSize")]
        public virtual System.Nullable<long> ListSize { get; set; } 

        /// <summary>Product from which this remarketing list was originated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSource")]
        public virtual string ListSource { get; set; } 

        /// <summary>Name of the remarketing list. This is a required field. Must be no greater than 128 characters
        /// long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only
        /// returned in GET requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a remarketing list's sharing information. Sharing allows other accounts or
    /// advertisers to target to your remarketing lists. This resource can be used to manage remarketing list sharing to
    /// other accounts and advertisers.</summary>
    public class RemarketingListShare : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#remarketingListShare".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Remarketing list ID. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListId")]
        public virtual System.Nullable<long> RemarketingListId { get; set; } 

        /// <summary>Accounts that the remarketing list is shared with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sharedAccountIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SharedAccountIds { get; set; } 

        /// <summary>Advertisers that the remarketing list is shared with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sharedAdvertiserIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SharedAdvertiserIds { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Remarketing list response</summary>
    public class RemarketingListsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#remarketingListsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Remarketing list collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingLists")]
        public virtual System.Collections.Generic.IList<RemarketingList> RemarketingLists { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a Report resource.</summary>
    public class Report : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account ID to which this report belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>The report criteria for a report of type "STANDARD".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("criteria")]
        public virtual Report.CriteriaData Criteria { get; set; } 

        /// <summary>The report criteria for a report of type "CROSS_DIMENSION_REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crossDimensionReachCriteria")]
        public virtual Report.CrossDimensionReachCriteriaData CrossDimensionReachCriteria { get; set; } 

        /// <summary>The report's email delivery settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delivery")]
        public virtual Report.DeliveryData Delivery { get; set; } 

        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The filename used when generating report files for this report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>The report criteria for a report of type "FLOODLIGHT".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightCriteria")]
        public virtual Report.FloodlightCriteriaData FloodlightCriteria { get; set; } 

        /// <summary>The output format of the report. If not specified, default format is "CSV". Note that the actual
        /// format in the completed report file might differ if for instance the report's size exceeds the format's
        /// capabilities. "CSV" will then be the fallback format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format { get; set; } 

        /// <summary>The unique ID identifying this report resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The timestamp (in milliseconds since epoch) of when this report was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual System.Nullable<ulong> LastModifiedTime { get; set; } 

        /// <summary>The name of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The user profile id of the owner of this report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ownerProfileId")]
        public virtual System.Nullable<long> OwnerProfileId { get; set; } 

        /// <summary>The report criteria for a report of type "PATH_TO_CONVERSION".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathToConversionCriteria")]
        public virtual Report.PathToConversionCriteriaData PathToConversionCriteria { get; set; } 

        /// <summary>The report criteria for a report of type "REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachCriteria")]
        public virtual Report.ReachCriteriaData ReachCriteria { get; set; } 

        /// <summary>The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the
        /// relative date range is not "TODAY".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schedule")]
        public virtual Report.ScheduleData Schedule { get; set; } 

        /// <summary>The subaccount ID to which this report belongs if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountId")]
        public virtual System.Nullable<long> SubAccountId { get; set; } 

        /// <summary>The type of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        

        /// <summary>The report criteria for a report of type "STANDARD".</summary>
        public class CriteriaData
        {
            /// <summary>Activity group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activities")]
            public virtual Activities Activities { get; set; } 

            /// <summary>Custom Rich Media Events group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual CustomRichMediaEvents CustomRichMediaEvents { get; set; } 

            /// <summary>The date range for which this report should be run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; } 

            /// <summary>The list of filters on which dimensions are filtered. Filters for different dimensions are
            /// ANDed, filters for the same dimension are grouped together and ORed.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; } 

            /// <summary>The list of standard dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; } 

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

        }    

        /// <summary>The report criteria for a report of type "CROSS_DIMENSION_REACH".</summary>
        public class CrossDimensionReachCriteriaData
        {
            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("breakdown")]
            public virtual System.Collections.Generic.IList<SortedDimension> Breakdown { get; set; } 

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; } 

            /// <summary>The dimension option.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimension")]
            public virtual string Dimension { get; set; } 

            /// <summary>The list of filters on which dimensions are filtered.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; } 

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

            /// <summary>The list of names of overlap metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("overlapMetricNames")]
            public virtual System.Collections.Generic.IList<string> OverlapMetricNames { get; set; } 

            /// <summary>Whether the report is pivoted or not. Defaults to true.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("pivoted")]
            public virtual System.Nullable<bool> Pivoted { get; set; } 

        }    

        /// <summary>The report's email delivery settings.</summary>
        public class DeliveryData
        {
            /// <summary>Whether the report should be emailed to the report owner.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("emailOwner")]
            public virtual System.Nullable<bool> EmailOwner { get; set; } 

            /// <summary>The type of delivery for the owner to receive, if enabled.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("emailOwnerDeliveryType")]
            public virtual string EmailOwnerDeliveryType { get; set; } 

            /// <summary>The message to be sent with each email.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            /// <summary>The list of recipients to which to email the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("recipients")]
            public virtual System.Collections.Generic.IList<Recipient> Recipients { get; set; } 

        }    

        /// <summary>The report criteria for a report of type "FLOODLIGHT".</summary>
        public class FloodlightCriteriaData
        {
            /// <summary>The list of custom rich media events to include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual System.Collections.Generic.IList<DimensionValue> CustomRichMediaEvents { get; set; } 

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; } 

            /// <summary>The list of filters on which dimensions are filtered. Filters for different dimensions are
            /// ANDed, filters for the same dimension are grouped together and ORed.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; } 

            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; } 

            /// <summary>The floodlight ID for which to show data in this report. All advertisers associated with that
            /// ID will automatically be added. The dimension of the value needs to be
            /// 'dfa:floodlightConfigId'.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigId")]
            public virtual DimensionValue FloodlightConfigId { get; set; } 

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

            /// <summary>The properties of the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reportProperties")]
            public virtual FloodlightCriteriaData.ReportPropertiesData ReportProperties { get; set; } 

            

            /// <summary>The properties of the report.</summary>
            public class ReportPropertiesData
            {
                /// <summary>Include conversions that have no cookie, but do have an exposure path.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeAttributedIPConversions")]
                public virtual System.Nullable<bool> IncludeAttributedIPConversions { get; set; } 

                /// <summary>Include conversions of users with a DoubleClick cookie but without an exposure. That means
                /// the user did not click or see an ad from the advertiser within the Floodlight group, or that the
                /// interaction happened outside the lookback window.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedCookieConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedCookieConversions { get; set; } 

                /// <summary>Include conversions that have no associated cookies and no exposures. It’s therefore
                /// impossible to know how the user was exposed to your ads during the lookback window prior to a
                /// conversion.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedIPConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedIPConversions { get; set; } 

            }
        }    

        /// <summary>The report criteria for a report of type "PATH_TO_CONVERSION".</summary>
        public class PathToConversionCriteriaData
        {
            /// <summary>The list of 'dfa:activity' values to filter on.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activityFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> ActivityFilters { get; set; } 

            /// <summary>The list of conversion dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("conversionDimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> ConversionDimensions { get; set; } 

            /// <summary>The list of custom floodlight variables the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customFloodlightVariables")]
            public virtual System.Collections.Generic.IList<SortedDimension> CustomFloodlightVariables { get; set; } 

            /// <summary>The list of custom rich media events to include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual System.Collections.Generic.IList<DimensionValue> CustomRichMediaEvents { get; set; } 

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; } 

            /// <summary>The floodlight ID for which to show data in this report. All advertisers associated with that
            /// ID will automatically be added. The dimension of the value needs to be
            /// 'dfa:floodlightConfigId'.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigId")]
            public virtual DimensionValue FloodlightConfigId { get; set; } 

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

            /// <summary>The list of per interaction dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("perInteractionDimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> PerInteractionDimensions { get; set; } 

            /// <summary>The properties of the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reportProperties")]
            public virtual PathToConversionCriteriaData.ReportPropertiesData ReportProperties { get; set; } 

            

            /// <summary>The properties of the report.</summary>
            public class ReportPropertiesData
            {
                /// <summary>DFA checks to see if a click interaction occurred within the specified period of time
                /// before a conversion. By default the value is pulled from Floodlight or you can manually enter a
                /// custom value. Valid values: 1-90.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("clicksLookbackWindow")]
                public virtual System.Nullable<int> ClicksLookbackWindow { get; set; } 

                /// <summary>DFA checks to see if an impression interaction occurred within the specified period of time
                /// before a conversion. By default the value is pulled from Floodlight or you can manually enter a
                /// custom value. Valid values: 1-90.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("impressionsLookbackWindow")]
                public virtual System.Nullable<int> ImpressionsLookbackWindow { get; set; } 

                /// <summary>Deprecated: has no effect.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeAttributedIPConversions")]
                public virtual System.Nullable<bool> IncludeAttributedIPConversions { get; set; } 

                /// <summary>Include conversions of users with a DoubleClick cookie but without an exposure. That means
                /// the user did not click or see an ad from the advertiser within the Floodlight group, or that the
                /// interaction happened outside the lookback window.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedCookieConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedCookieConversions { get; set; } 

                /// <summary>Include conversions that have no associated cookies and no exposures. It’s therefore
                /// impossible to know how the user was exposed to your ads during the lookback window prior to a
                /// conversion.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedIPConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedIPConversions { get; set; } 

                /// <summary>The maximum number of click interactions to include in the report. Advertisers currently
                /// paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your
                /// network is paying for E2C, you can have up to 5 total exposures per report.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("maximumClickInteractions")]
                public virtual System.Nullable<int> MaximumClickInteractions { get; set; } 

                /// <summary>The maximum number of click interactions to include in the report. Advertisers currently
                /// paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your
                /// network is paying for E2C, you can have up to 5 total exposures per report.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("maximumImpressionInteractions")]
                public virtual System.Nullable<int> MaximumImpressionInteractions { get; set; } 

                /// <summary>The maximum amount of time that can take place between interactions (clicks or impressions)
                /// by the same user. Valid values: 1-90.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("maximumInteractionGap")]
                public virtual System.Nullable<int> MaximumInteractionGap { get; set; } 

                /// <summary>Enable pivoting on interaction path.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("pivotOnInteractionPath")]
                public virtual System.Nullable<bool> PivotOnInteractionPath { get; set; } 

            }
        }    

        /// <summary>The report criteria for a report of type "REACH".</summary>
        public class ReachCriteriaData
        {
            /// <summary>Activity group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activities")]
            public virtual Activities Activities { get; set; } 

            /// <summary>Custom Rich Media Events group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual CustomRichMediaEvents CustomRichMediaEvents { get; set; } 

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; } 

            /// <summary>The list of filters on which dimensions are filtered. Filters for different dimensions are
            /// ANDed, filters for the same dimension are grouped together and ORed.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; } 

            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; } 

            /// <summary>Whether to enable all reach dimension combinations in the report. Defaults to false. If
            /// enabled, the date range of the report should be within the last three months.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("enableAllDimensionCombinations")]
            public virtual System.Nullable<bool> EnableAllDimensionCombinations { get; set; } 

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; } 

            /// <summary>The list of names of  Reach By Frequency metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reachByFrequencyMetricNames")]
            public virtual System.Collections.Generic.IList<string> ReachByFrequencyMetricNames { get; set; } 

        }    

        /// <summary>The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the
        /// relative date range is not "TODAY".</summary>
        public class ScheduleData
        {
            /// <summary>Whether the schedule is active or not. Must be set to either true or false.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("active")]
            public virtual System.Nullable<bool> Active { get; set; } 

            /// <summary>Defines every how many days, weeks or months the report should be run. Needs to be set when
            /// "repeats" is either "DAILY", "WEEKLY" or "MONTHLY".</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("every")]
            public virtual System.Nullable<int> Every { get; set; } 

            /// <summary>The expiration date when the scheduled report stops running.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("expirationDate")]
            public virtual string ExpirationDate { get; set; } 

            /// <summary>The interval for which the report is repeated. Note: - "DAILY" also requires field "every" to
            /// be set. - "WEEKLY" also requires fields "every" and "repeatsOnWeekDays" to be set. - "MONTHLY" also
            /// requires fields "every" and "runsOnDayOfMonth" to be set.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("repeats")]
            public virtual string Repeats { get; set; } 

            /// <summary>List of week days "WEEKLY" on which scheduled reports should run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("repeatsOnWeekDays")]
            public virtual System.Collections.Generic.IList<string> RepeatsOnWeekDays { get; set; } 

            /// <summary>Enum to define for "MONTHLY" scheduled reports whether reports should be repeated on the same
            /// day of the month as "startDate" or the same day of the week of the month. Example: If 'startDate' is
            /// Monday, April 2nd 2012 (2012-04-02), "DAY_OF_MONTH" would run subsequent reports on the 2nd of every
            /// Month, and "WEEK_OF_MONTH" would run subsequent reports on the first Monday of the month.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("runsOnDayOfMonth")]
            public virtual string RunsOnDayOfMonth { get; set; } 

            /// <summary>Start date of date range for which scheduled reports should be run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
            public virtual string StartDate { get; set; } 

        }
    }    

    /// <summary>Represents fields that are compatible to be selected for a report of type "STANDARD".</summary>
    public class ReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dimensions which are compatible to be selected in the "dimensionFilters" section of the
        /// report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; } 

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#reportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; } 

        /// <summary>Metrics which are compatible to be selected as activity metrics to pivot on in the "activities"
        /// section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pivotedActivityMetrics")]
        public virtual System.Collections.Generic.IList<Metric> PivotedActivityMetrics { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the list of reports.</summary>
    public class ReportList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The reports returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Report> Items { get; set; } 

        /// <summary>The kind of list this is, in this case dfareporting#reportList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Continuation token used to page through reports. To retrieve the next page of results, set the next
        /// request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time
        /// and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

    }    

    /// <summary>Reporting Configuration</summary>
    public class ReportsConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether the exposure to conversion report is enabled. This report shows detailed pathway
        /// information on up to 10 of the most recent ad exposures seen by a user before converting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exposureToConversionEnabled")]
        public virtual System.Nullable<bool> ExposureToConversionEnabled { get; set; } 

        /// <summary>Default lookback windows for new advertisers in this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; } 

        /// <summary>Report generation time zone ID of this account. This is a required field that can only be changed
        /// by a superuser. Acceptable values are:
        ///
        /// - "1" for "America/New_York" - "2" for "Europe/London" - "3" for "Europe/Paris" - "4" for
        /// "Africa/Johannesburg" - "5" for "Asia/Jerusalem" - "6" for "Asia/Shanghai" - "7" for "Asia/Hong_Kong" - "8"
        /// for "Asia/Tokyo" - "9" for "Australia/Sydney" - "10" for "Asia/Dubai" - "11" for "America/Los_Angeles" -
        /// "12" for "Pacific/Auckland" - "13" for "America/Sao_Paulo"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportGenerationTimeZoneId")]
        public virtual System.Nullable<long> ReportGenerationTimeZoneId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Media Exit Override.</summary>
    public class RichMediaExitOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Click-through URL to override the default exit URL. Applicable if the useCustomExitUrl field is set
        /// to true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customExitUrl")]
        public virtual string CustomExitUrl { get; set; } 

        /// <summary>ID for the override to refer to a specific exit in the creative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitId")]
        public virtual System.Nullable<long> ExitId { get; set; } 

        /// <summary>Whether to use the custom exit URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useCustomExitUrl")]
        public virtual System.Nullable<bool> UseCustomExitUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a site.</summary>
    public class Site : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this site. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether this site is approved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("approved")]
        public virtual System.Nullable<bool> Approved { get; set; } 

        /// <summary>Directory site associated with this site. This is a required field that is read-only after
        /// insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; } 

        /// <summary>Dimension value for the ID of the directory site. This is a read-only, auto-generated
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteIdDimensionValue")]
        public virtual DimensionValue DirectorySiteIdDimensionValue { get; set; } 

        /// <summary>ID of this site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Dimension value for the ID of this site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; } 

        /// <summary>Key name of this site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyName")]
        public virtual string KeyName { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#site".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this site.This is a required field. Must be less than 128 characters long. If this site is
        /// under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a
        /// top-level site, and the name must be unique among top-level sites of the same account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Site contacts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteContacts")]
        public virtual System.Collections.Generic.IList<SiteContact> SiteContacts { get; set; } 

        /// <summary>Site-wide settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteSettings")]
        public virtual SiteSettings SiteSettings { get; set; } 

        /// <summary>Subaccount ID of this site. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Site Contact</summary>
    public class SiteContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Address of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        /// <summary>Site contact type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactType")]
        public virtual string ContactType { get; set; } 

        /// <summary>Email address of this site contact. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>First name of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firstName")]
        public virtual string FirstName { get; set; } 

        /// <summary>ID of this site contact. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Last name of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastName")]
        public virtual string LastName { get; set; } 

        /// <summary>Primary phone number of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phone")]
        public virtual string Phone { get; set; } 

        /// <summary>Title or designation of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Site Settings</summary>
    public class SiteSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether active view creatives are disabled for this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeViewOptOut")]
        public virtual System.Nullable<bool> ActiveViewOptOut { get; set; } 

        /// <summary>Site-wide creative settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeSettings")]
        public virtual CreativeSettings CreativeSettings { get; set; } 

        /// <summary>Whether brand safe ads are disabled for this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableBrandSafeAds")]
        public virtual System.Nullable<bool> DisableBrandSafeAds { get; set; } 

        /// <summary>Whether new cookies are disabled for this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableNewCookie")]
        public virtual System.Nullable<bool> DisableNewCookie { get; set; } 

        /// <summary>Lookback window settings for this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; } 

        /// <summary>Configuration settings for dynamic and image floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagSetting")]
        public virtual TagSetting TagSetting { get; set; } 

        /// <summary>Whether Verification and ActiveView are disabled for in-stream video creatives on this site. The
        /// same setting videoActiveViewOptOut exists on the directory site level -- the opt out occurs if either of
        /// these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or
        /// Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts
        /// out both video traffic, as well as display ads, from Verification and ActiveView.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoActiveViewOptOut")]
        public virtual System.Nullable<bool> VideoActiveViewOptOut { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Site List Response</summary>
    public class SitesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#sitesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Site collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sites")]
        public virtual System.Collections.Generic.IList<Site> Sites { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the dimensions of ads, placements, creatives, or creative assets.</summary>
    public class Size : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Height of this size.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual System.Nullable<int> Height { get; set; } 

        /// <summary>IAB standard size. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iab")]
        public virtual System.Nullable<bool> Iab { get; set; } 

        /// <summary>ID of this size. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#size".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Width of this size.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<int> Width { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Size List Response</summary>
    public class SizesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#sizesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Size collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizes")]
        public virtual System.Collections.Generic.IList<Size> Sizes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a sorted dimension.</summary>
    public class SortedDimension : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind of resource this is, in this case dfareporting#sortedDimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>An optional sort order for the dimension column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sortOrder")]
        public virtual string SortOrder { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a DCM subaccount.</summary>
    public class Subaccount : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the account that contains this subaccount. This is a read-only field that can be left
        /// blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>IDs of the available user role permissions for this subaccount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availablePermissionIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> AvailablePermissionIds { get; set; } 

        /// <summary>ID of this subaccount. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#subaccount".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this subaccount. This is a required field. Must be less than 128 characters long and be
        /// unique among subaccounts of the same account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Subaccount List Response</summary>
    public class SubaccountsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#subaccountsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Subaccount collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccounts")]
        public virtual System.Collections.Generic.IList<Subaccount> Subaccounts { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Placement Tag Data</summary>
    public class TagData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Ad associated with this placement tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adId")]
        public virtual System.Nullable<long> AdId { get; set; } 

        /// <summary>Tag string to record a click.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTag")]
        public virtual string ClickTag { get; set; } 

        /// <summary>Creative associated with this placement tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; } 

        /// <summary>TagData tag format of this tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format { get; set; } 

        /// <summary>Tag string for serving an ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressionTag")]
        public virtual string ImpressionTag { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Tag Settings</summary>
    public class TagSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Additional key-values to be included in tags. Each key-value pair must be of the form key=value,
        /// and pairs must be separated by a semicolon (;). Keys and values must not contain commas. For example,
        /// id=2;color=red is a valid value for this field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalKeyValues")]
        public virtual string AdditionalKeyValues { get; set; } 

        /// <summary>Whether static landing page URLs should be included in the tags. This setting applies only to
        /// placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeClickThroughUrls")]
        public virtual System.Nullable<bool> IncludeClickThroughUrls { get; set; } 

        /// <summary>Whether click-tracking string should be included in the tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeClickTracking")]
        public virtual System.Nullable<bool> IncludeClickTracking { get; set; } 

        /// <summary>Option specifying how keywords are embedded in ad tags. This setting can be used to specify whether
        /// keyword placeholders are inserted in placement tags for this site. Publishers can then add keywords to those
        /// placeholders.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keywordOption")]
        public virtual string KeywordOption { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Dynamic and Image Tag Settings.</summary>
    public class TagSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether dynamic floodlight tags are enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicTagEnabled")]
        public virtual System.Nullable<bool> DynamicTagEnabled { get; set; } 

        /// <summary>Whether image tags are enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageTagEnabled")]
        public virtual System.Nullable<bool> ImageTagEnabled { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Target Window.</summary>
    public class TargetWindow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>User-entered value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customHtml")]
        public virtual string CustomHtml { get; set; } 

        /// <summary>Type of browser window for which the backup image of the flash creative can be displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetWindowOption")]
        public virtual string TargetWindowOption { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users
    /// who have performed specific actions on a site, then target ads to members of those lists. This resource is a
    /// read-only view of a remarketing list to be used to faciliate targeting ads to specific lists. Remarketing lists
    /// that are owned by your advertisers and those that are shared to your advertisers or account are accessible via
    /// this resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingLists
    /// resource.</summary>
    public class TargetableRemarketingList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this remarketing list. This is a read-only, auto-generated field that is only
        /// returned in GET requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether this targetable remarketing list is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; } 

        /// <summary>Dimension value for the advertiser ID that owns this targetable remarketing list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Dimension value for the ID of the advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; } 

        /// <summary>Targetable remarketing list description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Targetable remarketing list ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#targetableRemarketingList".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Number of days that a user should remain in the targetable remarketing list without an
        /// impression.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifeSpan")]
        public virtual System.Nullable<long> LifeSpan { get; set; } 

        /// <summary>Number of users currently in the list. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSize")]
        public virtual System.Nullable<long> ListSize { get; set; } 

        /// <summary>Product from which this targetable remarketing list was originated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSource")]
        public virtual string ListSource { get; set; } 

        /// <summary>Name of the targetable remarketing list. Is no greater than 128 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only
        /// returned in GET requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Targetable remarketing list response</summary>
    public class TargetableRemarketingListsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#targetableRemarketingListsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Targetable remarketing list collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetableRemarketingLists")]
        public virtual System.Collections.Generic.IList<TargetableRemarketingList> TargetableRemarketingLists { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Technology Targeting.</summary>
    public class TechnologyTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Browsers that this ad targets. For each browser either set browserVersionId or dartId along with
        /// the version numbers. If both are specified, only browserVersionId will be used.The other fields are
        /// populated automatically when the ad is inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browsers")]
        public virtual System.Collections.Generic.IList<Browser> Browsers { get; set; } 

        /// <summary>Connection types that this ad targets. For each connection type only id is required.The other
        /// fields are populated automatically when the ad is inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("connectionTypes")]
        public virtual System.Collections.Generic.IList<ConnectionType> ConnectionTypes { get; set; } 

        /// <summary>Mobile carriers that this ad targets. For each mobile carrier only id is required, and the other
        /// fields are populated automatically when the ad is inserted or updated. If targeting a mobile carrier, do not
        /// set targeting for any zip codes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileCarriers")]
        public virtual System.Collections.Generic.IList<MobileCarrier> MobileCarriers { get; set; } 

        /// <summary>Operating system versions that this ad targets. To target all versions, use operatingSystems. For
        /// each operating system version, only id is required. The other fields are populated automatically when the ad
        /// is inserted or updated. If targeting an operating system version, do not set targeting for the corresponding
        /// operating system in operatingSystems.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystemVersions")]
        public virtual System.Collections.Generic.IList<OperatingSystemVersion> OperatingSystemVersions { get; set; } 

        /// <summary>Operating systems that this ad targets. To target specific versions, use operatingSystemVersions.
        /// For each operating system only dartId is required. The other fields are populated automatically when the ad
        /// is inserted or updated. If targeting an operating system, do not set targeting for operating system versions
        /// for the same operating system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystems")]
        public virtual System.Collections.Generic.IList<OperatingSystem> OperatingSystems { get; set; } 

        /// <summary>Platform types that this ad targets. For example, desktop, mobile, or tablet. For each platform
        /// type, only id is required, and the other fields are populated automatically when the ad is inserted or
        /// updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platformTypes")]
        public virtual System.Collections.Generic.IList<PlatformType> PlatformTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Third Party Authentication Token</summary>
    public class ThirdPartyAuthenticationToken : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the third-party authentication token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Value of the third-party authentication token. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Third-party Tracking URL.</summary>
    public class ThirdPartyTrackingUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Third-party URL type for in-stream video creatives.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyUrlType")]
        public virtual string ThirdPartyUrlType { get; set; } 

        /// <summary>URL for the specified third-party URL type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>User Defined Variable configuration.</summary>
    public class UserDefinedVariableConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data type for the variable. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataType")]
        public virtual string DataType { get; set; } 

        /// <summary>User-friendly name for the variable which will appear in reports. This is a required field, must be
        /// less than 64 characters long, and cannot contain the following characters: ""<>".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportName")]
        public virtual string ReportName { get; set; } 

        /// <summary>Variable name in the tag. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableType")]
        public virtual string VariableType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a UserProfile resource.</summary>
    public class UserProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account ID to which this profile belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>The account name this profile belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountName")]
        public virtual string AccountName { get; set; } 

        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The kind of resource this is, in this case dfareporting#userProfile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The unique ID of the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profileId")]
        public virtual System.Nullable<long> ProfileId { get; set; } 

        /// <summary>The sub account ID this profile belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountId")]
        public virtual System.Nullable<long> SubAccountId { get; set; } 

        /// <summary>The sub account name this profile belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountName")]
        public virtual string SubAccountName { get; set; } 

        /// <summary>The user name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userName")]
        public virtual string UserName { get; set; } 

    }    

    /// <summary>Represents the list of user profiles.</summary>
    public class UserProfileList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The user profiles returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<UserProfile> Items { get; set; } 

        /// <summary>The kind of list this is, in this case dfareporting#userProfileList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

    }    

    /// <summary>Contains properties of auser role, which is used to manage user access.</summary>
    public class UserRole : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this user role. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; } 

        /// <summary>Whether this is a default user role. Default user roles are created by the system for the
        /// account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of
        /// preassigned permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultUserRole")]
        public virtual System.Nullable<bool> DefaultUserRole { get; set; } 

        /// <summary>ID of this user role. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRole".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this user role. This is a required field. Must be less than 256 characters long. If this
        /// user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this
        /// user role is a top-level user role, and the name must be unique among top-level user roles of the same
        /// account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>ID of the user role that this user role is based on or copied from. This is a required
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentUserRoleId")]
        public virtual System.Nullable<long> ParentUserRoleId { get; set; } 

        /// <summary>List of permissions associated with this user role.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<UserRolePermission> Permissions { get; set; } 

        /// <summary>Subaccount ID of this user role. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains properties of a user role permission.</summary>
    public class UserRolePermission : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Levels of availability for a user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availability")]
        public virtual string Availability { get; set; } 

        /// <summary>ID of this user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolePermission".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>ID of the permission group that this user role permission belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionGroupId")]
        public virtual System.Nullable<long> PermissionGroupId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a grouping of related user role permissions.</summary>
    public class UserRolePermissionGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolePermissionGroup".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of this user role permission group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>User Role Permission Group List Response</summary>
    public class UserRolePermissionGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolePermissionGroupsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>User role permission group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRolePermissionGroups")]
        public virtual System.Collections.Generic.IList<UserRolePermissionGroup> UserRolePermissionGroups { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>User Role Permission List Response</summary>
    public class UserRolePermissionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolePermissionsListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>User role permission collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRolePermissions")]
        public virtual System.Collections.Generic.IList<UserRolePermission> UserRolePermissions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>User Role List Response</summary>
    public class UserRolesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolesListResponse".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>User role collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRoles")]
        public virtual System.Collections.Generic.IList<UserRole> UserRoles { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
