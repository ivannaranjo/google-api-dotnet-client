// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.14.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Freebase Search Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/freebase/'>Freebase Search</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20150728 (208)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/freebase/'>
 *              https://developers.google.com/freebase/</a>
 *      <tr><th>Discovery Name<td>freebase
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Freebase Search can be found at
 * <a href='https://developers.google.com/freebase/'>https://developers.google.com/freebase/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Freebase.v1
{
    /// <summary>The Freebase Service.</summary>
    public class FreebaseService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public FreebaseService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public FreebaseService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {

        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "freebase"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/freebase/v1/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "freebase/v1/"; }
        }


        /// <summary>Reconcile entities to Freebase open data.</summary>
        public virtual ReconcileRequest Reconcile()
        {
            return new ReconcileRequest(this);
        }

        /// <summary>Reconcile entities to Freebase open data.</summary>
        public class ReconcileRequest : FreebaseBaseServiceRequest<Google.Apis.Freebase.v1.Data.ReconcileGet>
        {
            /// <summary>Constructs a new Reconcile request.</summary>
            public ReconcileRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Required confidence for a candidate to match. Must be between .5 and 1.0</summary>
            /// [default: 0.99]
            /// [minimum: 0.0]
            /// [maximum: 1.0]
            [Google.Apis.Util.RequestParameterAttribute("confidence", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<float> Confidence { get; set; }

            /// <summary>Classifications of entity e.g. type, category, title.</summary>
            [Google.Apis.Util.RequestParameterAttribute("kind", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Kind { get; set; }

            /// <summary>Languages for names and values. First language is used for display. Default is 'en'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("lang", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Lang { get; set; }

            /// <summary>Maximum number of candidates to return.</summary>
            /// [default: 3]
            /// [minimum: 0]
            /// [maximum: 25]
            [Google.Apis.Util.RequestParameterAttribute("limit", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Limit { get; set; }

            /// <summary>Name of entity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>Property values for entity formatted as :</summary>
            [Google.Apis.Util.RequestParameterAttribute("prop", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Prop { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "reconcile"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "reconcile"; }
            }

            /// <summary>Initializes Reconcile parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "confidence", new Google.Apis.Discovery.Parameter
                    {
                        Name = "confidence",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "0.99",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "kind", new Google.Apis.Discovery.Parameter
                    {
                        Name = "kind",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "lang", new Google.Apis.Discovery.Parameter
                    {
                        Name = "lang",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "limit", new Google.Apis.Discovery.Parameter
                    {
                        Name = "limit",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "3",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "prop", new Google.Apis.Discovery.Parameter
                    {
                        Name = "prop",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }/// <summary>Search Freebase open data.</summary>
        public virtual SearchRequest Search()
        {
            return new SearchRequest(this);
        }

        /// <summary>Search Freebase open data.</summary>
        public class SearchRequest : FreebaseBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Search request.</summary>
            public SearchRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                MediaDownloader = new Google.Apis.Download.MediaDownloader(service);
                InitParameters();
            }


            /// <summary>A mql as_of_time value to use with mql_output queries.</summary>
            [Google.Apis.Util.RequestParameterAttribute("as_of_time", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AsOfTime { get; set; }

            /// <summary>JS method name for JSONP callbacks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Callback { get; set; }

            /// <summary>The cursor value to use for the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("cursor", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Cursor { get; set; }

            /// <summary>Restrict to topics with this Freebase domain id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Domain { get; set; }

            /// <summary>The encoding of the response. You can use this parameter to enable html encoding.</summary>
            /// [default: off]
            [Google.Apis.Util.RequestParameterAttribute("encode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<EncodeEnum> Encode { get; set; }

            /// <summary>The encoding of the response. You can use this parameter to enable html encoding.</summary>
            public enum EncodeEnum
            {
                /// <summary>Encode certain characters in the response (such as tags and ambersands) using html
                /// encoding.</summary>
                [Google.Apis.Util.StringValueAttribute("html")]
                Html,
                /// <summary>No encoding of the response. You should not print the results directly on an web page
                /// without html-escaping the content first.</summary>
                [Google.Apis.Util.StringValueAttribute("off")]
                Off,
            }

            /// <summary>Query on exact name and keys only.</summary>
            [Google.Apis.Util.RequestParameterAttribute("exact", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Exact { get; set; }

            /// <summary>A filter to apply to the query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Filter { get; set; }

            /// <summary>Structural format of the json response.</summary>
            /// [default: entity]
            [Google.Apis.Util.RequestParameterAttribute("format", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FormatEnum> Format { get; set; }

            /// <summary>Structural format of the json response.</summary>
            public enum FormatEnum
            {
                /// <summary>Compact format useful for autocomplete/suggest UIs.</summary>
                [Google.Apis.Util.StringValueAttribute("ac")]
                Ac,
                /// <summary>[DEPRECATED] Same format as was returned by api.freebase.com.</summary>
                [Google.Apis.Util.StringValueAttribute("classic")]
                Classic,
                /// <summary>Basic information about the entities.</summary>
                [Google.Apis.Util.StringValueAttribute("entity")]
                Entity,
                /// <summary>[DEPRECATED] Ordered list of a freebase guids.</summary>
                [Google.Apis.Util.StringValueAttribute("guids")]
                Guids,
                /// <summary>Ordered list of freebase ids.</summary>
                [Google.Apis.Util.StringValueAttribute("ids")]
                Ids,
                /// <summary>Ordered list of freebase mids.</summary>
                [Google.Apis.Util.StringValueAttribute("mids")]
                Mids,
            }

            /// <summary>The keyword to request help on.</summary>
            [Google.Apis.Util.RequestParameterAttribute("help", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<HelpEnum> Help { get; set; }

            /// <summary>The keyword to request help on.</summary>
            public enum HelpEnum
            {
                /// <summary>The language codes served by the service.</summary>
                [Google.Apis.Util.StringValueAttribute("langs")]
                Langs,
                /// <summary>The property/path mappings supported by the filter and output request parameters.</summary>
                [Google.Apis.Util.StringValueAttribute("mappings")]
                Mappings,
                /// <summary>The predicates and path-terminating properties supported by the filter and output request
                /// parameters.</summary>
                [Google.Apis.Util.StringValueAttribute("predicates")]
                Predicates,
            }

            /// <summary>Whether to indent the json results or not.</summary>
            [Google.Apis.Util.RequestParameterAttribute("indent", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Indent { get; set; }

            /// <summary>The code of the language to run the query with. Default is 'en'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("lang", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Lang { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [default: 20]
            [Google.Apis.Util.RequestParameterAttribute("limit", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Limit { get; set; }

            /// <summary>A mid to use instead of a query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mid", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Mid { get; set; }

            /// <summary>The MQL query to run againist the results to extract more data.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mql_output", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MqlOutput { get; set; }

            /// <summary>An output expression to request data from matches.</summary>
            [Google.Apis.Util.RequestParameterAttribute("output", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Output { get; set; }

            /// <summary>Prefix match against names and aliases.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prefixed", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Prefixed { get; set; }

            /// <summary>Query term to search for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("query", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Query { get; set; }

            /// <summary>Relevance scoring algorithm to use.</summary>
            /// [default: entity]
            [Google.Apis.Util.RequestParameterAttribute("scoring", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ScoringEnum> Scoring { get; set; }

            /// <summary>Relevance scoring algorithm to use.</summary>
            public enum ScoringEnum
            {
                /// <summary>Use freebase and popularity entity ranking.</summary>
                [Google.Apis.Util.StringValueAttribute("entity")]
                Entity,
                /// <summary>Use freebase entity ranking.</summary>
                [Google.Apis.Util.StringValueAttribute("freebase")]
                Freebase,
                /// <summary>Use schema ranking for properties and types.</summary>
                [Google.Apis.Util.StringValueAttribute("schema")]
                Schema,
            }

            /// <summary>Request 'did you mean' suggestions</summary>
            /// [default: no_spelling]
            [Google.Apis.Util.RequestParameterAttribute("spell", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SpellEnum> Spell { get; set; }

            /// <summary>Request 'did you mean' suggestions</summary>
            public enum SpellEnum
            {
                /// <summary>Request spelling suggestions for any query at least three characters long.</summary>
                [Google.Apis.Util.StringValueAttribute("always")]
                Always,
                /// <summary>Request spelling suggestions if no results were found.</summary>
                [Google.Apis.Util.StringValueAttribute("no_results")]
                NoResults,
                /// <summary>Don't request spelling suggestions.</summary>
                [Google.Apis.Util.StringValueAttribute("no_spelling")]
                NoSpelling,
            }

            /// <summary>Query on stemmed names and aliases. May not be used with prefixed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("stemmed", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Stemmed { get; set; }

            /// <summary>Restrict to topics with this Freebase type id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Type { get; set; }

            /// <summary>A rule to match against.</summary>
            [Google.Apis.Util.RequestParameterAttribute("with", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> With { get; set; }

            /// <summary>A rule to not match against.</summary>
            [Google.Apis.Util.RequestParameterAttribute("without", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Without { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "search"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "search"; }
            }

            /// <summary>Initializes Search parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "as_of_time", new Google.Apis.Discovery.Parameter
                    {
                        Name = "as_of_time",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "callback", new Google.Apis.Discovery.Parameter
                    {
                        Name = "callback",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"([A-Za-z0-9_$.]|\[|\])+",
                    });
                RequestParameters.Add(
                    "cursor", new Google.Apis.Discovery.Parameter
                    {
                        Name = "cursor",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "encode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "encode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "off",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "exact", new Google.Apis.Discovery.Parameter
                    {
                        Name = "exact",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"^\(.*\)$",
                    });
                RequestParameters.Add(
                    "format", new Google.Apis.Discovery.Parameter
                    {
                        Name = "format",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "entity",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "help", new Google.Apis.Discovery.Parameter
                    {
                        Name = "help",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "indent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "indent",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "lang", new Google.Apis.Discovery.Parameter
                    {
                        Name = "lang",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "limit", new Google.Apis.Discovery.Parameter
                    {
                        Name = "limit",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "20",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "mid", new Google.Apis.Discovery.Parameter
                    {
                        Name = "mid",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"^/[mgtx]/[0-2][0-9bcdfghjklmnpqrstvwxyz_]{1,24}$",
                    });
                RequestParameters.Add(
                    "mql_output", new Google.Apis.Discovery.Parameter
                    {
                        Name = "mql_output",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "output", new Google.Apis.Discovery.Parameter
                    {
                        Name = "output",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"^\(.*\)$",
                    });
                RequestParameters.Add(
                    "prefixed", new Google.Apis.Discovery.Parameter
                    {
                        Name = "prefixed",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "query", new Google.Apis.Discovery.Parameter
                    {
                        Name = "query",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "scoring", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scoring",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "entity",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "spell", new Google.Apis.Discovery.Parameter
                    {
                        Name = "spell",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "no_spelling",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "stemmed", new Google.Apis.Discovery.Parameter
                    {
                        Name = "stemmed",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "type", new Google.Apis.Discovery.Parameter
                    {
                        Name = "type",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "with", new Google.Apis.Discovery.Parameter
                    {
                        Name = "with",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "without", new Google.Apis.Discovery.Parameter
                    {
                        Name = "without",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

            /// <summary>Gets the media downloader.</summary>
            public Google.Apis.Download.IMediaDownloader MediaDownloader { get; private set; }

            /// <summary>Synchronously download the media into the given stream.</summary>
            public virtual void Download(System.IO.Stream stream)
            {
                MediaDownloader.Download(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download the media into the given stream.</summary>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream)
            {
                return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download the media into the given stream.</summary>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream,
                System.Threading.CancellationToken cancellationToken)
            {
                return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
            }

        }

    }

    ///<summary>A base abstract class for Freebase requests.</summary>
    public abstract class FreebaseBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new FreebaseBaseServiceRequest instance.</summary>
        protected FreebaseBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Freebase parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }
}

namespace Google.Apis.Freebase.v1.Data
{    

    public class ReconcileCandidate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Percentage likelihood that this candidate is the unique matching entity. Value will be between 0.0
        /// and 1.0</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; } 

        /// <summary>Language code that candidate and notable names are displayed in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lang")]
        public virtual string Lang { get; set; } 

        /// <summary>Freebase MID of candidate entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mid")]
        public virtual string Mid { get; set; } 

        /// <summary>Freebase name of matching entity in specified language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Type or profession the candidate is notable for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notable")]
        public virtual ReconcileCandidate.NotableData Notable { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Type or profession the candidate is notable for.</summary>
        public class NotableData
        {
            /// <summary>MID of notable category.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id { get; set; } 

            /// <summary>Name of notable category in specified language.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name { get; set; } 

        }
    }    

    public class ReconcileGet : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If filled, then the listed candidates are potential matches, and such should be evaluated by a more
        /// discerning algorithm or human. The matches are ordered by confidence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("candidate")]
        public virtual System.Collections.Generic.IList<ReconcileCandidate> Candidate { get; set; } 

        /// <summary>Server costs for reconciling.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("costs")]
        public virtual ReconcileGet.CostsData Costs { get; set; } 

        /// <summary>If filled, this entity is guaranteed to match at requested confidence probability (default
        /// 99%).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("match")]
        public virtual ReconcileCandidate Match { get; set; } 

        /// <summary>If filled, then there were recoverable problems that affected the request. For example, some of the
        /// properties were ignored because they either are not valid Freebase predicates or are not indexed for
        /// reconciliation. The candidates returned should be considered valid results, with the caveat that sections of
        /// the request were ignored as specified by the warning text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual System.Collections.Generic.IList<ReconcileGet.WarningData> Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Server costs for reconciling.</summary>
        public class CostsData
        {
            /// <summary>Total number of hits found.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("hits")]
            public virtual System.Nullable<int> Hits { get; set; } 

            /// <summary>Total milliseconds spent.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("ms")]
            public virtual System.Nullable<int> Ms { get; set; } 

        }    

        public class WarningData
        {
            /// <summary>Location of warning in the request e.g. invalid predicate.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("location")]
            public virtual string Location { get; set; } 

            /// <summary>Warning message to display to the user.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            /// <summary>Code for identifying classes of warnings.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reason")]
            public virtual string Reason { get; set; } 

        }
    }
}
