// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.14.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Partners API Version v2
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/partners/'>Google Partners API</a>
 *      <tr><th>API Version<td>v2
 *      <tr><th>API Rev<td>20151009 (281)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/partners/'>
 *              https://developers.google.com/partners/</a>
 *      <tr><th>Discovery Name<td>partners
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Partners API can be found at
 * <a href='https://developers.google.com/partners/'>https://developers.google.com/partners/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Partners.v2
{
    /// <summary>The Partners Service.</summary>
    public class PartnersService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v2";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public PartnersService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public PartnersService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            clientMessages = new ClientMessagesResource(this);
            companies = new CompaniesResource(this);
            userEvents = new UserEventsResource(this);
            userStates = new UserStatesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "partners"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://partners.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }





        private readonly ClientMessagesResource clientMessages;

        /// <summary>Gets the ClientMessages resource.</summary>
        public virtual ClientMessagesResource ClientMessages
        {
            get { return clientMessages; }
        }

        private readonly CompaniesResource companies;

        /// <summary>Gets the Companies resource.</summary>
        public virtual CompaniesResource Companies
        {
            get { return companies; }
        }

        private readonly UserEventsResource userEvents;

        /// <summary>Gets the UserEvents resource.</summary>
        public virtual UserEventsResource UserEvents
        {
            get { return userEvents; }
        }

        private readonly UserStatesResource userStates;

        /// <summary>Gets the UserStates resource.</summary>
        public virtual UserStatesResource UserStates
        {
            get { return userStates; }
        }
    }

    ///<summary>A base abstract class for Partners requests.</summary>
    public abstract class PartnersBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new PartnersBaseServiceRequest instance.</summary>
        protected PartnersBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Xgafv { get; set; }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Alt { get; set; }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Partners parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "clientMessages" collection of methods.</summary>
    public class ClientMessagesResource
    {
        private const string Resource = "clientMessages";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ClientMessagesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Logs a generic message from the client, such as `Failed to render component`, `Profile page is
        /// running slow`, `More than 500 users have accessed this result.`, etc.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual LogRequest Log(Google.Apis.Partners.v2.Data.LogMessageRequest body)
        {
            return new LogRequest(service, body);
        }

        /// <summary>Logs a generic message from the client, such as `Failed to render component`, `Profile page is
        /// running slow`, `More than 500 users have accessed this result.`, etc.</summary>
        public class LogRequest : PartnersBaseServiceRequest<Google.Apis.Partners.v2.Data.LogMessageResponse>
        {
            /// <summary>Constructs a new Log request.</summary>
            public LogRequest(Google.Apis.Services.IClientService service, Google.Apis.Partners.v2.Data.LogMessageRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Partners.v2.Data.LogMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "log"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2/clientMessages:log"; }
            }

            /// <summary>Initializes Log parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "companies" collection of methods.</summary>
    public class CompaniesResource
    {
        private const string Resource = "companies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CompaniesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            leads = new LeadsResource(service);

        }

        private readonly LeadsResource leads;

        /// <summary>Gets the Leads resource.</summary>
        public virtual LeadsResource Leads
        {
            get { return leads; }
        }

        /// <summary>The "leads" collection of methods.</summary>
        public class LeadsResource
        {
            private const string Resource = "leads";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LeadsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates an advertiser lead for the given company ID.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="companyId">The ID of the company to contact.</param>
            public virtual CreateRequest Create(Google.Apis.Partners.v2.Data.CreateLeadRequest body, string companyId)
            {
                return new CreateRequest(service, body, companyId);
            }

            /// <summary>Creates an advertiser lead for the given company ID.</summary>
            public class CreateRequest : PartnersBaseServiceRequest<Google.Apis.Partners.v2.Data.CreateLeadResponse>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Partners.v2.Data.CreateLeadRequest body, string companyId)
                    : base(service)
                {
                    CompanyId = companyId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the company to contact.</summary>
                [Google.Apis.Util.RequestParameterAttribute("companyId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string CompanyId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Partners.v2.Data.CreateLeadRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2/companies/{companyId}/leads"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "companyId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "companyId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Gets a company.</summary>
        /// <param name="companyId">The ID of the company to retrieve.</param>
        public virtual GetRequest Get(string companyId)
        {
            return new GetRequest(service, companyId);
        }

        /// <summary>Gets a company.</summary>
        public class GetRequest : PartnersBaseServiceRequest<Google.Apis.Partners.v2.Data.GetCompanyResponse>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string companyId)
                : base(service)
            {
                CompanyId = companyId;
                InitParameters();
            }


            /// <summary>The ID of the company to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("companyId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string CompanyId { get; private set; }

            /// <summary>IP address to use instead of the user's geo-located IP address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.userOverrides.ipAddress", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataUserOverridesIpAddress { get; set; }

            /// <summary>Logged-in user ID to impersonate instead of the user's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.userOverrides.userId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataUserOverridesUserId { get; set; }

            /// <summary>Locale to use for the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.locale", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataLocale { get; set; }

            /// <summary>Google Partners session ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.partnersSessionId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataPartnersSessionId { get; set; }

            /// <summary>Experiment IDs the current request belongs to.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.experimentIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RequestMetadataExperimentIds { get; set; }

            /// <summary>Identifier to indicate where the traffic comes from. An identifier has multiple letters created
            /// by a team which redirected the traffic to us.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.trafficSource.trafficSourceId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataTrafficSourceTrafficSourceId { get; set; }

            /// <summary>Second level identifier to indicate where the traffic comes from. An identifier has multiple
            /// letters created by a team which redirected the traffic to us.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.trafficSource.trafficSubId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataTrafficSourceTrafficSubId { get; set; }

            /// <summary>The view of `Company` resource to be returned. This must not be
            /// `COMPANY_VIEW_UNSPECIFIED`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("view", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ViewEnum> View { get; set; }

            /// <summary>The view of `Company` resource to be returned. This must not be
            /// `COMPANY_VIEW_UNSPECIFIED`.</summary>
            public enum ViewEnum
            {
                [Google.Apis.Util.StringValueAttribute("COMPANY_VIEW_UNSPECIFIED")]
                COMPANYVIEWUNSPECIFIED,
                [Google.Apis.Util.StringValueAttribute("CV_GOOGLE_PARTNER_SEARCH")]
                CVGOOGLEPARTNERSEARCH,
            }

            /// <summary>How to order addresses within the returned company. Currently, only `address` and `address
            /// desc` is supported which will sorted by closest to farthest in distance from given address and farthest
            /// to closest distance from given address respectively.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>If the company's budget is in a different currency code than this one, then the converted
            /// budget is converted to this currency code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("currencyCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CurrencyCode { get; set; }

            /// <summary>The address to use for sorting the company's addresses by proximity. If not given, the geo-
            /// located address of the request is used. Used when order_by is set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("address", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Address { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2/companies/{companyId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "companyId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "companyId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.userOverrides.ipAddress", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.userOverrides.ipAddress",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.userOverrides.userId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.userOverrides.userId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.locale", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.locale",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.partnersSessionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.partnersSessionId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.experimentIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.experimentIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.trafficSource.trafficSourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.trafficSource.trafficSourceId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.trafficSource.trafficSubId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.trafficSource.trafficSubId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "view", new Google.Apis.Discovery.Parameter
                    {
                        Name = "view",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "currencyCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "currencyCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "address", new Google.Apis.Discovery.Parameter
                    {
                        Name = "address",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Lists companies.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists companies.</summary>
        public class ListRequest : PartnersBaseServiceRequest<Google.Apis.Partners.v2.Data.ListCompaniesResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>IP address to use instead of the user's geo-located IP address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.userOverrides.ipAddress", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataUserOverridesIpAddress { get; set; }

            /// <summary>Logged-in user ID to impersonate instead of the user's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.userOverrides.userId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataUserOverridesUserId { get; set; }

            /// <summary>Locale to use for the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.locale", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataLocale { get; set; }

            /// <summary>Google Partners session ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.partnersSessionId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataPartnersSessionId { get; set; }

            /// <summary>Experiment IDs the current request belongs to.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.experimentIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RequestMetadataExperimentIds { get; set; }

            /// <summary>Identifier to indicate where the traffic comes from. An identifier has multiple letters created
            /// by a team which redirected the traffic to us.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.trafficSource.trafficSourceId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataTrafficSourceTrafficSourceId { get; set; }

            /// <summary>Second level identifier to indicate where the traffic comes from. An identifier has multiple
            /// letters created by a team which redirected the traffic to us.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.trafficSource.trafficSubId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataTrafficSourceTrafficSubId { get; set; }

            /// <summary>Requested page size. Server may return fewer companies than requested. If unspecified, server
            /// picks an appropriate default.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>A token identifying a page of results that the server returns. Typically, this is the value of
            /// `ListCompaniesResponse.next_page_token` returned from the previous call to ListCompanies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Company name to search for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("companyName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CompanyName { get; set; }

            /// <summary>The view of the `Company` resource to be returned. This must not be
            /// `COMPANY_VIEW_UNSPECIFIED`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("view", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ViewEnum> View { get; set; }

            /// <summary>The view of the `Company` resource to be returned. This must not be
            /// `COMPANY_VIEW_UNSPECIFIED`.</summary>
            public enum ViewEnum
            {
                [Google.Apis.Util.StringValueAttribute("COMPANY_VIEW_UNSPECIFIED")]
                COMPANYVIEWUNSPECIFIED,
                [Google.Apis.Util.StringValueAttribute("CV_GOOGLE_PARTNER_SEARCH")]
                CVGOOGLEPARTNERSEARCH,
            }

            /// <summary>The 3-letter currency code defined in ISO 4217.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minMonthlyBudget.currencyCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinMonthlyBudgetCurrencyCode { get; set; }

            /// <summary>The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US
            /// dollar.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minMonthlyBudget.units", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MinMonthlyBudgetUnits { get; set; }

            /// <summary>Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and
            /// +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero,
            /// `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero.
            /// For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minMonthlyBudget.nanos", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MinMonthlyBudgetNanos { get; set; }

            /// <summary>The 3-letter currency code defined in ISO 4217.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxMonthlyBudget.currencyCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxMonthlyBudgetCurrencyCode { get; set; }

            /// <summary>The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US
            /// dollar.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxMonthlyBudget.units", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxMonthlyBudgetUnits { get; set; }

            /// <summary>Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and
            /// +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero,
            /// `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero.
            /// For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxMonthlyBudget.nanos", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxMonthlyBudgetNanos { get; set; }

            /// <summary>List of industries the company can help with.</summary>
            [Google.Apis.Util.RequestParameterAttribute("industries", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<IndustriesEnum> Industries { get; set; }

            /// <summary>List of industries the company can help with.</summary>
            public enum IndustriesEnum
            {
                [Google.Apis.Util.StringValueAttribute("INDUSTRY_UNSPECIFIED")]
                INDUSTRYUNSPECIFIED,
                [Google.Apis.Util.StringValueAttribute("I_AUTOMOTIVE")]
                IAUTOMOTIVE,
                [Google.Apis.Util.StringValueAttribute("I_BUSINESS_TO_BUSINESS")]
                IBUSINESSTOBUSINESS,
                [Google.Apis.Util.StringValueAttribute("I_CONSUMER_PACKAGED_GOODS")]
                ICONSUMERPACKAGEDGOODS,
                [Google.Apis.Util.StringValueAttribute("I_EDUCATION")]
                IEDUCATION,
                [Google.Apis.Util.StringValueAttribute("I_FINANCE")]
                IFINANCE,
                [Google.Apis.Util.StringValueAttribute("I_HEALTHCARE")]
                IHEALTHCARE,
                [Google.Apis.Util.StringValueAttribute("I_MEDIA_AND_ENTERTAINMENT")]
                IMEDIAANDENTERTAINMENT,
                [Google.Apis.Util.StringValueAttribute("I_RETAIL")]
                IRETAIL,
                [Google.Apis.Util.StringValueAttribute("I_TECHNOLOGY")]
                ITECHNOLOGY,
                [Google.Apis.Util.StringValueAttribute("I_TRAVEL")]
                ITRAVEL,
            }

            /// <summary>List of services the company can help with.</summary>
            [Google.Apis.Util.RequestParameterAttribute("services", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ServicesEnum> Services { get; set; }

            /// <summary>List of services the company can help with.</summary>
            public enum ServicesEnum
            {
                [Google.Apis.Util.StringValueAttribute("SERVICE_UNSPECIFIED")]
                SERVICEUNSPECIFIED,
                [Google.Apis.Util.StringValueAttribute("S_ADVANCED_ADWORDS_SUPPORT")]
                SADVANCEDADWORDSSUPPORT,
                [Google.Apis.Util.StringValueAttribute("S_ADVERTISING_ON_GOOGLE")]
                SADVERTISINGONGOOGLE,
                [Google.Apis.Util.StringValueAttribute("S_AN_ENHANCED_WEBSITE")]
                SANENHANCEDWEBSITE,
                [Google.Apis.Util.StringValueAttribute("S_AN_ONLINE_MARKETING_PLAN")]
                SANONLINEMARKETINGPLAN,
                [Google.Apis.Util.StringValueAttribute("S_MOBILE_AND_VIDEO_ADS")]
                SMOBILEANDVIDEOADS,
            }

            /// <summary>List of language codes that company can support. Only primary language subtags are accepted as
            /// defined by BCP 47 (IETF BCP 47, "Tags for Identifying Languages").</summary>
            [Google.Apis.Util.RequestParameterAttribute("languageCodes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> LanguageCodes { get; set; }

            /// <summary>The address to use when searching for companies. If not given, the geo-located address of the
            /// request is used.</summary>
            [Google.Apis.Util.RequestParameterAttribute("address", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Address { get; set; }

            /// <summary>How to order addresses within the returned companies. Currently, only `address` and `address
            /// desc` is supported which will sorted by closest to farthest in distance from given address and farthest
            /// to closest distance from given address respectively.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>List of reasons for using Google Partner Search to get companies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("gpsMotivations", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<GpsMotivationsEnum> GpsMotivations { get; set; }

            /// <summary>List of reasons for using Google Partner Search to get companies.</summary>
            public enum GpsMotivationsEnum
            {
                [Google.Apis.Util.StringValueAttribute("GPS_MOTIVATION_UNSPECIFIED")]
                GPSMOTIVATIONUNSPECIFIED,
                [Google.Apis.Util.StringValueAttribute("GPSM_HELP_WITH_ADVERTISING")]
                GPSMHELPWITHADVERTISING,
                [Google.Apis.Util.StringValueAttribute("GPSM_HELP_WITH_WEBSITE")]
                GPSMHELPWITHWEBSITE,
                [Google.Apis.Util.StringValueAttribute("GPSM_NO_WEBSITE")]
                GPSMNOWEBSITE,
            }

            /// <summary>Website URL that will help to find a better matched company. .</summary>
            [Google.Apis.Util.RequestParameterAttribute("websiteUrl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string WebsiteUrl { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2/companies"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "requestMetadata.userOverrides.ipAddress", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.userOverrides.ipAddress",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.userOverrides.userId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.userOverrides.userId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.locale", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.locale",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.partnersSessionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.partnersSessionId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.experimentIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.experimentIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.trafficSource.trafficSourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.trafficSource.trafficSourceId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.trafficSource.trafficSubId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.trafficSource.trafficSubId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "companyName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "companyName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "view", new Google.Apis.Discovery.Parameter
                    {
                        Name = "view",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minMonthlyBudget.currencyCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minMonthlyBudget.currencyCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minMonthlyBudget.units", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minMonthlyBudget.units",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minMonthlyBudget.nanos", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minMonthlyBudget.nanos",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxMonthlyBudget.currencyCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxMonthlyBudget.currencyCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxMonthlyBudget.units", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxMonthlyBudget.units",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxMonthlyBudget.nanos", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxMonthlyBudget.nanos",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "industries", new Google.Apis.Discovery.Parameter
                    {
                        Name = "industries",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "services", new Google.Apis.Discovery.Parameter
                    {
                        Name = "services",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "languageCodes", new Google.Apis.Discovery.Parameter
                    {
                        Name = "languageCodes",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "address", new Google.Apis.Discovery.Parameter
                    {
                        Name = "address",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "gpsMotivations", new Google.Apis.Discovery.Parameter
                    {
                        Name = "gpsMotivations",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "websiteUrl", new Google.Apis.Discovery.Parameter
                    {
                        Name = "websiteUrl",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "userEvents" collection of methods.</summary>
    public class UserEventsResource
    {
        private const string Resource = "userEvents";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserEventsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Logs a user event.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual LogRequest Log(Google.Apis.Partners.v2.Data.LogUserEventRequest body)
        {
            return new LogRequest(service, body);
        }

        /// <summary>Logs a user event.</summary>
        public class LogRequest : PartnersBaseServiceRequest<Google.Apis.Partners.v2.Data.LogUserEventResponse>
        {
            /// <summary>Constructs a new Log request.</summary>
            public LogRequest(Google.Apis.Services.IClientService service, Google.Apis.Partners.v2.Data.LogUserEventRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Partners.v2.Data.LogUserEventRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "log"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2/userEvents:log"; }
            }

            /// <summary>Initializes Log parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "userStates" collection of methods.</summary>
    public class UserStatesResource
    {
        private const string Resource = "userStates";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserStatesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Lists states for current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists states for current user.</summary>
        public class ListRequest : PartnersBaseServiceRequest<Google.Apis.Partners.v2.Data.ListUserStatesResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>IP address to use instead of the user's geo-located IP address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.userOverrides.ipAddress", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataUserOverridesIpAddress { get; set; }

            /// <summary>Logged-in user ID to impersonate instead of the user's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.userOverrides.userId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataUserOverridesUserId { get; set; }

            /// <summary>Locale to use for the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.locale", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataLocale { get; set; }

            /// <summary>Google Partners session ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.partnersSessionId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataPartnersSessionId { get; set; }

            /// <summary>Experiment IDs the current request belongs to.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.experimentIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RequestMetadataExperimentIds { get; set; }

            /// <summary>Identifier to indicate where the traffic comes from. An identifier has multiple letters created
            /// by a team which redirected the traffic to us.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.trafficSource.trafficSourceId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataTrafficSourceTrafficSourceId { get; set; }

            /// <summary>Second level identifier to indicate where the traffic comes from. An identifier has multiple
            /// letters created by a team which redirected the traffic to us.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMetadata.trafficSource.trafficSubId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RequestMetadataTrafficSourceTrafficSubId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2/userStates"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "requestMetadata.userOverrides.ipAddress", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.userOverrides.ipAddress",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.userOverrides.userId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.userOverrides.userId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.locale", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.locale",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.partnersSessionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.partnersSessionId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.experimentIds", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.experimentIds",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.trafficSource.trafficSourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.trafficSource.trafficSourceId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMetadata.trafficSource.trafficSubId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMetadata.trafficSource.trafficSubId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Partners.v2.Data
{    

    /// <summary>Status for a Google Partners certification exam.</summary>
    public class CertificationExamStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of people who have passed the certification exam.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numberUsersPass")]
        public virtual System.Nullable<int> NumberUsersPass { get; set; } 

        /// <summary>The type of certification exam.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Google Partners certification status.</summary>
    public class CertificationStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of certification exam statuses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("examStatuses")]
        public virtual System.Collections.Generic.IList<CertificationExamStatus> ExamStatuses { get; set; } 

        /// <summary>Whether certification is passing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isCertified")]
        public virtual System.Nullable<bool> IsCertified { get; set; } 

        /// <summary>The type of the certification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A company resource in the Google Partners API. Once certified, it qualifies for being searched by
    /// advertisers.</summary>
    public class Company : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of Google Partners certification statuses for the company.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("certificationStatuses")]
        public virtual System.Collections.Generic.IList<CertificationStatus> CertificationStatuses { get; set; } 

        /// <summary>The minimum monthly budget that the company accepts for partner business, converted to the
        /// requested currency code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("convertedMinMonthlyBudget")]
        public virtual Money ConvertedMinMonthlyBudget { get; set; } 

        /// <summary>The ID of the company.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Industries the company can help with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industries")]
        public virtual System.Collections.Generic.IList<string> Industries { get; set; } 

        /// <summary>The list of localized info for the company.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("localizedInfos")]
        public virtual System.Collections.Generic.IList<LocalizedCompanyInfo> LocalizedInfos { get; set; } 

        /// <summary>The list of company locations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<Location> Locations { get; set; } 

        /// <summary>The name of the company.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The unconverted minimum monthly budget that the company accepts for partner business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalMinMonthlyBudget")]
        public virtual Money OriginalMinMonthlyBudget { get; set; } 

        /// <summary>Basic information from the company's public profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publicProfile")]
        public virtual PublicProfile PublicProfile { get; set; } 

        /// <summary>Information related to the ranking of the company within the list of companies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ranks")]
        public virtual System.Collections.Generic.IList<Rank> Ranks { get; set; } 

        /// <summary>Services the company can help with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("services")]
        public virtual System.Collections.Generic.IList<string> Services { get; set; } 

        /// <summary>URL of the company's website.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteUrl")]
        public virtual string WebsiteUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for CreateLead.</summary>
    public class CreateLeadRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The lead resource. The `LeadType` must not be `LEAD_TYPE_UNSPECIFIED` and either `email` or
        /// `phone_number` must be provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lead")]
        public virtual Lead Lead { get; set; } 

        /// <summary>reCaptcha challenge info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recaptchaChallenge")]
        public virtual RecaptchaChallenge RecaptchaChallenge { get; set; } 

        /// <summary>Current request metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestMetadata")]
        public virtual RequestMetadata RequestMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for CreateLead. Debug information about this request.</summary>
    public class CreateLeadResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Lead that was created depending on the outcome of reCaptcha validation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lead")]
        public virtual Lead Lead { get; set; } 

        /// <summary>The outcome of reCaptcha validation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recaptchaStatus")]
        public virtual string RecaptchaStatus { get; set; } 

        /// <summary>Current response metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMetadata")]
        public virtual ResponseMetadata ResponseMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Debug information about this request.</summary>
    public class DebugInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Info about the server that serviced this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serverInfo")]
        public virtual string ServerInfo { get; set; } 

        /// <summary>Server-side debug stack trace.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serverTraceInfo")]
        public virtual string ServerTraceInfo { get; set; } 

        /// <summary>URL of the service that handled this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceUrl")]
        public virtual string ServiceUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Key value data pair for an event.</summary>
    public class EventData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>Data values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<string> Values { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for GetCompany.</summary>
    public class GetCompanyResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The company.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("company")]
        public virtual Company Company { get; set; } 

        /// <summary>Current response metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMetadata")]
        public virtual ResponseMetadata ResponseMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An object representing a latitude/longitude pair. This is expressed as a pair of doubles representing
    /// degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard.
    /// Values must be within normalized ranges. Example of normalization code in Python: def
    /// NormalizeLongitude(longitude): Wrapsdecimal degrees longitude to [-180.0, 180.0]. q, r = divmod(longitude,
    /// 360.0) if r > 180.0 or (r == 180.0 and q <= -1.0): return r - 360.0 return r def NormalizeLatLng(latitude,
    /// longitude): Wraps decimal degrees latitude and longitude to [-180.0, 180.0] and [-90.0, 90.0], respectively. r =
    /// latitude % 360.0 if r = 270.0: return r - 360, NormalizeLongitude(longitude) else: return 180 - r,
    /// NormalizeLongitude(longitude + 180.0) assert 180.0 == NormalizeLongitude(180.0) assert -180.0 ==
    /// NormalizeLongitude(-180.0) assert -179.0 == NormalizeLongitude(181.0) assert (0.0, 0.0) ==
    /// NormalizeLatLng(360.0, 0.0) assert (0.0, 0.0) == NormalizeLatLng(-360.0, 0.0) assert (85.0, 180.0) ==
    /// NormalizeLatLng(95.0, 0.0) assert (-85.0, -170.0) == NormalizeLatLng(-95.0, 10.0) assert (90.0, 10.0) ==
    /// NormalizeLatLng(90.0, 10.0) assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0) assert (0.0, -170.0) ==
    /// NormalizeLatLng(-180.0, 10.0) assert (0.0, -170.0) == NormalizeLatLng(180.0, 10.0) assert (-90.0, 10.0) ==
    /// NormalizeLatLng(270.0, 10.0) assert (90.0, 10.0) == NormalizeLatLng(-270.0, 10.0)</summary>
    public class LatLng : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The latitude in degrees. It must be in the range [-90.0, +90.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; } 

        /// <summary>The longitude in degrees. It must be in the range [-180.0, +180.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A lead resource that represents an advertiser contact for a `Company`. These are usually generated via
    /// Google Partner Search (the advertiser portal).</summary>
    public class Lead : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Comments lead source gave.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; } 

        /// <summary>Email address of lead source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>Last name of lead source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("familyName")]
        public virtual string FamilyName { get; set; } 

        /// <summary>First name of lead source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("givenName")]
        public virtual string GivenName { get; set; } 

        /// <summary>List of reasons for using Google Partner Search and creating a lead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gpsMotivations")]
        public virtual System.Collections.Generic.IList<string> GpsMotivations { get; set; } 

        /// <summary>ID of the lead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The minimum monthly budget lead source is willing to spend.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minMonthlyBudget")]
        public virtual Money MinMonthlyBudget { get; set; } 

        /// <summary>Phone number of lead source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; } 

        /// <summary>Type of lead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>Website URL of lead source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteUrl")]
        public virtual string WebsiteUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for ListCompanies.</summary>
    public class ListCompaniesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of companies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companies")]
        public virtual System.Collections.Generic.IList<Company> Companies { get; set; } 

        /// <summary>A token to retrieve next page of results. Pass this value in the `ListCompaniesRequest.page_token`
        /// field in the subsequent call to ListCompanies to retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Current response metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMetadata")]
        public virtual ResponseMetadata ResponseMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for ListUserStates.</summary>
    public class ListUserStatesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Current response metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMetadata")]
        public virtual ResponseMetadata ResponseMetadata { get; set; } 

        /// <summary>User's states.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userStates")]
        public virtual System.Collections.Generic.IList<string> UserStates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The localized company information.</summary>
    public class LocalizedCompanyInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of country codes for the localized company info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCodes")]
        public virtual System.Collections.Generic.IList<string> CountryCodes { get; set; } 

        /// <summary>Localized display name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Language code of the localized company info, as defined by BCP 47 (IETF BCP 47, "Tags for
        /// Identifying Languages").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>Localized brief description that the company uses to advertise themselves.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overview")]
        public virtual string Overview { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A location with address and geographic coordinates.</summary>
    public class Location : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The complete address of the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        /// <summary>The latitude and longitude of the location, in degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latLng")]
        public virtual LatLng LatLng { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for LogClientMessage.</summary>
    public class LogMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Map of client info, such as URL, browser navigator, browser platform, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientInfo")]
        public virtual System.Collections.Generic.IDictionary<string,string> ClientInfo { get; set; } 

        /// <summary>Details about the client message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual string Details { get; set; } 

        /// <summary>Message level of client message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("level")]
        public virtual string Level { get; set; } 

        /// <summary>Current request metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestMetadata")]
        public virtual RequestMetadata RequestMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for LogClientMessage.</summary>
    public class LogMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Current response metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMetadata")]
        public virtual ResponseMetadata ResponseMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for LogUserEvent.</summary>
    public class LogUserEventRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The action that occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventAction")]
        public virtual string EventAction { get; set; } 

        /// <summary>The category the action belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventCategory")]
        public virtual string EventCategory { get; set; } 

        /// <summary>List of event data for the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventDatas")]
        public virtual System.Collections.Generic.IList<EventData> EventDatas { get; set; } 

        /// <summary>The scope of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventScope")]
        public virtual string EventScope { get; set; } 

        /// <summary>Advertiser lead information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lead")]
        public virtual Lead Lead { get; set; } 

        /// <summary>Current request metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestMetadata")]
        public virtual RequestMetadata RequestMetadata { get; set; } 

        /// <summary>The URL where the event occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for LogUserEvent.</summary>
    public class LogUserEventResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Current response metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMetadata")]
        public virtual ResponseMetadata ResponseMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an amount of money with its currency type.</summary>
    public class Money : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The 3-letter currency code defined in ISO 4217.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; } 

        /// <summary>Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999
        /// inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be
        /// positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is
        /// represented as `units`=-1 and `nanos`=-750,000,000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nanos")]
        public virtual System.Nullable<int> Nanos { get; set; } 

        /// <summary>The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US
        /// dollar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Basic information from a public profile.</summary>
    public class PublicProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL to the main display image of the public profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayImageUrl")]
        public virtual string DisplayImageUrl { get; set; } 

        /// <summary>The display name of the public profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The ID which can be used to retrieve more details about the public profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The URL of the public profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information related to ranking of results.</summary>
    public class Rank : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of rank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The numerical value of the rank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Nullable<double> Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>reCaptcha challenge info.</summary>
    public class RecaptchaChallenge : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the reCaptcha challenge.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The response to the reCaptcha challenge.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual string Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Common data that is in each API request.</summary>
    public class RequestMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Experiment IDs the current request belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("experimentIds")]
        public virtual System.Collections.Generic.IList<string> ExperimentIds { get; set; } 

        /// <summary>Locale to use for the current request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual string Locale { get; set; } 

        /// <summary>Google Partners session ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnersSessionId")]
        public virtual string PartnersSessionId { get; set; } 

        /// <summary>Source of traffic for the current request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trafficSource")]
        public virtual TrafficSource TrafficSource { get; set; } 

        /// <summary>Values to use instead of the user's respective defaults for the current request. These are only
        /// honored by whitelisted products.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userOverrides")]
        public virtual UserOverrides UserOverrides { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Common data that is in each API response.</summary>
    public class ResponseMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Debug information about this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("debugInfo")]
        public virtual DebugInfo DebugInfo { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Source of traffic for the current request.</summary>
    public class TrafficSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifier to indicate where the traffic comes from. An identifier has multiple letters created by
        /// a team which redirected the traffic to us.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trafficSourceId")]
        public virtual string TrafficSourceId { get; set; } 

        /// <summary>Second level identifier to indicate where the traffic comes from. An identifier has multiple
        /// letters created by a team which redirected the traffic to us.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trafficSubId")]
        public virtual string TrafficSubId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Values to use instead of the user's respective defaults. These are only honored by whitelisted
    /// products.</summary>
    public class UserOverrides : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>IP address to use instead of the user's geo-located IP address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipAddress")]
        public virtual string IpAddress { get; set; } 

        /// <summary>Logged-in user ID to impersonate instead of the user's ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
