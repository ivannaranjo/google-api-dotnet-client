// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.14.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google App Engine Admin API Version v1beta5
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://cloud.google.com/appengine/docs/admin-api/'>Google App Engine Admin API</a>
 *      <tr><th>API Version<td>v1beta5
 *      <tr><th>API Rev<td>20160711 (557)
 *      <tr><th>API Docs
 *          <td><a href='https://cloud.google.com/appengine/docs/admin-api/'>
 *              https://cloud.google.com/appengine/docs/admin-api/</a>
 *      <tr><th>Discovery Name<td>appengine
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google App Engine Admin API can be found at
 * <a href='https://cloud.google.com/appengine/docs/admin-api/'>https://cloud.google.com/appengine/docs/admin-api/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Appengine.v1beta5
{
    /// <summary>The Appengine Service.</summary>
    public class AppengineService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1beta5";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public AppengineService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public AppengineService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            apps = new AppsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "appengine"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://appengine.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Google App Engine Admin API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

        }



        private readonly AppsResource apps;

        /// <summary>Gets the Apps resource.</summary>
        public virtual AppsResource Apps
        {
            get { return apps; }
        }
    }

    ///<summary>A base abstract class for Appengine requests.</summary>
    public abstract class AppengineBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new AppengineBaseServiceRequest instance.</summary>
        protected AppengineBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Xgafv { get; set; }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Alt { get; set; }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Appengine parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "apps" collection of methods.</summary>
    public class AppsResource
    {
        private const string Resource = "apps";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AppsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            locations = new LocationsResource(service);
            operations = new OperationsResource(service);
            services = new ServicesResource(service);

        }

        private readonly LocationsResource locations;

        /// <summary>Gets the Locations resource.</summary>
        public virtual LocationsResource Locations
        {
            get { return locations; }
        }

        /// <summary>The "locations" collection of methods.</summary>
        public class LocationsResource
        {
            private const string Resource = "locations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Get information about a location.</summary>
            /// <param name="appsId">Part of `name`. Resource name for the location.</param>
            /// <param name="locationsId">Part
            /// of `name`. See documentation of `appsId`.</param>
            public virtual GetRequest Get(string appsId, string locationsId)
            {
                return new GetRequest(service, appsId, locationsId);
            }

            /// <summary>Get information about a location.</summary>
            public class GetRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Location>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string appsId, string locationsId)
                    : base(service)
                {
                    AppsId = appsId;
                    LocationsId = locationsId;
                    InitParameters();
                }


                /// <summary>Part of `name`. Resource name for the location.</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("locationsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string LocationsId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/locations/{locationsId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "locationsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "locationsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists information about the supported locations for this service.</summary>
            /// <param name="appsId">Part of `name`. The resource that owns the locations collection, if applicable.</param>
            public virtual ListRequest List(string appsId)
            {
                return new ListRequest(service, appsId);
            }

            /// <summary>Lists information about the supported locations for this service.</summary>
            public class ListRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.ListLocationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string appsId)
                    : base(service)
                {
                    AppsId = appsId;
                    InitParameters();
                }


                /// <summary>Part of `name`. The resource that owns the locations collection, if applicable.</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>The standard list filter.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>The standard list page size.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/locations"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly OperationsResource operations;

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations
        {
            get { return operations; }
        }

        /// <summary>The "operations" collection of methods.</summary>
        public class OperationsResource
        {
            private const string Resource = "operations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public OperationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Gets the latest state of a long-running operation. Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            /// <param name="appsId">Part of `name`. The name of the operation resource.</param>
            /// <param
            /// name="operationsId">Part of `name`. See documentation of `appsId`.</param>
            public virtual GetRequest Get(string appsId, string operationsId)
            {
                return new GetRequest(service, appsId, operationsId);
            }

            /// <summary>Gets the latest state of a long-running operation. Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            public class GetRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string appsId, string operationsId)
                    : base(service)
                {
                    AppsId = appsId;
                    OperationsId = operationsId;
                    InitParameters();
                }


                /// <summary>Part of `name`. The name of the operation resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("operationsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string OperationsId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/operations/{operationsId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "operationsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "operationsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists operations that match the specified filter in the request. If the server doesn't support
            /// this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding below allows API services to override
            /// the binding to use different resource name schemes, such as `users/operations`.</summary>
            /// <param name="appsId">Part of `name`. The name of the operation collection.</param>
            public virtual ListRequest List(string appsId)
            {
                return new ListRequest(service, appsId);
            }

            /// <summary>Lists operations that match the specified filter in the request. If the server doesn't support
            /// this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding below allows API services to override
            /// the binding to use different resource name schemes, such as `users/operations`.</summary>
            public class ListRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.ListOperationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string appsId)
                    : base(service)
                {
                    AppsId = appsId;
                    InitParameters();
                }


                /// <summary>Part of `name`. The name of the operation collection.</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>The standard list filter.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>The standard list page size.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/operations"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly ServicesResource services;

        /// <summary>Gets the Services resource.</summary>
        public virtual ServicesResource Services
        {
            get { return services; }
        }

        /// <summary>The "services" collection of methods.</summary>
        public class ServicesResource
        {
            private const string Resource = "services";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ServicesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                versions = new VersionsResource(service);

            }

            private readonly VersionsResource versions;

            /// <summary>Gets the Versions resource.</summary>
            public virtual VersionsResource Versions
            {
                get { return versions; }
            }

            /// <summary>The "versions" collection of methods.</summary>
            public class VersionsResource
            {
                private const string Resource = "versions";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public VersionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    instances = new InstancesResource(service);

                }

                private readonly InstancesResource instances;

                /// <summary>Gets the Instances resource.</summary>
                public virtual InstancesResource Instances
                {
                    get { return instances; }
                }

                /// <summary>The "instances" collection of methods.</summary>
                public class InstancesResource
                {
                    private const string Resource = "instances";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public InstancesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;

                    }


                    /// <summary>Enable debugging of this VM instance. This call allows you to SSH to the VM. While the
                    /// VM is in debug mode, it continues to serve live traffic. After you're done debugging an
                    /// instance, delete the instance; the system creates a new instance when needed. You can't debug a
                    /// non-VM instance.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default/versions/v1/instances/instance-1".</param>
                    /// <param name="servicesId">Part of
                    /// `name`. See documentation of `appsId`.</param>
                    /// <param name="versionsId">Part of `name`. See documentation of
                    /// `appsId`.</param>
                    /// <param name="instancesId">Part of `name`. See documentation of `appsId`.</param>
                    public virtual DebugRequest Debug(Google.Apis.Appengine.v1beta5.Data.DebugInstanceRequest body, string appsId, string servicesId, string versionsId, string instancesId)
                    {
                        return new DebugRequest(service, body, appsId, servicesId, versionsId, instancesId);
                    }

                    /// <summary>Enable debugging of this VM instance. This call allows you to SSH to the VM. While the
                    /// VM is in debug mode, it continues to serve live traffic. After you're done debugging an
                    /// instance, delete the instance; the system creates a new instance when needed. You can't debug a
                    /// non-VM instance.</summary>
                    public class DebugRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
                    {
                        /// <summary>Constructs a new Debug request.</summary>
                        public DebugRequest(Google.Apis.Services.IClientService service, Google.Apis.Appengine.v1beta5.Data.DebugInstanceRequest body, string appsId, string servicesId, string versionsId, string instancesId)
                            : base(service)
                        {
                            AppsId = appsId;
                            ServicesId = servicesId;
                            VersionsId = versionsId;
                            InstancesId = instancesId;
                            Body = body;
                            InitParameters();
                        }


                        /// <summary>Part of `name`. Name of the resource requested. For example:
                        /// "apps/myapp/services/default/versions/v1/instances/instance-1".</summary>
                        [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string AppsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServicesId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string VersionsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("instancesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string InstancesId { get; private set; }


                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Appengine.v1beta5.Data.DebugInstanceRequest Body { get; set; }

                        ///<summary>Returns the body of the request.</summary>
                        protected override object GetBody() { return Body; }

                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "debug"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "POST"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}:debug"; }
                        }

                        /// <summary>Initializes Debug parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "appsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "appsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "servicesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servicesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "versionsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "versionsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "instancesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "instancesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                        }

                    }

                    /// <summary>Stops a running instance.</summary>
                    /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default/versions/v1/instances/instance-1".</param>
                    /// <param name="servicesId">Part of
                    /// `name`. See documentation of `appsId`.</param>
                    /// <param name="versionsId">Part of `name`. See documentation of
                    /// `appsId`.</param>
                    /// <param name="instancesId">Part of `name`. See documentation of `appsId`.</param>
                    public virtual DeleteRequest Delete(string appsId, string servicesId, string versionsId, string instancesId)
                    {
                        return new DeleteRequest(service, appsId, servicesId, versionsId, instancesId);
                    }

                    /// <summary>Stops a running instance.</summary>
                    public class DeleteRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId, string versionsId, string instancesId)
                            : base(service)
                        {
                            AppsId = appsId;
                            ServicesId = servicesId;
                            VersionsId = versionsId;
                            InstancesId = instancesId;
                            InitParameters();
                        }


                        /// <summary>Part of `name`. Name of the resource requested. For example:
                        /// "apps/myapp/services/default/versions/v1/instances/instance-1".</summary>
                        [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string AppsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServicesId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string VersionsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("instancesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string InstancesId { get; private set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "delete"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "DELETE"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}"; }
                        }

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "appsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "appsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "servicesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servicesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "versionsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "versionsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "instancesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "instancesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                        }

                    }

                    /// <summary>Gets instance information.</summary>
                    /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default/versions/v1/instances/instance-1".</param>
                    /// <param name="servicesId">Part of
                    /// `name`. See documentation of `appsId`.</param>
                    /// <param name="versionsId">Part of `name`. See documentation of
                    /// `appsId`.</param>
                    /// <param name="instancesId">Part of `name`. See documentation of `appsId`.</param>
                    public virtual GetRequest Get(string appsId, string servicesId, string versionsId, string instancesId)
                    {
                        return new GetRequest(service, appsId, servicesId, versionsId, instancesId);
                    }

                    /// <summary>Gets instance information.</summary>
                    public class GetRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Instance>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId, string versionsId, string instancesId)
                            : base(service)
                        {
                            AppsId = appsId;
                            ServicesId = servicesId;
                            VersionsId = versionsId;
                            InstancesId = instancesId;
                            InitParameters();
                        }


                        /// <summary>Part of `name`. Name of the resource requested. For example:
                        /// "apps/myapp/services/default/versions/v1/instances/instance-1".</summary>
                        [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string AppsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServicesId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string VersionsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("instancesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string InstancesId { get; private set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "get"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "GET"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}"; }
                        }

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "appsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "appsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "servicesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servicesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "versionsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "versionsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "instancesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "instancesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                        }

                    }

                    /// <summary>Lists the instances of a version.</summary>
                    /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default/versions/v1".</param>
                    /// <param name="servicesId">Part of `name`. See
                    /// documentation of `appsId`.</param>
                    /// <param name="versionsId">Part of `name`. See documentation of
                    /// `appsId`.</param>
                    public virtual ListRequest List(string appsId, string servicesId, string versionsId)
                    {
                        return new ListRequest(service, appsId, servicesId, versionsId);
                    }

                    /// <summary>Lists the instances of a version.</summary>
                    public class ListRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.ListInstancesResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId, string versionsId)
                            : base(service)
                        {
                            AppsId = appsId;
                            ServicesId = servicesId;
                            VersionsId = versionsId;
                            InitParameters();
                        }


                        /// <summary>Part of `name`. Name of the resource requested. For example:
                        /// "apps/myapp/services/default/versions/v1".</summary>
                        [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string AppsId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServicesId { get; private set; }

                        /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string VersionsId { get; private set; }

                        /// <summary>Maximum results to return per page.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>Continuation token for fetching the next page of results.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }


                        ///<summary>Gets the method name.</summary>
                        public override string MethodName
                        {
                            get { return "list"; }
                        }

                        ///<summary>Gets the HTTP method.</summary>
                        public override string HttpMethod
                        {
                            get { return "GET"; }
                        }

                        ///<summary>Gets the REST path.</summary>
                        public override string RestPath
                        {
                            get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances"; }
                        }

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();

                            RequestParameters.Add(
                                "appsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "appsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "servicesId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servicesId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "versionsId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "versionsId",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            RequestParameters.Add(
                                "pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                        }

                    }
                }

                /// <summary>Deploys new code and resource files to a version.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="appsId">Part of `name`. Name of the resource to update. For example:
                /// "apps/myapp/services/default".</param>
                /// <param name="servicesId">Part of `name`. See documentation of
                /// `appsId`.</param>
                public virtual CreateRequest Create(Google.Apis.Appengine.v1beta5.Data.Version body, string appsId, string servicesId)
                {
                    return new CreateRequest(service, body, appsId, servicesId);
                }

                /// <summary>Deploys new code and resource files to a version.</summary>
                public class CreateRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Appengine.v1beta5.Data.Version body, string appsId, string servicesId)
                        : base(service)
                    {
                        AppsId = appsId;
                        ServicesId = servicesId;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Part of `name`. Name of the resource to update. For example:
                    /// "apps/myapp/services/default".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string AppsId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ServicesId { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Appengine.v1beta5.Data.Version Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "appsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "appsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "servicesId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servicesId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Deletes an existing version.</summary>
                /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                /// "apps/myapp/services/default/versions/v1".</param>
                /// <param name="servicesId">Part of `name`. See
                /// documentation of `appsId`.</param>
                /// <param name="versionsId">Part of `name`. See documentation of
                /// `appsId`.</param>
                public virtual DeleteRequest Delete(string appsId, string servicesId, string versionsId)
                {
                    return new DeleteRequest(service, appsId, servicesId, versionsId);
                }

                /// <summary>Deletes an existing version.</summary>
                public class DeleteRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId, string versionsId)
                        : base(service)
                    {
                        AppsId = appsId;
                        ServicesId = servicesId;
                        VersionsId = versionsId;
                        InitParameters();
                    }


                    /// <summary>Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default/versions/v1".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string AppsId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ServicesId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string VersionsId { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "appsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "appsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "servicesId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servicesId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "versionsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "versionsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Gets application deployment information.</summary>
                /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                /// "apps/myapp/services/default/versions/v1".</param>
                /// <param name="servicesId">Part of `name`. See
                /// documentation of `appsId`.</param>
                /// <param name="versionsId">Part of `name`. See documentation of
                /// `appsId`.</param>
                public virtual GetRequest Get(string appsId, string servicesId, string versionsId)
                {
                    return new GetRequest(service, appsId, servicesId, versionsId);
                }

                /// <summary>Gets application deployment information.</summary>
                public class GetRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Version>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId, string versionsId)
                        : base(service)
                    {
                        AppsId = appsId;
                        ServicesId = servicesId;
                        VersionsId = versionsId;
                        InitParameters();
                    }


                    /// <summary>Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default/versions/v1".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string AppsId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ServicesId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string VersionsId { get; private set; }

                    /// <summary>Controls the set of fields returned in the `Get` response.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("view", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<ViewEnum> View { get; set; }

                    /// <summary>Controls the set of fields returned in the `Get` response.</summary>
                    public enum ViewEnum
                    {
                        [Google.Apis.Util.StringValueAttribute("BASIC")]
                        BASIC,
                        [Google.Apis.Util.StringValueAttribute("FULL")]
                        FULL,
                    }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "appsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "appsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "servicesId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servicesId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "versionsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "versionsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "view", new Google.Apis.Discovery.Parameter
                            {
                                Name = "view",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Lists the versions of a service.</summary>
                /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
                /// "apps/myapp/services/default".</param>
                /// <param name="servicesId">Part of `name`. See documentation of
                /// `appsId`.</param>
                public virtual ListRequest List(string appsId, string servicesId)
                {
                    return new ListRequest(service, appsId, servicesId);
                }

                /// <summary>Lists the versions of a service.</summary>
                public class ListRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.ListVersionsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId)
                        : base(service)
                    {
                        AppsId = appsId;
                        ServicesId = servicesId;
                        InitParameters();
                    }


                    /// <summary>Part of `name`. Name of the resource requested. For example:
                    /// "apps/myapp/services/default".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string AppsId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ServicesId { get; private set; }

                    /// <summary>Controls the set of fields returned in the `List` response.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("view", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<ViewEnum> View { get; set; }

                    /// <summary>Controls the set of fields returned in the `List` response.</summary>
                    public enum ViewEnum
                    {
                        [Google.Apis.Util.StringValueAttribute("BASIC")]
                        BASIC,
                        [Google.Apis.Util.StringValueAttribute("FULL")]
                        FULL,
                    }

                    /// <summary>Maximum results to return per page.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Continuation token for fetching the next page of results.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "appsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "appsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "servicesId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servicesId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "view", new Google.Apis.Discovery.Parameter
                            {
                                Name = "view",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Updates the specified Version resource. You can specify the following fields depending on
                /// the App Engine environment and type of scaling that the version resource uses: *
                /// [`serving_status`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.serving_status): For Version
                /// resources that use basic scaling, manual scaling, or run in the App Engine flexible environment. *
                /// [`instance_class`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.instance_class): For Version
                /// resources that run in the App Engine standard environment. *
                /// [`automatic_scaling.min_idle_instances`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.automatic_scaling): For Version
                /// resources that use automatic scaling and run in the App Engine standard environment. *
                /// [`automatic_scaling.max_idle_instances`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.automatic_scaling): For Version
                /// resources that use automatic scaling and run in the App Engine standard environment.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="appsId">Part of `name`. Name of the resource to update. For example:
                /// "apps/myapp/services/default/versions/1".</param>
                /// <param name="servicesId">Part of `name`. See documentation
                /// of `appsId`.</param>
                /// <param name="versionsId">Part of `name`. See documentation of `appsId`.</param>
                public virtual PatchRequest Patch(Google.Apis.Appengine.v1beta5.Data.Version body, string appsId, string servicesId, string versionsId)
                {
                    return new PatchRequest(service, body, appsId, servicesId, versionsId);
                }

                /// <summary>Updates the specified Version resource. You can specify the following fields depending on
                /// the App Engine environment and type of scaling that the version resource uses: *
                /// [`serving_status`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.serving_status): For Version
                /// resources that use basic scaling, manual scaling, or run in the App Engine flexible environment. *
                /// [`instance_class`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.instance_class): For Version
                /// resources that run in the App Engine standard environment. *
                /// [`automatic_scaling.min_idle_instances`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.automatic_scaling): For Version
                /// resources that use automatic scaling and run in the App Engine standard environment. *
                /// [`automatic_scaling.max_idle_instances`](/appengine/docs/admin-
                /// api/reference/rest/v1beta5/apps.services.versions#Version.FIELDS.automatic_scaling): For Version
                /// resources that use automatic scaling and run in the App Engine standard environment.</summary>
                public class PatchRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Appengine.v1beta5.Data.Version body, string appsId, string servicesId, string versionsId)
                        : base(service)
                    {
                        AppsId = appsId;
                        ServicesId = servicesId;
                        VersionsId = versionsId;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Part of `name`. Name of the resource to update. For example:
                    /// "apps/myapp/services/default/versions/1".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string AppsId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ServicesId { get; private set; }

                    /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("versionsId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string VersionsId { get; private set; }

                    /// <summary>Standard field mask for the set of fields to be updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("mask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Mask { get; set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Appengine.v1beta5.Data.Version Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "patch"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PATCH"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta5/apps/{appsId}/services/{servicesId}/versions/{versionsId}"; }
                    }

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "appsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "appsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "servicesId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servicesId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "versionsId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "versionsId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "mask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "mask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }

            /// <summary>Deletes a service and all enclosed versions.</summary>
            /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
            /// "apps/myapp/services/default".</param>
            /// <param name="servicesId">Part of `name`. See documentation of
            /// `appsId`.</param>
            public virtual DeleteRequest Delete(string appsId, string servicesId)
            {
                return new DeleteRequest(service, appsId, servicesId);
            }

            /// <summary>Deletes a service and all enclosed versions.</summary>
            public class DeleteRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId)
                    : base(service)
                {
                    AppsId = appsId;
                    ServicesId = servicesId;
                    InitParameters();
                }


                /// <summary>Part of `name`. Name of the resource requested. For example:
                /// "apps/myapp/services/default".</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ServicesId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/services/{servicesId}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "servicesId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "servicesId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Gets the current configuration of the service.</summary>
            /// <param name="appsId">Part of `name`. Name of the resource requested. For example:
            /// "apps/myapp/services/default".</param>
            /// <param name="servicesId">Part of `name`. See documentation of
            /// `appsId`.</param>
            public virtual GetRequest Get(string appsId, string servicesId)
            {
                return new GetRequest(service, appsId, servicesId);
            }

            /// <summary>Gets the current configuration of the service.</summary>
            public class GetRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Service>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string appsId, string servicesId)
                    : base(service)
                {
                    AppsId = appsId;
                    ServicesId = servicesId;
                    InitParameters();
                }


                /// <summary>Part of `name`. Name of the resource requested. For example:
                /// "apps/myapp/services/default".</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ServicesId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/services/{servicesId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "servicesId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "servicesId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists all the services in the application.</summary>
            /// <param name="appsId">Part of `name`. Name of the resource requested. For example: "apps/myapp".</param>
            public virtual ListRequest List(string appsId)
            {
                return new ListRequest(service, appsId);
            }

            /// <summary>Lists all the services in the application.</summary>
            public class ListRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.ListServicesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string appsId)
                    : base(service)
                {
                    AppsId = appsId;
                    InitParameters();
                }


                /// <summary>Part of `name`. Name of the resource requested. For example: "apps/myapp".</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>Maximum results to return per page.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Continuation token for fetching the next page of results.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/services"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the configuration of the specified service.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="appsId">Part of `name`. Name of the resource to update. For example:
            /// "apps/myapp/services/default".</param>
            /// <param name="servicesId">Part of `name`. See documentation of
            /// `appsId`.</param>
            public virtual PatchRequest Patch(Google.Apis.Appengine.v1beta5.Data.Service body, string appsId, string servicesId)
            {
                return new PatchRequest(service, body, appsId, servicesId);
            }

            /// <summary>Updates the configuration of the specified service.</summary>
            public class PatchRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Appengine.v1beta5.Data.Service body, string appsId, string servicesId)
                    : base(service)
                {
                    AppsId = appsId;
                    ServicesId = servicesId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Part of `name`. Name of the resource to update. For example:
                /// "apps/myapp/services/default".</summary>
                [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string AppsId { get; private set; }

                /// <summary>Part of `name`. See documentation of `appsId`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("servicesId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ServicesId { get; private set; }

                /// <summary>Standard field mask for the set of fields to be updated.</summary>
                [Google.Apis.Util.RequestParameterAttribute("mask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Mask { get; set; }

                /// <summary>Whether to use Traffic Migration to shift traffic gradually. Traffic can only be migrated
                /// from a single version to another single version.</summary>
                [Google.Apis.Util.RequestParameterAttribute("migrateTraffic", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> MigrateTraffic { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Appengine.v1beta5.Data.Service Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta5/apps/{appsId}/services/{servicesId}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "appsId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "appsId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "servicesId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "servicesId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "mask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "mask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "migrateTraffic", new Google.Apis.Discovery.Parameter
                        {
                            Name = "migrateTraffic",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Creates an App Engine application for a Google Cloud Platform project. This requires a project that
        /// excludes an App Engine application. For details about creating a project without an application, see the
        /// [Google Cloud Resource Manager create project topic](https://cloud.google.com/resource-manager/docs
        /// /creating-project).</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.Appengine.v1beta5.Data.Application body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Creates an App Engine application for a Google Cloud Platform project. This requires a project that
        /// excludes an App Engine application. For details about creating a project without an application, see the
        /// [Google Cloud Resource Manager create project topic](https://cloud.google.com/resource-manager/docs
        /// /creating-project).</summary>
        public class CreateRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Operation>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Appengine.v1beta5.Data.Application body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Appengine.v1beta5.Data.Application Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta5/apps"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Gets information about an application.</summary>
        /// <param name="appsId">Part of `name`. Name of the application to get. For example: "apps/myapp".</param>
        public virtual GetRequest Get(string appsId)
        {
            return new GetRequest(service, appsId);
        }

        /// <summary>Gets information about an application.</summary>
        public class GetRequest : AppengineBaseServiceRequest<Google.Apis.Appengine.v1beta5.Data.Application>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string appsId)
                : base(service)
            {
                AppsId = appsId;
                InitParameters();
            }


            /// <summary>Part of `name`. Name of the application to get. For example: "apps/myapp".</summary>
            [Google.Apis.Util.RequestParameterAttribute("appsId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AppsId { get; private set; }

            /// <summary>Certain resources associated with an application are created on-demand. Controls whether these
            /// resources should be created when performing the `GET` operation. If specified and any resources could
            /// not be created, the request will fail with an error code. Additionally, this parameter can cause the
            /// request to take longer to complete. Note: This parameter will be deprecated in a future version of the
            /// API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ensureResourcesExist", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> EnsureResourcesExist { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta5/apps/{appsId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "appsId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "appsId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "ensureResourcesExist", new Google.Apis.Discovery.Parameter
                    {
                        Name = "ensureResourcesExist",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Appengine.v1beta5.Data
{    

    /// <summary>API Serving configuration for Cloud Endpoints.</summary>
    public class ApiConfigHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>For users not logged in, how to handle access to resources with required login. Defaults to
        /// "redirect".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authFailAction")]
        public virtual string AuthFailAction { get; set; } 

        /// <summary>What level of login is required to access this resource. Default is "optional".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("login")]
        public virtual string Login { get; set; } 

        /// <summary>Specifies the path to the script from the application root directory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("script")]
        public virtual string Script { get; set; } 

        /// <summary>Configures whether security (HTTPS) should be enforced for this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("securityLevel")]
        public virtual string SecurityLevel { get; set; } 

        /// <summary>URL to serve the endpoint at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Use Google Cloud Endpoints to handle requests.</summary>
    public class ApiEndpointHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies the path to the script from the application root directory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptPath")]
        public virtual string ScriptPath { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Application contains the top-level configuration of an App Engine application.</summary>
    public class Application : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set, only users from the specified Google Apps authentication domain may access the application.
        /// If not set, any Google Account may access the application.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authDomain")]
        public virtual string AuthDomain { get; set; } 

        /// <summary>A Google Cloud Storage bucket which can be used for storing files associated with an application.
        /// This bucket is associated with the application and can be used by the gcloud deployment commands.
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("codeBucket")]
        public virtual string CodeBucket { get; set; } 

        /// <summary>A Google Cloud Storage bucket which can be used by the application to store content.
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultBucket")]
        public virtual string DefaultBucket { get; set; } 

        /// <summary>Determines the cookie expiration policy for the application. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultCookieExpiration")]
        public virtual string DefaultCookieExpiration { get; set; } 

        /// <summary>The hostname used to reach the application, as resolved by App Engine. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultHostname")]
        public virtual string DefaultHostname { get; set; } 

        /// <summary>HTTP path dispatch rules for requests to the app that do not explicitly target a service or
        /// version. The rules are order-dependent. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dispatchRules")]
        public virtual System.Collections.Generic.IList<UrlDispatchRule> DispatchRules { get; set; } 

        /// <summary>The identifier of the Application resource. This identifier is equivalent to the project ID of the
        /// Google Cloud Platform project where you want to deploy your application. Example: "myapp".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The location from which the application will be run. Application instances will run out of data
        /// centers in the chosen location and all of the application's End User Content will be stored at rest. The
        /// default is "us-central". Choices are: "us-central" - Central US "europe-west" - Western Europe "us-east1" -
        /// Eastern US</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; } 

        /// <summary>The full path to the Application resource in the API. Example: "apps/myapp". @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Automatic scaling is the scaling policy that App Engine has used since its inception. It is based on
    /// request rate, response latencies, and other application metrics.</summary>
    public class AutomaticScaling : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The amount of time that the [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/) should
        /// wait between changes to the number of virtual machines. Applies only to the VM runtime.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coolDownPeriod")]
        public virtual string CoolDownPeriod { get; set; } 

        /// <summary>Target scaling by CPU usage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuUtilization")]
        public virtual CpuUtilization CpuUtilization { get; set; } 

        /// <summary>Target scaling by disk usage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskUtilization")]
        public virtual DiskUtilization DiskUtilization { get; set; } 

        /// <summary>The number of concurrent requests an automatic scaling instance can accept before the scheduler
        /// spawns a new instance. Default value is chosen based on the runtime.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxConcurrentRequests")]
        public virtual System.Nullable<int> MaxConcurrentRequests { get; set; } 

        /// <summary>The maximum number of idle instances that App Engine should maintain for this version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxIdleInstances")]
        public virtual System.Nullable<int> MaxIdleInstances { get; set; } 

        /// <summary>The maximum amount of time that App Engine should allow a request to wait in the pending queue
        /// before starting a new instance to handle it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxPendingLatency")]
        public virtual string MaxPendingLatency { get; set; } 

        /// <summary>Max number of instances that App Engine should start to handle requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxTotalInstances")]
        public virtual System.Nullable<int> MaxTotalInstances { get; set; } 

        /// <summary>The minimum number of idle instances that App Engine should maintain for this version. Only applies
        /// to the default version of a service, since other versions are not expected to receive significant
        /// traffic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minIdleInstances")]
        public virtual System.Nullable<int> MinIdleInstances { get; set; } 

        /// <summary>The minimum amount of time that App Engine should allow a request to wait in the pending queue
        /// before starting a new instance to handle it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minPendingLatency")]
        public virtual string MinPendingLatency { get; set; } 

        /// <summary>Minimum number of instances that App Engine should maintain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minTotalInstances")]
        public virtual System.Nullable<int> MinTotalInstances { get; set; } 

        /// <summary>Target scaling by network usage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkUtilization")]
        public virtual NetworkUtilization NetworkUtilization { get; set; } 

        /// <summary>Target scaling by request utilization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestUtilization")]
        public virtual RequestUtilization RequestUtilization { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A service with basic scaling will create an instance when the application receives a request. The
    /// instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or
    /// driven by user activity.</summary>
    public class BasicScaling : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The instance will be shut down this amount of time after receiving its last request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idleTimeout")]
        public virtual string IdleTimeout { get; set; } 

        /// <summary>The maximum number of instances for App Engine to create for this version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxInstances")]
        public virtual System.Nullable<int> MaxInstances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Docker (container) image which should be used to start the application.</summary>
    public class ContainerInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Reference to a hosted container image. Must be a URI to a resource in a Docker repository. Must be
        /// fully qualified, including tag or digest. e.g. gcr.io/my-project/image:tag or gcr.io/my-
        /// project/image@digest</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual string Image { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Target scaling by CPU usage.</summary>
    public class CpuUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The period of time over which CPU utilization is calculated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aggregationWindowLength")]
        public virtual string AggregationWindowLength { get; set; } 

        /// <summary>Target (0-1) CPU utilization ratio to maintain when scaling.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetUtilization")]
        public virtual System.Nullable<double> TargetUtilization { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for `Instances.DebugInstance`.</summary>
    public class DebugInstanceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Code and application artifacts used to deploy a version to App Engine.</summary>
    public class Deployment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If supplied, a docker (container) image which should be used to start the application. Only
        /// applicable to the 'vm' runtime.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("container")]
        public virtual ContainerInfo Container { get; set; } 

        /// <summary>A manifest of files stored in Google Cloud Storage which should be included as part of this
        /// application. All files must be readable using the credentials supplied with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("files")]
        public virtual System.Collections.Generic.IDictionary<string,FileInfo> Files { get; set; } 

        /// <summary>The origin of the source code for this deployment. There can be more than one source reference per
        /// Version if source code is distributed among multiple repositories.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceReferences")]
        public virtual System.Collections.Generic.IList<SourceReference> SourceReferences { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Target scaling by disk usage (for VM runtimes only).</summary>
    public class DiskUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Target bytes per second read.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetReadBytesPerSec")]
        public virtual System.Nullable<int> TargetReadBytesPerSec { get; set; } 

        /// <summary>Target ops per second read.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetReadOpsPerSec")]
        public virtual System.Nullable<int> TargetReadOpsPerSec { get; set; } 

        /// <summary>Target bytes per second written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetWriteBytesPerSec")]
        public virtual System.Nullable<int> TargetWriteBytesPerSec { get; set; } 

        /// <summary>Target ops per second written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetWriteOpsPerSec")]
        public virtual System.Nullable<int> TargetWriteOpsPerSec { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A custom static error page to be served when an error occurs.</summary>
    public class ErrorHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The error condition this handler applies to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorCode")]
        public virtual string ErrorCode { get; set; } 

        /// <summary>MIME type of file. If unspecified, "text/html" is assumed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; } 

        /// <summary>Static file content to be served for this error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("staticFile")]
        public virtual string StaticFile { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A single source file which is part of the application to be deployed.</summary>
    public class FileInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The MIME type of the file; if unspecified, the value from Google Cloud Storage will be
        /// used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; } 

        /// <summary>The SHA1 (160 bits) hash of the file in hex.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sha1Sum")]
        public virtual string Sha1Sum { get; set; } 

        /// <summary>The URL source to use to fetch this file. Must be a URL to a resource in Google Cloud Storage in
        /// the form 'http(s)://storage.googleapis.com/\/\'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceUrl")]
        public virtual string SourceUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configure health checking for the VM instances. Unhealthy VM instances will be killed and replaced with
    /// new instances.</summary>
    public class HealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The interval between health checks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("checkInterval")]
        public virtual string CheckInterval { get; set; } 

        /// <summary>Whether to explicitly disable health checks for this instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableHealthCheck")]
        public virtual System.Nullable<bool> DisableHealthCheck { get; set; } 

        /// <summary>The number of consecutive successful health checks before receiving traffic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthyThreshold")]
        public virtual System.Nullable<long> HealthyThreshold { get; set; } 

        /// <summary>The host header to send when performing an HTTP health check (e.g. myapp.appspot.com)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>The number of consecutive failed health checks before an instance is restarted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("restartThreshold")]
        public virtual System.Nullable<long> RestartThreshold { get; set; } 

        /// <summary>The amount of time before the health check is considered failed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeout")]
        public virtual string Timeout { get; set; } 

        /// <summary>The number of consecutive failed health checks before removing traffic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unhealthyThreshold")]
        public virtual System.Nullable<long> UnhealthyThreshold { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Instances are the computing units that App Engine uses to automatically scale an application.</summary>
    public class Instance : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The App Engine release the instance is running on. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appEngineRelease")]
        public virtual string AppEngineRelease { get; set; } 

        /// <summary>Availability of instance. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availability")]
        public virtual string Availability { get; set; } 

        /// <summary>Latency in milliseconds (averaged over the last minute). @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("averageLatency")]
        public virtual System.Nullable<int> AverageLatency { get; set; } 

        /// <summary>Number of errors since the instance was started. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Nullable<long> Errors { get; set; } 

        /// <summary>The relative name/path of the instance within the version. Example: "instance-1"
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Memory usage (in bytes). @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memoryUsage")]
        public virtual System.Nullable<long> MemoryUsage { get; set; } 

        /// <summary>The full path to the Instance resource in the API. Example:
        /// "apps/myapp/services/default/versions/v1/instances/instance-1" @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>QPS for this instance (averaged over the last minute). @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qps")]
        public virtual System.Nullable<float> Qps { get; set; } 

        /// <summary>Number of requests (since the clone was started). @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requests")]
        public virtual System.Nullable<int> Requests { get; set; } 

        /// <summary>Time when instance was started. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTimestamp")]
        public virtual string StartTimestamp { get; set; } 

        /// <summary>For VMEngines instances, the Compute Engine VM ID of the instance. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vmId")]
        public virtual string VmId { get; set; } 

        /// <summary>For VMEngines instances, the name of the Compute Engine VM where the instance lives.
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vmName")]
        public virtual string VmName { get; set; } 

        /// <summary>For VMEngines instances, the status of the Compute Engine VM where the instance lives.
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vmStatus")]
        public virtual string VmStatus { get; set; } 

        /// <summary>For VMEngines instances, whether the instance has been unlocked. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vmUnlocked")]
        public virtual System.Nullable<bool> VmUnlocked { get; set; } 

        /// <summary>For VMEngines instances, the zone where the Compute Engine VM is located. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vmZoneName")]
        public virtual string VmZoneName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Python runtime third-party library required by the application.</summary>
    public class Library : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the library, e.g. "PIL" or "django".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The version of the library to select, or "latest".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for `Instances.ListInstances`.</summary>
    public class ListInstancesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The instances belonging to the requested version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<Instance> Instances { get; set; } 

        /// <summary>Continuation token for fetching the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for LocationService.ListLocations.</summary>
    public class ListLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of locations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<Location> Locations { get; set; } 

        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class ListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<Operation> Operations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for `Services.ListServices`.</summary>
    public class ListServicesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Continuation token for fetching the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The services belonging to the requested application.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("services")]
        public virtual System.Collections.Generic.IList<Service> Services { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for `Versions.ListVersions`.</summary>
    public class ListVersionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Continuation token for fetching the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The versions belonging to the requested application service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versions")]
        public virtual System.Collections.Generic.IList<Version> Versions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A resource that represents Google Cloud Platform location.</summary>
    public class Location : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-
        /// east1"}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>Service-specific metadata. For example the available capacity at the given location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>Resource name for the location, which may vary between implementations. Example: `"projects
        /// /example-project/locations/us-east1"`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata for the given google.cloud.location.Location.</summary>
    public class LocationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A service with manual scaling runs continuously, allowing you to perform complex initialization and
    /// rely on the state of its memory over time.</summary>
    public class ManualScaling : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of instances to assign to the service at the start. This number can later be altered by
        /// using the [Modules API](https://cloud.google.com/appengine/docs/python/modules/functions)
        /// `set_num_instances()` function.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Nullable<int> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Used to specify extra network settings (for VM runtimes only).</summary>
    public class Network : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of ports (or port pairs) to forward from the VM into the app container.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("forwardedPorts")]
        public virtual System.Collections.Generic.IList<string> ForwardedPorts { get; set; } 

        /// <summary>A tag to apply to the VM instance during creation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceTag")]
        public virtual string InstanceTag { get; set; } 

        /// <summary>The Google Compute Engine network where the VMs will be created. If not specified, or empty, the
        /// network named "default" will be used. (The short name should be specified, not the resource path.)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Target scaling by network usage (for VM runtimes only).</summary>
    public class NetworkUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Target bytes per second received.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetReceivedBytesPerSec")]
        public virtual System.Nullable<int> TargetReceivedBytesPerSec { get; set; } 

        /// <summary>Target packets per second received.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetReceivedPacketsPerSec")]
        public virtual System.Nullable<int> TargetReceivedPacketsPerSec { get; set; } 

        /// <summary>Target bytes per second sent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSentBytesPerSec")]
        public virtual System.Nullable<int> TargetSentBytesPerSec { get; set; } 

        /// <summary>Target packets per second sent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSentPacketsPerSec")]
        public virtual System.Nullable<int> TargetSentPacketsPerSec { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the value is `false`, it means the operation is still in progress. If true, the operation is
        /// completed, and either `error` or `response` is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>The error result of the operation in case of failure.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; } 

        /// <summary>Service-specific metadata associated with the operation. It typically contains progress information
        /// and common metadata such as create time. Some services might not provide such metadata. Any method that
        /// returns a long-running operation should document the metadata type, if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The server-assigned name, which is only unique within the same service that originally returns it.
        /// If you use the default HTTP mapping, the `name` should have the format of
        /// `operations/some/unique/name`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The normal response of the operation in case of success. If the original method returns no data on
        /// success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is
        /// `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata for the given google.longrunning.Operation.</summary>
    public class OperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Timestamp that this operation was completed. (Not present if the operation is still in progress.)
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTime { get; set; } 

        /// <summary>Timestamp that this operation was received. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertTime")]
        public virtual string InsertTime { get; set; } 

        /// <summary>API method name that initiated the operation. Example:
        /// "google.appengine.v1beta4.Version.CreateVersion". @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method { get; set; } 

        /// <summary>The type of the operation (deprecated, use method field instead). Example: "create_version".
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationType")]
        public virtual string OperationType { get; set; } 

        /// <summary>Resource that this operation is acting on. Example: "apps/myapp/modules/default".
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual string Target { get; set; } 

        /// <summary>The user who requested this operation. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("user")]
        public virtual string User { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata for the given google.longrunning.Operation.</summary>
    public class OperationMetadataV1 : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Timestamp that this operation was completed. (Not present if the operation is still in progress.)
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTime { get; set; } 

        /// <summary>Timestamp that this operation was received. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertTime")]
        public virtual string InsertTime { get; set; } 

        /// <summary>API method name that initiated the operation. Example: "google.appengine.v1.Version.CreateVersion".
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method { get; set; } 

        /// <summary>Resource that this operation is acting on. Example: "apps/myapp/services/default".
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual string Target { get; set; } 

        /// <summary>The user who requested this operation. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("user")]
        public virtual string User { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata for the given google.longrunning.Operation.</summary>
    public class OperationMetadataV1Beta5 : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Timestamp that this operation was completed. (Not present if the operation is still in progress.)
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTime { get; set; } 

        /// <summary>Timestamp that this operation was received. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertTime")]
        public virtual string InsertTime { get; set; } 

        /// <summary>API method name that initiated the operation. Example:
        /// "google.appengine.v1beta5.Version.CreateVersion". @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method { get; set; } 

        /// <summary>Resource that this operation is acting on. Example: "apps/myapp/services/default".
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual string Target { get; set; } 

        /// <summary>The user who requested this operation. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("user")]
        public virtual string User { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Target scaling by request utilization (for VM runtimes only).</summary>
    public class RequestUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Target number of concurrent requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetConcurrentRequests")]
        public virtual System.Nullable<int> TargetConcurrentRequests { get; set; } 

        /// <summary>Target requests per second.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetRequestCountPerSec")]
        public virtual System.Nullable<int> TargetRequestCountPerSec { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Used to specify how many machine resources an app version needs.</summary>
    public class Resources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>How many CPU cores an app version needs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpu")]
        public virtual System.Nullable<double> Cpu { get; set; } 

        /// <summary>How much disk size, in GB, an app version needs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskGb")]
        public virtual System.Nullable<double> DiskGb { get; set; } 

        /// <summary>How much memory, in GB, an app version needs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memoryGb")]
        public virtual System.Nullable<double> MemoryGb { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Executes a script to handle the request that matches the URL pattern.</summary>
    public class ScriptHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies the path to the script from the application root directory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptPath")]
        public virtual string ScriptPath { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A service is a logical component of an application that can share state and communicate in a secure
    /// fashion with other services. For example, an application that handles customer requests might include separate
    /// services to handle other tasks such as API requests from mobile devices or backend data analysis. Each service
    /// has a collection of versions that define a specific set of code used to implement the functionality of that
    /// service.</summary>
    public class Service : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The relative name/path of the service within the application. Example: "default"
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The full path to the Service resource in the API. Example: "apps/myapp/services/default"
        /// @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A mapping that defines fractional HTTP traffic diversion to different versions within the
        /// service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("split")]
        public virtual TrafficSplit Split { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A reference to a particular snapshot of the source tree used to build and deploy the
    /// application.</summary>
    public class SourceReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. A URI string identifying the repository. Example:
        /// "https://source.developers.google.com/p/app-123/r/default"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repository")]
        public virtual string Repository { get; set; } 

        /// <summary>The canonical (and persistent) identifier of the deployed revision, i.e. any kind of aliases
        /// including tags or branch names are not allowed. Example (git):
        /// "2198322f89e0bb2e25021667c2ed489d1fd34e6b"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revisionId")]
        public virtual string RevisionId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript
    /// source files. Static file handlers describe which files in the application directory are static files, and which
    /// URLs serve them.</summary>
    public class StaticFilesHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>By default, files declared in static file handlers are uploaded as static data and are only served
        /// to end users, they cannot be read by an application. If this field is set to true, the files are also
        /// uploaded as code data so your application can read them. Both uploads are charged against your code and
        /// static data storage resource quotas.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("applicationReadable")]
        public virtual System.Nullable<bool> ApplicationReadable { get; set; } 

        /// <summary>The length of time a static file served by this handler ought to be cached by web proxies and
        /// browsers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expiration")]
        public virtual string Expiration { get; set; } 

        /// <summary>HTTP headers to use for all responses from these URLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpHeaders")]
        public virtual System.Collections.Generic.IDictionary<string,string> HttpHeaders { get; set; } 

        /// <summary>If specified, all files served by this handler will be served using the specified MIME type. If not
        /// specified, the MIME type for a file will be derived from the file's filename extension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; } 

        /// <summary>The path to the static files matched by the URL pattern, from the application root directory. The
        /// path can refer to text matched in groupings in the URL pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>If true, this UrlMap entry does not match the request unless the file referenced by the handler
        /// also exists. If no such file exists, processing will continue with the next UrlMap that matches the
        /// requested URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requireMatchingFile")]
        public virtual System.Nullable<bool> RequireMatchingFile { get; set; } 

        /// <summary>A regular expression that matches the file paths for all files that will be referenced by this
        /// handler.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadPathRegex")]
        public virtual string UploadPathRegex { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
    /// is designed to be: - Simple to use and understand for most users - Flexible enough to meet unexpected needs #
    /// Overview The `Status` message contains three pieces of data: error code, error message, and error details. The
    /// error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The
    /// error message should be a developer-facing English message that helps developers *understand* and *resolve* the
    /// error. If a localized user-facing error message is needed, put the localized message in the error details or
    /// localize it in the client. The optional error details may contain arbitrary information about the error. There
    /// is a predefined set of error detail types in the package `google.rpc` which can be used for common error
    /// conditions. # Language mapping The `Status` message is the logical representation of the error model, but it is
    /// not necessarily the actual wire format. When the `Status` message is exposed in different client libraries and
    /// different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions
    /// in Java, but more likely mapped to some error codes in C. # Other uses The error model and the `Status` message
    /// can be used in a variety of environments, either with or without APIs, to provide a consistent developer
    /// experience across different environments. Example uses of this error model include: - Partial errors. If a
    /// service needs to return partial errors to the client, it may embed the `Status` in the normal response to
    /// indicate the partial errors. - Workflow errors. A typical workflow has multiple steps. Each step may have a
    /// `Status` message for error reporting purpose. - Batch operations. If a client uses batch request and batch
    /// response, the `Status` message should be used directly inside batch response, one for each error sub-response. -
    /// Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
    /// those operations should be represented directly using the `Status` message. - Logging. If some API errors are
    /// stored in logs, the message `Status` could be used directly after any stripping needed for security/privacy
    /// reasons.</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details. There will be a common set of message types for
        /// APIs to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration for traffic splitting for versions within a single service. Traffic splitting allows
    /// traffic directed to the service to be assigned to one of several versions in a fractional way, enabling
    /// experiments and canarying new builds, for example.</summary>
    public class TrafficSplit : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Mapping from service version IDs within the service to fractional (0.000, 1] allocations of traffic
        /// for that version. Each version may only be specified once, but some versions in the service may not have any
        /// traffic allocation. Services that have traffic allocated in this field may not be deleted until the service
        /// is deleted, or their traffic allocation is removed. Allocations must sum to 1. Supports precision up to two
        /// decimal places for IP-based splits and up to three decimal places for cookie-based splits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allocations")]
        public virtual System.Collections.Generic.IDictionary<string,System.Nullable<double>> Allocations { get; set; } 

        /// <summary>Which mechanism should be used as a selector when choosing a version to send a request to. The
        /// traffic selection algorithm will be stable for either type until allocations are changed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shardBy")]
        public virtual string ShardBy { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rules to match an HTTP request and dispatch that request to a service.</summary>
    public class UrlDispatchRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The domain name to match on. Supports '*' (glob) wildcarding on the left-hand side of a '.'. If
        /// empty, all domains will be matched (the same as '*').</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("domain")]
        public virtual string Domain { get; set; } 

        /// <summary>The pathname within the host. This must start with a '/'. A single '*' (glob) can be included at
        /// the end of the path. The sum of the lengths of the domain and path may not exceed 100 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>The resource id of a Service in this application that should service the matched request. The
        /// Service must already exist. Example: "default".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A URL pattern and description of how it should be handled. App Engine can handle URLs by executing
    /// application code, or by serving static files uploaded with the code, such as images, CSS or
    /// JavaScript.</summary>
    public class UrlMap : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Use API Endpoints to handle requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiEndpoint")]
        public virtual ApiEndpointHandler ApiEndpoint { get; set; } 

        /// <summary>For users not logged in, how to handle access to resources with required login. Defaults to
        /// "redirect".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authFailAction")]
        public virtual string AuthFailAction { get; set; } 

        /// <summary>What level of login is required to access this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("login")]
        public virtual string Login { get; set; } 

        /// <summary>`30x` code to use when performing redirects for the `secure` field. A `302` is used by
        /// default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectHttpResponseCode")]
        public virtual string RedirectHttpResponseCode { get; set; } 

        /// <summary>Executes a script to handle the request that matches the URL pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("script")]
        public virtual ScriptHandler Script { get; set; } 

        /// <summary>Configures whether security (HTTPS) should be enforced for this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("securityLevel")]
        public virtual string SecurityLevel { get; set; } 

        /// <summary>Returns the contents of a file, such as an image, as the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("staticFiles")]
        public virtual StaticFilesHandler StaticFiles { get; set; } 

        /// <summary>A URL prefix. This value uses regular expression syntax (and so regexp special characters must be
        /// escaped), but it should not contain groupings. All URLs that begin with this prefix are handled by this
        /// handler, using the portion of the URL after the prefix as part of the file path. This is always
        /// required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlRegex")]
        public virtual string UrlRegex { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Version is a specific set of source code and configuration files deployed to a service.</summary>
    public class Version : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Serving configuration for Google Cloud Endpoints. Only returned in `GET` requests if `view=FULL` is
        /// set. May only be set on create requests; once created, is immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiConfig")]
        public virtual ApiConfigHandler ApiConfig { get; set; } 

        /// <summary>Automatic scaling is the scaling policy that App Engine has used since its inception. It is based
        /// on request rate, response latencies, and other application metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("automaticScaling")]
        public virtual AutomaticScaling AutomaticScaling { get; set; } 

        /// <summary>A service with basic scaling will create an instance when the application receives a request. The
        /// instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent
        /// or driven by user activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicScaling")]
        public virtual BasicScaling BasicScaling { get; set; } 

        /// <summary>Beta settings supplied to the application via metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("betaSettings")]
        public virtual System.Collections.Generic.IDictionary<string,string> BetaSettings { get; set; } 

        /// <summary>Creation time of this version. This will be between the start and end times of the operation that
        /// creates this version. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTime { get; set; } 

        /// <summary>The length of time a static file served by a static file handler ought to be cached by web proxies
        /// and browsers, if the handler does not specify its own expiration. Only returned in `GET` requests if
        /// `view=FULL` is set. May only be set on create requests; once created, is immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultExpiration")]
        public virtual string DefaultExpiration { get; set; } 

        /// <summary>The email address of the user who created this version. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deployer")]
        public virtual string Deployer { get; set; } 

        /// <summary>Code and application artifacts that make up this version. Only returned in `GET` requests if
        /// `view=FULL` is set. May only be set on create requests; once created, is immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deployment")]
        public virtual Deployment Deployment { get; set; } 

        /// <summary>Total size of version files hosted on App Engine disk in bytes. @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskUsageBytes")]
        public virtual System.Nullable<long> DiskUsageBytes { get; set; } 

        /// <summary>The App Engine execution environment to use for this version. Default: "1"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("env")]
        public virtual string Env { get; set; } 

        /// <summary>Environment variables made available to the application. Only returned in `GET` requests if
        /// `view=FULL` is set. May only be set on create requests; once created, is immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("envVariables")]
        public virtual System.Collections.Generic.IDictionary<string,string> EnvVariables { get; set; } 

        /// <summary>Custom static error pages instead of these generic error pages, (limit 10 KB/page) Only returned in
        /// `GET` requests if `view=FULL` is set. May only be set on create requests; once created, is
        /// immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorHandlers")]
        public virtual System.Collections.Generic.IList<ErrorHandler> ErrorHandlers { get; set; } 

        /// <summary>An ordered list of URL Matching patterns that should be applied to incoming requests. The first
        /// matching URL consumes the request, and subsequent handlers are not attempted. Only returned in `GET`
        /// requests if `view=FULL` is set. May only be set on create requests; once created, is immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("handlers")]
        public virtual System.Collections.Generic.IList<UrlMap> Handlers { get; set; } 

        /// <summary>Configure health checking for the VM instances. Unhealthy VM instances will be stopped and replaced
        /// with new instances. Only returned in `GET` requests if `view=FULL` is set. May only be set on create
        /// requests; once created, is immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthCheck")]
        public virtual HealthCheck HealthCheck { get; set; } 

        /// <summary>The relative name/path of the Version within the service. Example: "v1". Version specifiers can
        /// contain lowercase letters, digits, and hyphens. It cannot begin with the prefix `ah-` and the names
        /// `default` and `latest` are reserved and cannot be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Before an application can receive email or XMPP messages, the application must be configured to
        /// enable the service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inboundServices")]
        public virtual System.Collections.Generic.IList<string> InboundServices { get; set; } 

        /// <summary>The instance class to use to run this app. Valid values for AutomaticScaling are `[F1, F2, F4,
        /// F4_1G]`. Valid values for ManualScaling and BasicScaling are `[B1, B2, B4, B8, B4_1G]`. Default: "F1" for
        /// AutomaticScaling, "B1" for ManualScaling and BasicScaling</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceClass")]
        public virtual string InstanceClass { get; set; } 

        /// <summary>Configuration for Python runtime third-party libraries required by the application. Only returned
        /// in `GET` requests if `view=FULL` is set. May only be set on create requests; once created, is
        /// immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("libraries")]
        public virtual System.Collections.Generic.IList<Library> Libraries { get; set; } 

        /// <summary>A service with manual scaling runs continuously, allowing you to perform complex initialization and
        /// rely on the state of its memory over time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("manualScaling")]
        public virtual ManualScaling ManualScaling { get; set; } 

        /// <summary>The full path to the Version resource in the API. Example:
        /// "apps/myapp/services/default/versions/v1". @OutputOnly</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Used to specify extra network settings (for VM runtimes only).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual Network Network { get; set; } 

        /// <summary>Go only. Files that match this pattern will not be built into the app. May only be set on create
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nobuildFilesRegex")]
        public virtual string NobuildFilesRegex { get; set; } 

        /// <summary>Used to specify how many machine resources an app version needs (for VM runtimes only).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual Resources Resources { get; set; } 

        /// <summary>The desired runtime. Values can include python27, java7, go, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("runtime")]
        public virtual string Runtime { get; set; } 

        /// <summary>The current serving status of this version. Only `SERVING` versions will have instances created or
        /// billed for. If this field is unset when a version is created, `SERVING` status will be assumed. It is an
        /// error to explicitly set this field to `SERVING_STATUS_UNSPECIFIED`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingStatus")]
        public virtual string ServingStatus { get; set; } 

        /// <summary>If true, multiple requests can be dispatched to the app at once.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("threadsafe")]
        public virtual System.Nullable<bool> Threadsafe { get; set; } 

        /// <summary>Whether to deploy this app in a VM container.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vm")]
        public virtual System.Nullable<bool> Vm { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
