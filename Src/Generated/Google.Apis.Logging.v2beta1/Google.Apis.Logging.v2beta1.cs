// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Cloud Logging API Version v2beta1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://cloud.google.com/logging/docs/'>Google Cloud Logging API</a>
 *      <tr><th>API Version<td>v2beta1
 *      <tr><th>API Rev<td>20160322 (446)
 *      <tr><th>API Docs
 *          <td><a href='https://cloud.google.com/logging/docs/'>
 *              https://cloud.google.com/logging/docs/</a>
 *      <tr><th>Discovery Name<td>logging
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Cloud Logging API can be found at
 * <a href='https://cloud.google.com/logging/docs/'>https://cloud.google.com/logging/docs/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Logging.v2beta1
{
    /// <summary>The Logging Service.</summary>
    public class LoggingService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v2beta1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public LoggingService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public LoggingService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            entries = new EntriesResource(this);
            monitoredResourceDescriptors = new MonitoredResourceDescriptorsResource(this);
            projects = new ProjectsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "logging"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://logging.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Google Cloud Logging API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View your data across Google Cloud Platform services</summary>
            public static string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only";

            /// <summary>Administrate log data for your projects</summary>
            public static string LoggingAdmin = "https://www.googleapis.com/auth/logging.admin";

            /// <summary>View log data for your projects</summary>
            public static string LoggingRead = "https://www.googleapis.com/auth/logging.read";

            /// <summary>Submit log data for your projects</summary>
            public static string LoggingWrite = "https://www.googleapis.com/auth/logging.write";

        }



        private readonly EntriesResource entries;

        /// <summary>Gets the Entries resource.</summary>
        public virtual EntriesResource Entries
        {
            get { return entries; }
        }

        private readonly MonitoredResourceDescriptorsResource monitoredResourceDescriptors;

        /// <summary>Gets the MonitoredResourceDescriptors resource.</summary>
        public virtual MonitoredResourceDescriptorsResource MonitoredResourceDescriptors
        {
            get { return monitoredResourceDescriptors; }
        }

        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }
    }

    ///<summary>A base abstract class for Logging requests.</summary>
    public abstract class LoggingBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new LoggingBaseServiceRequest instance.</summary>
        protected LoggingBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Xgafv { get; set; }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Alt { get; set; }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Logging parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "entries" collection of methods.</summary>
    public class EntriesResource
    {
        private const string Resource = "entries";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public EntriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Lists log entries. Use this method to retrieve log entries from Cloud Logging. For ways to export
        /// log entries, see [Exporting Logs](/logging/docs/export).</summary>
        /// <param name="body">The body of the request.</param>
        public virtual ListRequest List(Google.Apis.Logging.v2beta1.Data.ListLogEntriesRequest body)
        {
            return new ListRequest(service, body);
        }

        /// <summary>Lists log entries. Use this method to retrieve log entries from Cloud Logging. For ways to export
        /// log entries, see [Exporting Logs](/logging/docs/export).</summary>
        public class ListRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.ListLogEntriesResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, Google.Apis.Logging.v2beta1.Data.ListLogEntriesRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Logging.v2beta1.Data.ListLogEntriesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/entries:list"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Writes log entries to Cloud Logging. All log entries in Cloud Logging are written by this
        /// method.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual WriteRequest Write(Google.Apis.Logging.v2beta1.Data.WriteLogEntriesRequest body)
        {
            return new WriteRequest(service, body);
        }

        /// <summary>Writes log entries to Cloud Logging. All log entries in Cloud Logging are written by this
        /// method.</summary>
        public class WriteRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.WriteLogEntriesResponse>
        {
            /// <summary>Constructs a new Write request.</summary>
            public WriteRequest(Google.Apis.Services.IClientService service, Google.Apis.Logging.v2beta1.Data.WriteLogEntriesRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Logging.v2beta1.Data.WriteLogEntriesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "write"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/entries:write"; }
            }

            /// <summary>Initializes Write parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "monitoredResourceDescriptors" collection of methods.</summary>
    public class MonitoredResourceDescriptorsResource
    {
        private const string Resource = "monitoredResourceDescriptors";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MonitoredResourceDescriptorsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Lists monitored resource descriptors that are used by Cloud Logging.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists monitored resource descriptors that are used by Cloud Logging.</summary>
        public class ListRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.ListMonitoredResourceDescriptorsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Optional. The maximum number of results to return from this request. You must check for
            /// presence of `nextPageToken` to determine if additional results are available, which you can retrieve by
            /// passing the `nextPageToken` value as the `pageToken` parameter in the next request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>Optional. If the `pageToken` parameter is supplied, then the next page of results is retrieved.
            /// The `pageToken` parameter must be set to the value of the `nextPageToken` from the previous
            /// response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/monitoredResourceDescriptors"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            logs = new LogsResource(service);
            metrics = new MetricsResource(service);
            sinks = new SinksResource(service);

        }

        private readonly LogsResource logs;

        /// <summary>Gets the Logs resource.</summary>
        public virtual LogsResource Logs
        {
            get { return logs; }
        }

        /// <summary>The "logs" collection of methods.</summary>
        public class LogsResource
        {
            private const string Resource = "logs";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LogsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Deletes a log and all its log entries. The log will reappear if it receives new
            /// entries.</summary>
            /// <param name="logName">Required. The resource name of the log to delete. Example: `"projects/my-
            /// project/logs/syslog"`.</param>
            public virtual DeleteRequest Delete(string logName)
            {
                return new DeleteRequest(service, logName);
            }

            /// <summary>Deletes a log and all its log entries. The log will reappear if it receives new
            /// entries.</summary>
            public class DeleteRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string logName)
                    : base(service)
                {
                    LogName = logName;
                    InitParameters();
                }


                /// <summary>Required. The resource name of the log to delete. Example: `"projects/my-
                /// project/logs/syslog"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("logName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string LogName { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+logName}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "logName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "logName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/logs/[^/]*$",
                        });
                }

            }
        }
        private readonly MetricsResource metrics;

        /// <summary>Gets the Metrics resource.</summary>
        public virtual MetricsResource Metrics
        {
            get { return metrics; }
        }

        /// <summary>The "metrics" collection of methods.</summary>
        public class MetricsResource
        {
            private const string Resource = "metrics";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public MetricsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates a logs-based metric.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="projectName">The resource name of the project in which to create the metric. Example: `"projects/my-
            /// project-id"`. The new metric must be provided in the request.</param>
            public virtual CreateRequest Create(Google.Apis.Logging.v2beta1.Data.LogMetric body, string projectName)
            {
                return new CreateRequest(service, body, projectName);
            }

            /// <summary>Creates a logs-based metric.</summary>
            public class CreateRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.LogMetric>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Logging.v2beta1.Data.LogMetric body, string projectName)
                    : base(service)
                {
                    ProjectName = projectName;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the project in which to create the metric. Example: `"projects/my-
                /// project-id"`. The new metric must be provided in the request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectName { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Logging.v2beta1.Data.LogMetric Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+projectName}/metrics"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*$",
                        });
                }

            }

            /// <summary>Deletes a logs-based metric.</summary>
            /// <param name="metricName">The resource name of the metric to delete. Example: `"projects/my-project-id/metrics/my-
            /// metric-id"`.</param>
            public virtual DeleteRequest Delete(string metricName)
            {
                return new DeleteRequest(service, metricName);
            }

            /// <summary>Deletes a logs-based metric.</summary>
            public class DeleteRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string metricName)
                    : base(service)
                {
                    MetricName = metricName;
                    InitParameters();
                }


                /// <summary>The resource name of the metric to delete. Example: `"projects/my-project-id/metrics/my-
                /// metric-id"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("metricName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string MetricName { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+metricName}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "metricName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "metricName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/metrics/[^/]*$",
                        });
                }

            }

            /// <summary>Gets a logs-based metric.</summary>
            /// <param name="metricName">The resource name of the desired metric. Example: `"projects/my-project-id/metrics/my-
            /// metric-id"`.</param>
            public virtual GetRequest Get(string metricName)
            {
                return new GetRequest(service, metricName);
            }

            /// <summary>Gets a logs-based metric.</summary>
            public class GetRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.LogMetric>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string metricName)
                    : base(service)
                {
                    MetricName = metricName;
                    InitParameters();
                }


                /// <summary>The resource name of the desired metric. Example: `"projects/my-project-id/metrics/my-
                /// metric-id"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("metricName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string MetricName { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+metricName}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "metricName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "metricName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/metrics/[^/]*$",
                        });
                }

            }

            /// <summary>Lists logs-based metrics.</summary>
            /// <param name="projectName">Required. The resource name of the project containing the metrics. Example: `"projects/my-
            /// project-id"`.</param>
            public virtual ListRequest List(string projectName)
            {
                return new ListRequest(service, projectName);
            }

            /// <summary>Lists logs-based metrics.</summary>
            public class ListRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.ListLogMetricsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string projectName)
                    : base(service)
                {
                    ProjectName = projectName;
                    InitParameters();
                }


                /// <summary>Required. The resource name of the project containing the metrics. Example: `"projects/my-
                /// project-id"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectName { get; private set; }

                /// <summary>Optional. If the `pageToken` parameter is supplied, then the next page of results is
                /// retrieved. The `pageToken` parameter must be set to the value of the `nextPageToken` from the
                /// previous response. The value of `projectName` must be the same as in the previous request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Optional. The maximum number of results to return from this request. You must check for
                /// presence of `nextPageToken` to determine if additional results are available, which you can retrieve
                /// by passing the `nextPageToken` value as the `pageToken` parameter in the next request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+projectName}/metrics"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Creates or updates a logs-based metric.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="metricName">The resource name of the metric to update. Example: `"projects/my-project-id/metrics/my-
            /// metric-id"`. The updated metric must be provided in the request and have the same identifier that is specified in
            /// `metricName`. If the metric does not exist, it is created.</param>
            public virtual UpdateRequest Update(Google.Apis.Logging.v2beta1.Data.LogMetric body, string metricName)
            {
                return new UpdateRequest(service, body, metricName);
            }

            /// <summary>Creates or updates a logs-based metric.</summary>
            public class UpdateRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.LogMetric>
            {
                /// <summary>Constructs a new Update request.</summary>
                public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Logging.v2beta1.Data.LogMetric body, string metricName)
                    : base(service)
                {
                    MetricName = metricName;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the metric to update. Example: `"projects/my-project-id/metrics/my-
                /// metric-id"`. The updated metric must be provided in the request and have the same identifier that is
                /// specified in `metricName`. If the metric does not exist, it is created.</summary>
                [Google.Apis.Util.RequestParameterAttribute("metricName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string MetricName { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Logging.v2beta1.Data.LogMetric Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "update"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PUT"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+metricName}"; }
                }

                /// <summary>Initializes Update parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "metricName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "metricName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/metrics/[^/]*$",
                        });
                }

            }
        }
        private readonly SinksResource sinks;

        /// <summary>Gets the Sinks resource.</summary>
        public virtual SinksResource Sinks
        {
            get { return sinks; }
        }

        /// <summary>The "sinks" collection of methods.</summary>
        public class SinksResource
        {
            private const string Resource = "sinks";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SinksResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates a sink.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="projectName">The resource name of the project in which to create the sink. Example: `"projects/my-
            /// project-id"`. The new sink must be provided in the request.</param>
            public virtual CreateRequest Create(Google.Apis.Logging.v2beta1.Data.LogSink body, string projectName)
            {
                return new CreateRequest(service, body, projectName);
            }

            /// <summary>Creates a sink.</summary>
            public class CreateRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.LogSink>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Logging.v2beta1.Data.LogSink body, string projectName)
                    : base(service)
                {
                    ProjectName = projectName;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the project in which to create the sink. Example: `"projects/my-
                /// project-id"`. The new sink must be provided in the request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectName { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Logging.v2beta1.Data.LogSink Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+projectName}/sinks"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*$",
                        });
                }

            }

            /// <summary>Deletes a sink.</summary>
            /// <param name="sinkName">The resource name of the sink to delete. Example: `"projects/my-project-id/sinks/my-sink-
            /// id"`.</param>
            public virtual DeleteRequest Delete(string sinkName)
            {
                return new DeleteRequest(service, sinkName);
            }

            /// <summary>Deletes a sink.</summary>
            public class DeleteRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string sinkName)
                    : base(service)
                {
                    SinkName = sinkName;
                    InitParameters();
                }


                /// <summary>The resource name of the sink to delete. Example: `"projects/my-project-id/sinks/my-sink-
                /// id"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sinkName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string SinkName { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+sinkName}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "sinkName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sinkName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/sinks/[^/]*$",
                        });
                }

            }

            /// <summary>Gets a sink.</summary>
            /// <param name="sinkName">The resource name of the sink to return. Example: `"projects/my-project-id/sinks/my-sink-
            /// id"`.</param>
            public virtual GetRequest Get(string sinkName)
            {
                return new GetRequest(service, sinkName);
            }

            /// <summary>Gets a sink.</summary>
            public class GetRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.LogSink>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string sinkName)
                    : base(service)
                {
                    SinkName = sinkName;
                    InitParameters();
                }


                /// <summary>The resource name of the sink to return. Example: `"projects/my-project-id/sinks/my-sink-
                /// id"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sinkName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string SinkName { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+sinkName}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "sinkName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sinkName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/sinks/[^/]*$",
                        });
                }

            }

            /// <summary>Lists sinks.</summary>
            /// <param name="projectName">Required. The resource name of the project containing the sinks. Example: `"projects/my-
            /// logging-project"`.</param>
            public virtual ListRequest List(string projectName)
            {
                return new ListRequest(service, projectName);
            }

            /// <summary>Lists sinks.</summary>
            public class ListRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.ListSinksResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string projectName)
                    : base(service)
                {
                    ProjectName = projectName;
                    InitParameters();
                }


                /// <summary>Required. The resource name of the project containing the sinks. Example: `"projects/my-
                /// logging-project"`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectName { get; private set; }

                /// <summary>Optional. If the `pageToken` parameter is supplied, then the next page of results is
                /// retrieved. The `pageToken` parameter must be set to the value of the `nextPageToken` from the
                /// previous response. The value of `projectName` must be the same as in the previous request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Optional. The maximum number of results to return from this request. You must check for
                /// presence of `nextPageToken` to determine if additional results are available, which you can retrieve
                /// by passing the `nextPageToken` value as the `pageToken` parameter in the next request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+projectName}/sinks"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Creates or updates a sink.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="sinkName">The resource name of the sink to update. Example: `"projects/my-project-id/sinks/my-sink-
            /// id"`. The updated sink must be provided in the request and have the same name that is specified in `sinkName`. If
            /// the sink does not exist, it is created.</param>
            public virtual UpdateRequest Update(Google.Apis.Logging.v2beta1.Data.LogSink body, string sinkName)
            {
                return new UpdateRequest(service, body, sinkName);
            }

            /// <summary>Creates or updates a sink.</summary>
            public class UpdateRequest : LoggingBaseServiceRequest<Google.Apis.Logging.v2beta1.Data.LogSink>
            {
                /// <summary>Constructs a new Update request.</summary>
                public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Logging.v2beta1.Data.LogSink body, string sinkName)
                    : base(service)
                {
                    SinkName = sinkName;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the sink to update. Example: `"projects/my-project-id/sinks/my-sink-
                /// id"`. The updated sink must be provided in the request and have the same name that is specified in
                /// `sinkName`. If the sink does not exist, it is created.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sinkName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string SinkName { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Logging.v2beta1.Data.LogSink Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "update"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PUT"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+sinkName}"; }
                }

                /// <summary>Initializes Update parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "sinkName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sinkName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]*/sinks/[^/]*$",
                        });
                }

            }
        }
    }
}

namespace Google.Apis.Logging.v2beta1.Data
{    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance: service Foo {
    /// rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty
    /// JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A common proto for logging HTTP requests.</summary>
    public class HttpRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of HTTP response bytes inserted into cache. Set only when a cache fill was
        /// attempted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheFillBytes")]
        public virtual System.Nullable<long> CacheFillBytes { get; set; } 

        /// <summary>Whether or not an entity was served from cache (with or without validation).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheHit")]
        public virtual System.Nullable<bool> CacheHit { get; set; } 

        /// <summary>Whether or not a cache lookup was attempted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheLookup")]
        public virtual System.Nullable<bool> CacheLookup { get; set; } 

        /// <summary>Whether or not the response was validated with the origin server before being served from cache.
        /// This field is only meaningful if `cache_hit` is True.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheValidatedWithOriginServer")]
        public virtual System.Nullable<bool> CacheValidatedWithOriginServer { get; set; } 

        /// <summary>The referer URL of the request, as defined in [HTTP/1.1 Header Field
        /// Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referer")]
        public virtual string Referer { get; set; } 

        /// <summary>The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples:
        /// `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remoteIp")]
        public virtual string RemoteIp { get; set; } 

        /// <summary>The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestMethod")]
        public virtual string RequestMethod { get; set; } 

        /// <summary>The size of the HTTP request message in bytes, including the request headers and the request
        /// body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestSize")]
        public virtual System.Nullable<long> RequestSize { get; set; } 

        /// <summary>The scheme (http, https), the host name, the path and the query portion of the URL that was
        /// requested. Example: `"http://example.com/some/info?color=red"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestUrl")]
        public virtual string RequestUrl { get; set; } 

        /// <summary>The size of the HTTP response message sent back to the client, in bytes, including the response
        /// headers and the response body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseSize")]
        public virtual System.Nullable<long> ResponseSize { get; set; } 

        /// <summary>The response code indicating the status of response. Examples: 200, 404.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual System.Nullable<int> Status { get; set; } 

        /// <summary>The user agent sent by the client. Example: `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98;
        /// Q312461; .NET CLR 1.0.3705)"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userAgent")]
        public virtual string UserAgent { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A description of a label.</summary>
    public class LabelDescriptor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A human-readable description for the label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The label key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>The type of data that can be assigned to the label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueType")]
        public virtual string ValueType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The parameters to `ListLogEntries`.</summary>
    public class ListLogEntriesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. An [advanced logs filter](/logging/docs/view/advanced_filters). The filter is compared
        /// against all log entries in the projects specified by `projectIds`. Only entries that match the filter are
        /// retrieved. An empty filter matches all log entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; } 

        /// <summary>Optional. How the results should be sorted. Presently, the only permitted values are `"timestamp
        /// asc"` (default) and `"timestamp desc"`. The first option returns entries in order of increasing values of
        /// `LogEntry.timestamp` (oldest first), and the second option returns entries in order of decreasing timestamps
        /// (newest first). Entries with equal timestamps are returned in order of `LogEntry.insertId`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; } 

        /// <summary>Optional. The maximum number of results to return from this request. You must check for presence of
        /// `nextPageToken` to determine if additional results are available, which you can retrieve by passing the
        /// `nextPageToken` value as the `pageToken` parameter in the next request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; } 

        /// <summary>Optional. If the `pageToken` parameter is supplied, then the next page of results is retrieved. The
        /// `pageToken` parameter must be set to the value of the `nextPageToken` from the previous response. The values
        /// of `projectIds`, `filter`, and `orderBy` must be the same as in the previous request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; } 

        /// <summary>Optional. If true, read access to all projects is not required and results will be returned for the
        /// subset of projects for which read access is permitted (empty subset is permitted).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partialSuccess")]
        public virtual System.Nullable<bool> PartialSuccess { get; set; } 

        /// <summary>Required. One or more project IDs or project numbers from which to retrieve log entries. Examples
        /// of a project ID: `"my-project-1A"`, `"1234567890"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectIds")]
        public virtual System.Collections.Generic.IList<string> ProjectIds { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result returned from `ListLogEntries`.</summary>
    public class ListLogEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of log entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IList<LogEntry> Entries { get; set; } 

        /// <summary>If there are more results than were returned, then `nextPageToken` is included in the response. To
        /// get the next set of results, call this method again using the value of `nextPageToken` as
        /// `pageToken`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>If partial_success is true, contains the project ids that had errors and the associated
        /// errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectIdErrors")]
        public virtual System.Collections.Generic.IDictionary<string,Status> ProjectIdErrors { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result returned from ListLogMetrics.</summary>
    public class ListLogMetricsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of logs-based metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<LogMetric> Metrics { get; set; } 

        /// <summary>If there are more results than were returned, then `nextPageToken` is included in the response. To
        /// get the next set of results, call this method again using the value of `nextPageToken` as
        /// `pageToken`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result returned from ListMonitoredResourceDescriptors.</summary>
    public class ListMonitoredResourceDescriptorsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If there are more results than were returned, then `nextPageToken` is included in the response. To
        /// get the next set of results, call this method again using the value of `nextPageToken` as
        /// `pageToken`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>A list of resource descriptors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceDescriptors")]
        public virtual System.Collections.Generic.IList<MonitoredResourceDescriptor> ResourceDescriptors { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result returned from `ListSinks`.</summary>
    public class ListSinksResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If there are more results than were returned, then `nextPageToken` is included in the response. To
        /// get the next set of results, call this method again using the value of `nextPageToken` as
        /// `pageToken`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>A list of sinks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sinks")]
        public virtual System.Collections.Generic.IList<LogSink> Sinks { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An individual entry in a log.</summary>
    public class LogEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Information about the HTTP request associated with this log entry, if
        /// applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpRequest")]
        public virtual HttpRequest HttpRequest { get; set; } 

        /// <summary>Optional. A unique ID for the log entry. If you provide this field, the logging service considers
        /// other log entries in the same log with the same ID as duplicates which can be removed. If omitted, Cloud
        /// Logging will generate a unique ID for this log entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertId")]
        public virtual string InsertId { get; set; } 

        /// <summary>The log entry payload, represented as a structure that is expressed as a JSON object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jsonPayload")]
        public virtual System.Collections.Generic.IDictionary<string,object> JsonPayload { get; set; } 

        /// <summary>Optional. A set of user-defined (key, value) data that provides additional information about the
        /// log entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>Required. The resource name of the log to which this log entry belongs. The format of the name is
        /// `"projects/ /logs/"`. Examples: `"projects/my-projectid/logs/syslog"`,
        /// `"projects/1234567890/logs/library.googleapis.com%2Fbook_log"`. The log ID part of resource name must be
        /// less than 512 characters long and can only include the following characters: upper and lower case
        /// alphanumeric characters: [A-Za-z0-9]; and punctuation characters: forward-slash, underscore, hyphen, and
        /// period. Forward-slash (`/`) characters in the log ID must be URL-encoded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logName")]
        public virtual string LogName { get; set; } 

        /// <summary>Optional. Information about an operation associated with the log entry, if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operation")]
        public virtual LogEntryOperation Operation { get; set; } 

        /// <summary>The log entry payload, represented as a protocol buffer. You can only use `protoPayload` values
        /// that belong to a set of approved types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("protoPayload")]
        public virtual System.Collections.Generic.IDictionary<string,object> ProtoPayload { get; set; } 

        /// <summary>Required. The monitored resource associated with this log entry. Example: a log entry that reports
        /// a database error would be associated with the monitored resource designating the particular database that
        /// reported the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual MonitoredResource Resource { get; set; } 

        /// <summary>Optional. The severity of the log entry. The default value is `LogSeverity.DEFAULT`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severity")]
        public virtual string Severity { get; set; } 

        /// <summary>The log entry payload, represented as a Unicode string (UTF-8).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textPayload")]
        public virtual string TextPayload { get; set; } 

        /// <summary>Optional. The time the event described by the log entry occurred. If omitted, Cloud Logging will
        /// use the time the log entry is written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timestamp")]
        public virtual string Timestamp { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Additional information about a potentially long-running operation with which a log entry is
    /// associated.</summary>
    public class LogEntryOperation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Set this to True if this is the first log entry in the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("first")]
        public virtual System.Nullable<bool> First { get; set; } 

        /// <summary>Required. An arbitrary operation identifier. Log entries with the same identifier are assumed to be
        /// part of the same operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Optional. Set this to True if this is the last log entry in the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("last")]
        public virtual System.Nullable<bool> Last { get; set; } 

        /// <summary>Required. An arbitrary producer identifier. The combination of `id` and `producer` must be globally
        /// unique. Examples for `producer`: `"MyDivision.MyBigCompany.com"`,
        /// "github.com/MyProject/MyApplication"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("producer")]
        public virtual string Producer { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Application log line emitted while processing a request.</summary>
    public class LogLine : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>App-provided log message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logMessage")]
        public virtual string LogMessage { get; set; } 

        /// <summary>Severity of this log entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severity")]
        public virtual string Severity { get; set; } 

        /// <summary>Where in the source code this log message was written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceLocation")]
        public virtual SourceLocation SourceLocation { get; set; } 

        /// <summary>Approximate time when this log entry was made.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("time")]
        public virtual string Time { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Describes a logs-based metric. The value of the metric is the number of log entries that match a logs
    /// filter.</summary>
    public class LogMetric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A description of this metric, which is used in documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>An [advanced logs filter](/logging/docs/view/advanced_filters). Example: `"logName:syslog AND
        /// severity>=ERROR"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; } 

        /// <summary>Required. The client-assigned metric identifier. Example: `"severe_errors"`. Metric identifiers are
        /// limited to 1000 characters and can include only the following characters: `A-Z`, `a-z`, `0-9`, and the
        /// special characters `_-.,+!*',()%/\`. The forward-slash character (`/`) denotes a hierarchy of name pieces,
        /// and it cannot be the first character of the name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Describes a sink used to export log entries outside Cloud Logging.</summary>
    public class LogSink : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The export destination. See [Exporting Logs With Sinks](/logging/docs/api/tasks/exporting-logs).
        /// Examples: `"storage.googleapis.com/a-bucket"`, `"bigquery.googleapis.com/projects/a-project-
        /// id/datasets/a-dataset"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destination")]
        public virtual string Destination { get; set; } 

        /// <summary>An [advanced logs filter](/logging/docs/view/advanced_filters). Only log entries matching that
        /// filter are exported. The filter must be consistent with the log entry format specified by the
        /// `outputVersionFormat` parameter, regardless of the format of the log entry that was originally written to
        /// Cloud Logging. Example (V2 format): `"logName=projects/my-projectid/logs/syslog AND
        /// severity>=ERROR"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; } 

        /// <summary>Required. The client-assigned sink identifier. Example: `"my-severe-errors-to-pubsub"`. Sink
        /// identifiers are limited to 1000 characters and can include only the following characters: `A-Z`, `a-z`,
        /// `0-9`, and the special characters `_-.`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The log entry version to use for this sink's exported log entries. This version does not have to
        /// correspond to the version of the log entry when it was written to Cloud Logging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputVersionFormat")]
        public virtual string OutputVersionFormat { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An object representing a resource that can be used for monitoring, logging, billing, or other purposes.
    /// Examples include virtual machine instances, databases, and storage devices such as disks. The `type` field
    /// identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the
    /// `labels` field identifies the actual resource and its attributes according to the schema. For example, a
    /// particular Compute Engine VM instance could be represented by the following object, because the
    /// MonitoredResourceDescriptor for `"gce_instance"` has labels `"instance_id"` and `"zone"`: { "type":
    /// "gce_instance", "labels": { "instance_id": "my-instance", "zone": "us-central1-a" }}</summary>
    public class MonitoredResource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Values for all of the labels listed in the associated monitored resource descriptor. For
        /// example, Cloud SQL databases use the labels `"database_id"` and `"zone"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>Required. The monitored resource type. This field must match the `type` field of a
        /// MonitoredResourceDescriptor object. For example, the type of a Cloud SQL database is
        /// `"cloudsql_database"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An object that describes the schema of a MonitoredResource object using a type name and a set of
    /// labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of
    /// `"gce_instance"` and specifies the use of the labels `"instance_id"` and `"zone"` to identify particular VM
    /// instances. Different APIs can support different monitored resource types. APIs generally provide a `list` method
    /// that returns the monitored resource descriptors used by the API.</summary>
    public class MonitoredResourceDescriptor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. A detailed description of the monitored resource type that might be used in
        /// documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. A concise name for the monitored resource type that might be displayed in user
        /// interfaces. For example, `"Google Cloud SQL Database"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Required. A set of labels used to describe instances of this monitored resource type. For example,
        /// an individual Google Cloud SQL database is identified by values for the labels `"database_id"` and
        /// `"zone"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<LabelDescriptor> Labels { get; set; } 

        /// <summary>Optional. The resource name of the monitored resource descriptor:
        /// `"projects/{project_id}/monitoredResourceDescriptors/{type}"` where {type} is the value of the `type` field
        /// in this object and {project_id} is a project ID that provides API-specific context for accessing the type.
        /// APIs that do not use project information can use the resource name format
        /// `"monitoredResourceDescriptors/{type}"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Required. The monitored resource type. For example, the type `"cloudsql_database"` represents
        /// databases in Google Cloud SQL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Complete log information about a single HTTP request to an App Engine application.</summary>
    public class RequestLog : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>App Engine release version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appEngineRelease")]
        public virtual string AppEngineRelease { get; set; } 

        /// <summary>Application that handled this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appId")]
        public virtual string AppId { get; set; } 

        /// <summary>An indication of the relative cost of serving this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cost")]
        public virtual System.Nullable<double> Cost { get; set; } 

        /// <summary>Time when the request finished.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTime { get; set; } 

        /// <summary>Whether this request is finished or active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("finished")]
        public virtual System.Nullable<bool> Finished { get; set; } 

        /// <summary>Whether this is the first RequestLog entry for this request. If an active request has several
        /// RequestLog entries written to Cloud Logging, this field will be set for one of them.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("first")]
        public virtual System.Nullable<bool> First { get; set; } 

        /// <summary>Internet host and port number of the resource being requested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>HTTP version of request. Example: `"HTTP/1.1"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpVersion")]
        public virtual string HttpVersion { get; set; } 

        /// <summary>An identifier for the instance that handled the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceId")]
        public virtual string InstanceId { get; set; } 

        /// <summary>If the instance processing this request belongs to a manually scaled module, then this is the
        /// 0-based index of the instance. Otherwise, this value is -1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceIndex")]
        public virtual System.Nullable<int> InstanceIndex { get; set; } 

        /// <summary>Origin IP address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ip")]
        public virtual string Ip { get; set; } 

        /// <summary>Latency of the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latency")]
        public virtual string Latency { get; set; } 

        /// <summary>A list of log lines emitted by the application while serving this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("line")]
        public virtual System.Collections.Generic.IList<LogLine> Line { get; set; } 

        /// <summary>Number of CPU megacycles used to process request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("megaCycles")]
        public virtual System.Nullable<long> MegaCycles { get; set; } 

        /// <summary>Request method. Example: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`, `"DELETE"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method { get; set; } 

        /// <summary>Module of the application that handled this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("moduleId")]
        public virtual string ModuleId { get; set; } 

        /// <summary>The logged-in user who made the request. Most likely, this is the part of the user's email before
        /// the `@` sign. The field value is the same for different requests from the same user, but different users can
        /// have similar names. This information is also available to the application via the App Engine Users API. This
        /// field will be populated starting with App Engine 1.9.21.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nickname")]
        public virtual string Nickname { get; set; } 

        /// <summary>Time this request spent in the pending request queue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pendingTime")]
        public virtual string PendingTime { get; set; } 

        /// <summary>Referrer URL of request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referrer")]
        public virtual string Referrer { get; set; } 

        /// <summary>Globally unique identifier for a request, which is based on the request start time. Request IDs for
        /// requests which started later will compare greater as strings than those for requests which started
        /// earlier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestId")]
        public virtual string RequestId { get; set; } 

        /// <summary>Contains the path and query portion of the URL that was requested. For example, if the URL was
        /// "http://example.com/app?name=val", the resource would be "/app?name=val". The fragment identifier, which is
        /// identified by the `#` character, is not included.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual string Resource { get; set; } 

        /// <summary>Size in bytes sent back to client by request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseSize")]
        public virtual System.Nullable<long> ResponseSize { get; set; } 

        /// <summary>Source code for the application that handled this request. There can be more than one source
        /// reference per deployed application if source code is distributed among multiple repositories.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceReference")]
        public virtual System.Collections.Generic.IList<SourceReference> SourceReference { get; set; } 

        /// <summary>Time when the request started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTime { get; set; } 

        /// <summary>HTTP response status code. Example: 200, 404.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual System.Nullable<int> Status { get; set; } 

        /// <summary>Task name of the request, in the case of an offline request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("taskName")]
        public virtual string TaskName { get; set; } 

        /// <summary>Queue name of the request, in the case of an offline request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("taskQueueName")]
        public virtual string TaskQueueName { get; set; } 

        /// <summary>Cloud Trace identifier for this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("traceId")]
        public virtual string TraceId { get; set; } 

        /// <summary>File or class that handled the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlMapEntry")]
        public virtual string UrlMapEntry { get; set; } 

        /// <summary>User agent that made the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userAgent")]
        public virtual string UserAgent { get; set; } 

        /// <summary>Version of the application that handled this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionId")]
        public virtual string VersionId { get; set; } 

        /// <summary>Whether this was a loading request for the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wasLoadingRequest")]
        public virtual System.Nullable<bool> WasLoadingRequest { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Specifies a location in a source code file.</summary>
    public class SourceLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Source file name. Depending on the runtime environment, this might be a simple name or a fully-
        /// qualified name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("file")]
        public virtual string File { get; set; } 

        /// <summary>Human-readable name of the function or method being invoked, with optional context such as the
        /// class or package name. This information is used in contexts such as the logs viewer, where a file and line
        /// number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java),
        /// `dir/package.func` (Go), `function` (Python).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("functionName")]
        public virtual string FunctionName { get; set; } 

        /// <summary>Line within the source file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("line")]
        public virtual System.Nullable<long> Line { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A reference to a particular snapshot of the source tree used to build and deploy an
    /// application.</summary>
    public class SourceReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. A URI string identifying the repository. Example:
        /// "https://github.com/GoogleCloudPlatform/kubernetes.git"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repository")]
        public virtual string Repository { get; set; } 

        /// <summary>The canonical and persistent identifier of the deployed revision. Example (git):
        /// "0035781c50ec7aa23385dc841529ce8a4b70db1b"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revisionId")]
        public virtual string RevisionId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
    /// is designed to be: - Simple to use and understand for most users - Flexible enough to meet unexpected needs #
    /// Overview The `Status` message contains three pieces of data: error code, error message, and error details. The
    /// error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The
    /// error message should be a developer-facing English message that helps developers *understand* and *resolve* the
    /// error. If a localized user-facing error message is needed, put the localized message in the error details or
    /// localize it in the client. The optional error details may contain arbitrary information about the error. There
    /// is a predefined set of error detail types in the package `google.rpc` which can be used for common error
    /// conditions. # Language mapping The `Status` message is the logical representation of the error model, but it is
    /// not necessarily the actual wire format. When the `Status` message is exposed in different client libraries and
    /// different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions
    /// in Java, but more likely mapped to some error codes in C. # Other uses The error model and the `Status` message
    /// can be used in a variety of environments, either with or without APIs, to provide a consistent developer
    /// experience across different environments. Example uses of this error model include: - Partial errors. If a
    /// service needs to return partial errors to the client, it may embed the `Status` in the normal response to
    /// indicate the partial errors. - Workflow errors. A typical workflow has multiple steps. Each step may have a
    /// `Status` message for error reporting purpose. - Batch operations. If a client uses batch request and batch
    /// response, the `Status` message should be used directly inside batch response, one for each error sub-response. -
    /// Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
    /// those operations should be represented directly using the `Status` message. - Logging. If some API errors are
    /// stored in logs, the message `Status` could be used directly after any stripping needed for security/privacy
    /// reasons.</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details. There will be a common set of message types for
        /// APIs to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The parameters to WriteLogEntries.</summary>
    public class WriteLogEntriesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The log entries to write. The log entries must have values for all required
        /// fields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IList<LogEntry> Entries { get; set; } 

        /// <summary>Optional. User-defined `key:value` items that are added to the `labels` field of each log entry in
        /// `entries`, except when a log entry specifies its own `key:value` item with the same key. Example: `{ "size":
        /// "large", "color":"red" }`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>Optional. A default log resource name for those log entries in `entries` that do not specify their
        /// own `logName`. Example: `"projects/my-project/logs/syslog"`. See LogEntry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logName")]
        public virtual string LogName { get; set; } 

        /// <summary>Optional. Whether valid entries should be written even if some other entries fail due to
        /// INVALID_ARGUMENT or PERMISSION_DENIED errors. If any entry is not written, the response status will be the
        /// error associated with one of the failed entries and include error details in the form of
        /// WriteLogEntriesPartialErrors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partialSuccess")]
        public virtual System.Nullable<bool> PartialSuccess { get; set; } 

        /// <summary>Optional. A default monitored resource for those log entries in `entries` that do not specify their
        /// own `resource`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual MonitoredResource Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result returned from WriteLogEntries. empty</summary>
    public class WriteLogEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
