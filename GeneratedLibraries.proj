<Project ToolsVersion="12.0" DefaultTargets="Package" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    This project file requires that 'nuget' and 'python' (version 2)
    be in the user's %PATH%.

    Targets other than 'Build' support very primitive incrementality: if the
    folder they're going to create is already there, they are skipped.

    To build libraries and create packages from existing code:
      msbuild GeneratedLibraries.proj

    To update discovery documents and generate new code:
      msbuild GeneratedLibraries.proj /t:GenerateFromScratch
    
    To update discovery documents, code, and packages:
      msbuild GeneratedLibraries.proj /t:PackageFromScratch
  -->

  <PropertyGroup>
    <!-- Absolute directory of the location to put generated code -->
    <GeneratedCodeDir>$(MSBuildThisFileDirectory)Src\Generated\</GeneratedCodeDir>
    <!-- Absolute directory of the packages repository -->
    <PackagesDir>$(MSBuildThisFileDirectory)Src\Generated\packages\</PackagesDir>
    <!-- Absolute directory of nupkgs output directory -->
    <NuPkgsDir>$(MSBuildThisFileDirectory)NuPkgs\Generated\</NuPkgsDir>
    <!-- Absolute directory of the NuGet.Config file -->
    <NuGetConfig>$(MSBuildThisFileDirectory)NuGet.Config</NuGetConfig>
  </PropertyGroup>

  <!-- Generated libraries that don't compile -->
  <ItemGroup>
    <!-- Last released May 2015 (1.9.0.1030) -->
    <BrokenProjects Include="$(GeneratedCodeDir)Google.Apis.Games.v1\**" />

    <!-- Last released April 2014 (1.8.1.1750) -->
    <BrokenProjects Include="$(GeneratedCodeDir)Google.Apis.IdentityToolkit.v3\**" />

    <!-- Last released Jan 2015 (1.9.0.860) -->
    <BrokenProjects Include="$(GeneratedCodeDir)Google.Apis.Oauth2.v1\**" />
  </ItemGroup>

  <!-- Download discovery documents used as input to code generation. -->
  <Target Name="DownloadDiscoveryDocuments" Condition="!Exists('DiscoveryJson')">
    <!-- Make DiscoveryJson directory -->
    <MakeDir Directories="DiscoveryJson" />
    <!-- Run python script to download all discovery docs, starting from https://www.googleapis.com/discovery/v1/apis -->
    <!-- 'python -u' turns off buffering so status is printed line-by-line. -->
    <Exec Command="python -u get_discovery_documents.py --destination_dir .\DiscoveryJson" />
  </Target>

  <!-- Generate library projects from discovery documents. -->
  <Target Name="Generate" DependsOnTargets="DownloadDiscoveryDocuments" Condition="!Exists('$(GeneratedCodeDir)')">
    <PropertyGroup>
      <_GenerateLibraryTool>ClientGenerator\generate_library.cmd</_GenerateLibraryTool>
    </PropertyGroup>

    <ItemGroup>
      <_DiscoveryDocument Include="DiscoveryJson\*.json" />
    </ItemGroup>

    <MakeDir Directories="$(GeneratedCodeDir)" />

    <!-- Execute the code-generated for every JSON discovery document -->
    <Exec Command="&quot;$(_GenerateLibraryTool)&quot; --input=&quot;%(_DiscoveryDocument.FullPath)&quot; --language=csharp --output_dir=$(GeneratedCodeDir)" />
  </Target>

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">ReleaseSigned</Configuration>
  </PropertyGroup>

  <!-- Warnings to disable -->
  <PropertyGroup>
    <!-- XML comment on 'construct' has badly formed XML â€” 'reason' -->
    <NoWarn>$(NoWarn),1570</NoWarn>

    <!-- XML comment is not placed on a valid language element -->
    <NoWarn>$(NoWarn),1587</NoWarn>

    <!-- Missing XML comment for publicly visible type or member 'Type_or_Member' -->
    <NoWarn>$(NoWarn),1591</NoWarn>
  </PropertyGroup>
  
  <Target Name="NuGetRestore" DependsOnTargets="Generate">
    <!-- nuget restore all packages for non-netstandard builds. All generated libraries have the same dependencies -->
    <Exec Command="nuget restore Src\Generated\Google.Apis.Discovery.v1\Profile259\packages.config -PackagesDirectory $(PackagesDir) -ConfigFile $(NuGetConfig)" />
    <Exec Command="nuget restore Src\Generated\Google.Apis.Discovery.v1\Profile328\packages.config -PackagesDirectory $(PackagesDir) -ConfigFile $(NuGetConfig)" />
    <!-- netstandard projects must be individually restored, creating the project.lock.json files if it doesn't already exist -->
    <ItemGroup>
      <ProjectJsonAll Include="$(GeneratedCodeDir)**\project.json" Exclude="@(BrokenProjects)" />
      <ProjectJson Include="@(ProjectJsonAll)" Condition="!Exists('%(RootDir)%(Directory)project.lock.json')" />
    </ItemGroup>
    <!-- Only perform restore if anything actually needs restoring -->
    <Exec
        Condition="'@(ProjectJson)'!=''"
        Command="nuget restore @(ProjectJson) -PackagesDirectory $(PackagesDir) -ConfigFile $(NuGetConfig)" />
  </Target>

  <!-- Build generated projects. Reply on C#'s incremental build for incrementality -->
  <Target Name="Build" DependsOnTargets="Generate;NuGetRestore">
    <!-- Build all projects that are not broken -->
    <ItemGroup>
      <Projects Include="$(GeneratedCodeDir)**\*.csproj" Exclude="@(BrokenProjects)" />
    </ItemGroup>
    <MSBuild
        Projects="@(Projects)"
        BuildInParallel="True"
        Targets="Build"
        Properties="Configuration=$(Configuration);NugetPackagesDirectory=$(PackagesDir);NoWarn=$(NoWarn)" />
  </Target>

  <!-- Create NuGet packages with binaries built from generated projects. -->
  <Target Name="Package" DependsOnTargets="Build" Condition="!Exists('$(NuPkgsDir)')">
    <!-- Make Nupkgs output directory -->
    <MakeDir Directories="$(NuPkgsDir)" />

    <ItemGroup>
      <NuSpec Include="$(GeneratedCodeDir)*\*.nuspec" Exclude="@(BrokenProjects)" />
    </ItemGroup>

    <Exec Command="nuget pack &quot;%(NuSpec.FullPath)&quot; -OutputDirectory $(NuPkgsDir)" />
  </Target>

  <!-- Remove all downloaded and generated artifacts. -->
  <Target Name="Reset">
    <RemoveDir Directories="DiscoveryJson;$(GeneratedCodeDir);$(NuPkgsDir)" />
  </Target>
  <!-- Alias Clean to Reset -->
  <Target Name="Clean" DependsOnTargets="Reset" />

  <Target Name="CleanGenerated">
    <RemoveDir Directories="$(GeneratedCodeDir);$(NuPkgsDir)" />
  </Target>
  
  <Target Name="CleanNuGetRestore">
    <RemoveDir Directories="$(PackagesDir);$(NuPkgsDir)" />
  </Target>

  <Target Name="Regenerate" DependsOnTargets="CleanGenerated;Generate" />

  <!-- Some common bundled targets. -->
  <Target Name="GenerateFromScratch" DependsOnTargets="Reset;Generate" />
  <Target Name="PackageFromScratch" DependsOnTargets="Reset;Package" />
</Project>
